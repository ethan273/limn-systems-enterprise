generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_authorizations {
  id                    String                     @id @db.Uuid
  authorization_id      String                     @unique
  client_id             String                     @db.Uuid
  user_id               String?                    @db.Uuid
  redirect_uri          String
  scope                 String
  state                 String?
  resource              String?
  code_challenge        String?
  code_challenge_method code_challenge_method?
  response_type         oauth_response_type        @default(code)
  status                oauth_authorization_status @default(pending)
  authorization_code    String?                    @unique
  created_at            DateTime                   @default(now()) @db.Timestamptz(6)
  expires_at            DateTime                   @default(dbgenerated("(now() + '00:03:00'::interval)")) @db.Timestamptz(6)
  approved_at           DateTime?                  @db.Timestamptz(6)
  oauth_clients         oauth_clients              @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                 users?                     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_clients {
  id                   String                  @id @db.Uuid
  client_secret_hash   String?
  registration_type    oauth_registration_type
  redirect_uris        String
  grant_types          String
  client_name          String?
  client_uri           String?
  logo_uri             String?
  created_at           DateTime                @default(now()) @db.Timestamptz(6)
  updated_at           DateTime                @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?               @db.Timestamptz(6)
  client_type          oauth_client_type       @default(confidential)
  oauth_authorizations oauth_authorizations[]
  oauth_consents       oauth_consents[]
  sessions             sessions[]

  @@index([deleted_at])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model oauth_consents {
  id            String        @id @db.Uuid
  user_id       String        @db.Uuid
  client_id     String        @db.Uuid
  scopes        String
  granted_at    DateTime      @default(now()) @db.Timestamptz(6)
  revoked_at    DateTime?     @db.Timestamptz(6)
  oauth_clients oauth_clients @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, client_id], map: "oauth_consents_user_client_unique")
  @@index([user_id, granted_at(sort: Desc)], map: "oauth_consents_user_order_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id              String           @id @db.Uuid
  user_id         String           @db.Uuid
  created_at      DateTime?        @db.Timestamptz(6)
  updated_at      DateTime?        @db.Timestamptz(6)
  factor_id       String?          @db.Uuid
  aal             aal_level?
  not_after       DateTime?        @db.Timestamptz(6)
  refreshed_at    DateTime?        @db.Timestamp(6)
  user_agent      String?
  ip              String?          @db.Inet
  tag             String?
  oauth_client_id String?          @db.Uuid
  mfa_amr_claims  mfa_amr_claims[]
  refresh_tokens  refresh_tokens[]
  oauth_clients   oauth_clients?   @relation(fields: [oauth_client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([oauth_client_id])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  disabled          Boolean?
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@index([resource_id], map: "sso_providers_resource_id_pattern_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                                                           String?                             @db.Uuid
  id                                                                    String                              @id @db.Uuid
  aud                                                                   String?                             @db.VarChar(255)
  role                                                                  String?                             @db.VarChar(255)
  email                                                                 String?                             @db.VarChar(255)
  encrypted_password                                                    String?                             @db.VarChar(255)
  email_confirmed_at                                                    DateTime?                           @db.Timestamptz(6)
  invited_at                                                            DateTime?                           @db.Timestamptz(6)
  confirmation_token                                                    String?                             @db.VarChar(255)
  confirmation_sent_at                                                  DateTime?                           @db.Timestamptz(6)
  recovery_token                                                        String?                             @db.VarChar(255)
  recovery_sent_at                                                      DateTime?                           @db.Timestamptz(6)
  email_change_token_new                                                String?                             @db.VarChar(255)
  email_change                                                          String?                             @db.VarChar(255)
  email_change_sent_at                                                  DateTime?                           @db.Timestamptz(6)
  last_sign_in_at                                                       DateTime?                           @db.Timestamptz(6)
  raw_app_meta_data                                                     Json?
  raw_user_meta_data                                                    Json?
  is_super_admin                                                        Boolean?
  created_at                                                            DateTime?                           @db.Timestamptz(6)
  updated_at                                                            DateTime?                           @db.Timestamptz(6)
  phone                                                                 String?                             @unique
  phone_confirmed_at                                                    DateTime?                           @db.Timestamptz(6)
  phone_change                                                          String?                             @default("")
  phone_change_token                                                    String?                             @default("") @db.VarChar(255)
  phone_change_sent_at                                                  DateTime?                           @db.Timestamptz(6)
  confirmed_at                                                          DateTime?                           @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current                                            String?                             @default("") @db.VarChar(255)
  email_change_confirm_status                                           Int?                                @default(0) @db.SmallInt
  banned_until                                                          DateTime?                           @db.Timestamptz(6)
  reauthentication_token                                                String?                             @default("") @db.VarChar(255)
  reauthentication_sent_at                                              DateTime?                           @db.Timestamptz(6)
  is_sso_user                                                           Boolean                             @default(false)
  deleted_at                                                            DateTime?                           @db.Timestamptz(6)
  is_anonymous                                                          Boolean                             @default(false)
  identities                                                            identities[]
  mfa_factors                                                           mfa_factors[]
  oauth_authorizations                                                  oauth_authorizations[]
  oauth_consents                                                        oauth_consents[]
  one_time_tokens                                                       one_time_tokens[]
  sessions                                                              sessions[]
  admin_security_events                                                 admin_security_events[]
  admin_sessions                                                        admin_sessions[]
  analytics_dashboard_widgets                                           analytics_dashboard_widgets[]
  api_credential_audit_logs                                             api_credential_audit_logs[]
  api_credential_rotations                                              api_credential_rotations[]
  api_credentials_api_credentials_created_byTousers                     api_credentials[]                   @relation("api_credentials_created_byTousers")
  api_credentials_api_credentials_updated_byTousers                     api_credentials[]                   @relation("api_credentials_updated_byTousers")
  app_settings                                                          app_settings?
  automation_rules                                                      automation_rules[]
  budgets                                                               budgets[]
  client_files                                                          client_files[]
  collection_activities_collection_activities_created_byTousers         collection_activities[]             @relation("collection_activities_created_byTousers")
  collection_activities_collection_activities_updated_byTousers         collection_activities[]             @relation("collection_activities_updated_byTousers")
  concepts                                                              concepts[]
  customer_notifications                                                customer_notifications[]
  customer_portal_access_customer_portal_access_invited_byTousers       customer_portal_access[]            @relation("customer_portal_access_invited_byTousers")
  customer_portal_access_customer_portal_access_user_idTousers          customer_portal_access[]            @relation("customer_portal_access_user_idTousers")
  customer_portal_users                                                 customer_portal_users[]
  customer_portals_customer_portals_created_byTousers                   customer_portals[]                  @relation("customer_portals_created_byTousers")
  customer_portals_customer_portals_updated_byTousers                   customer_portals[]                  @relation("customer_portals_updated_byTousers")
  customers_customers_created_byTousers                                 customers[]                         @relation("customers_created_byTousers")
  customers_customers_portal_access_granted_byTousers                   customers[]                         @relation("customers_portal_access_granted_byTousers")
  customers_customers_portal_created_byTousers                          customers[]                         @relation("customers_portal_created_byTousers")
  customers_customers_user_idTousers                                    customers[]                         @relation("customers_user_idTousers")
  deals_deals_assigned_toTousers                                        deals[]                             @relation("deals_assigned_toTousers")
  deals_deals_created_byTousers                                         deals[]                             @relation("deals_created_byTousers")
  design_approvals_design_approvals_approved_byTousers                  design_approvals[]                  @relation("design_approvals_approved_byTousers")
  design_approvals_design_approvals_created_byTousers                   design_approvals[]                  @relation("design_approvals_created_byTousers")
  design_approvals_design_approvals_reviewed_byTousers                  design_approvals[]                  @relation("design_approvals_reviewed_byTousers")
  design_approvals_design_approvals_submitted_byTousers                 design_approvals[]                  @relation("design_approvals_submitted_byTousers")
  design_approvals_design_approvals_updated_byTousers                   design_approvals[]                  @relation("design_approvals_updated_byTousers")
  design_briefs_design_briefs_approved_byTousers                        design_briefs[]                     @relation("design_briefs_approved_byTousers")
  design_briefs_design_briefs_created_byTousers                         design_briefs[]                     @relation("design_briefs_created_byTousers")
  design_deliverables                                                   design_deliverables[]
  design_files                                                          design_files[]
  design_revisions_design_revisions_approved_byTousers                  design_revisions[]                  @relation("design_revisions_approved_byTousers")
  design_revisions_design_revisions_requested_byTousers                 design_revisions[]                  @relation("design_revisions_requested_byTousers")
  email_campaigns                                                       email_campaigns[]
  export_configurations                                                 export_configurations[]
  export_history                                                        export_history[]
  factory_review_comments_factory_review_comments_author_idTousers      factory_review_comments[]           @relation("factory_review_comments_author_idTousers")
  factory_review_comments_factory_review_comments_resolved_byTousers    factory_review_comments[]           @relation("factory_review_comments_resolved_byTousers")
  factory_review_documents                                              factory_review_documents[]
  factory_review_photos                                                 factory_review_photos[]
  factory_review_sessions                                               factory_review_sessions[]
  financial_periods                                                     financial_periods[]
  invoice_templates                                                     invoice_templates[]
  manufacturer_communications                                           manufacturer_communications[]
  material_collection_audit                                             material_collection_audit[]
  material_price_history                                                material_price_history[]
  mood_boards                                                           mood_boards[]
  notification_queue                                                    notification_queue[]
  oauth_tokens                                                          oauth_tokens[]
  offline_sync_queue                                                    offline_sync_queue[]
  ordered_items_production                                              ordered_items_production[]
  orders_old                                                            orders_old[]
  organization_members_organization_members_invited_byTousers           organization_members[]              @relation("organization_members_invited_byTousers")
  organization_members_organization_members_user_idTousers              organization_members[]              @relation("organization_members_user_idTousers")
  organization_permissions_organization_permissions_granted_byTousers   organization_permissions[]          @relation("organization_permissions_granted_byTousers")
  organization_permissions_organization_permissions_user_idTousers      organization_permissions[]          @relation("organization_permissions_user_idTousers")
  pandadoc_documents                                                    pandadoc_documents[]
  partner_contacts                                                      partner_contacts[]
  partner_documents                                                     partner_documents[]
  partners                                                              partners?
  password_reset_tokens                                                 password_reset_tokens[]
  permission_conditions_permission_conditions_created_byTousers         permission_conditions[]             @relation("permission_conditions_created_byTousers")
  permission_conditions_permission_conditions_user_idTousers            permission_conditions[]             @relation("permission_conditions_user_idTousers")
  permission_delegations_permission_delegations_delegatee_idTousers     permission_delegations[]            @relation("permission_delegations_delegatee_idTousers")
  permission_delegations_permission_delegations_delegator_idTousers     permission_delegations[]            @relation("permission_delegations_delegator_idTousers")
  permission_delegations_permission_delegations_revoked_byTousers       permission_delegations[]            @relation("permission_delegations_revoked_byTousers")
  permission_requests_permission_requests_approver_idTousers            permission_requests[]               @relation("permission_requests_approver_idTousers")
  permission_requests_permission_requests_requester_idTousers           permission_requests[]               @relation("permission_requests_requester_idTousers")
  permission_templates                                                  permission_templates[]
  permission_usage_log                                                  permission_usage_log[]
  portal_activity_log                                                   portal_activity_log[]
  portal_configurations_portal_configurations_created_byTousers         portal_configurations[]             @relation("portal_configurations_created_byTousers")
  portal_configurations_portal_configurations_updated_byTousers         portal_configurations[]             @relation("portal_configurations_updated_byTousers")
  portal_documents                                                      portal_documents[]
  portal_invitations                                                    portal_invitations[]
  portal_users_portal_users_auth_user_idTousers                         portal_users?                       @relation("portal_users_auth_user_idTousers")
  portal_users_portal_users_created_byTousers                           portal_users[]                      @relation("portal_users_created_byTousers")
  portal_users_portal_users_updated_byTousers                           portal_users[]                      @relation("portal_users_updated_byTousers")
  production_events                                                     production_events[]
  production_milestones                                                 production_milestones[]
  production_orders                                                     production_orders[]
  production_payments                                                   production_payments[]
  production_progress                                                   production_progress[]
  production_stage_history_production_stage_history_approved_byTousers  production_stage_history[]          @relation("production_stage_history_approved_byTousers")
  production_stage_history_production_stage_history_completed_byTousers production_stage_history[]          @relation("production_stage_history_completed_byTousers")
  production_tracking                                                   production_tracking[]
  profiles                                                              profiles?
  prototype_documents_prototype_documents_approved_byTousers            prototype_documents[]               @relation("prototype_documents_approved_byTousers")
  prototype_documents_prototype_documents_uploaded_byTousers            prototype_documents[]               @relation("prototype_documents_uploaded_byTousers")
  prototype_feedback_prototype_feedback_addressed_byTousers             prototype_feedback[]                @relation("prototype_feedback_addressed_byTousers")
  prototype_feedback_prototype_feedback_submitted_byTousers             prototype_feedback[]                @relation("prototype_feedback_submitted_byTousers")
  prototype_milestones_prototype_milestones_assigned_toTousers          prototype_milestones[]              @relation("prototype_milestones_assigned_toTousers")
  prototype_milestones_prototype_milestones_completed_byTousers         prototype_milestones[]              @relation("prototype_milestones_completed_byTousers")
  prototype_photo_comments_prototype_photo_comments_author_idTousers    prototype_photo_comments[]          @relation("prototype_photo_comments_author_idTousers")
  prototype_photo_comments_prototype_photo_comments_resolved_byTousers  prototype_photo_comments[]          @relation("prototype_photo_comments_resolved_byTousers")
  prototype_photos                                                      prototype_photos[]
  prototype_production                                                  prototype_production[]
  prototype_review_actions_prototype_review_actions_assigned_toTousers  prototype_review_actions[]          @relation("prototype_review_actions_assigned_toTousers")
  prototype_review_actions_prototype_review_actions_verified_byTousers  prototype_review_actions[]          @relation("prototype_review_actions_verified_byTousers")
  prototype_review_participants                                         prototype_review_participants[]
  prototype_reviews                                                     prototype_reviews[]
  prototype_revisions_prototype_revisions_approved_byTousers            prototype_revisions[]               @relation("prototype_revisions_approved_byTousers")
  prototype_revisions_prototype_revisions_created_byTousers             prototype_revisions[]               @relation("prototype_revisions_created_byTousers")
  prototypes                                                            prototypes[]
  push_subscriptions                                                    push_subscriptions[]
  pwa_devices                                                           pwa_devices[]
  pwa_subscriptions                                                     pwa_subscriptions[]
  qc_capture_templates_qc_capture_templates_created_byTousers           qc_capture_templates[]              @relation("qc_capture_templates_created_byTousers")
  qc_capture_templates_qc_capture_templates_updated_byTousers           qc_capture_templates[]              @relation("qc_capture_templates_updated_byTousers")
  qc_checkpoint_results                                                 qc_checkpoint_results[]
  qc_issue_comments                                                     qc_issue_comments[]
  qc_testers                                                            qc_testers[]
  quickbooks_auth                                                       quickbooks_auth[]
  quickbooks_connections                                                quickbooks_connections[]
  quickbooks_oauth_states                                               quickbooks_oauth_states[]
  quickbooks_payment_reconciliation                                     quickbooks_payment_reconciliation[]
  quickbooks_sync_log                                                   quickbooks_sync_log[]
  saved_searches                                                        saved_searches[]
  shipments                                                             shipments[]
  shipping_quotes                                                       shipping_quotes[]
  shop_drawing_approvals                                                shop_drawing_approvals[]
  shop_drawing_comments_shop_drawing_comments_author_idTousers          shop_drawing_comments[]             @relation("shop_drawing_comments_author_idTousers")
  shop_drawing_comments_shop_drawing_comments_resolved_byTousers        shop_drawing_comments[]             @relation("shop_drawing_comments_resolved_byTousers")
  shop_drawing_versions                                                 shop_drawing_versions[]
  shop_drawings_shop_drawings_created_byTousers                         shop_drawings[]                     @relation("shop_drawings_created_byTousers")
  shop_drawings_shop_drawings_designer_approved_byTousers               shop_drawings[]                     @relation("shop_drawings_designer_approved_byTousers")
  shop_drawings_shop_drawings_limn_approved_byTousers                   shop_drawings[]                     @relation("shop_drawings_limn_approved_byTousers")
  sms_campaigns_sms_campaigns_approved_byTousers                        sms_campaigns[]                     @relation("sms_campaigns_approved_byTousers")
  sms_campaigns_sms_campaigns_created_byTousers                         sms_campaigns[]                     @relation("sms_campaigns_created_byTousers")
  sms_scheduled_jobs                                                    sms_scheduled_jobs[]
  sso_login_audit                                                       sso_login_audit[]
  sso_user_mappings                                                     sso_user_mappings[]
  system_logs                                                           system_logs[]
  task_activity                                                         task_activity[]
  task_comments                                                         task_comments[]
  team_members                                                          team_members[]
  teams                                                                 teams[]
  user_dashboards                                                       user_dashboards[]
  user_feature_overrides_user_feature_overrides_overridden_byTousers    user_feature_overrides[]            @relation("user_feature_overrides_overridden_byTousers")
  user_feature_overrides_user_feature_overrides_user_idTousers          user_feature_overrides[]            @relation("user_feature_overrides_user_idTousers")
  user_permissions                                                      user_permissions[]
  user_preferences                                                      user_preferences?
  user_profiles_user_profiles_idTousers                                 user_profiles?                      @relation("user_profiles_idTousers")
  user_profiles_user_profiles_user_idTousers                            user_profiles?                      @relation("user_profiles_user_idTousers")
  user_roles                                                            user_roles[]
  verification_logs                                                     verification_logs[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model activities {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type         String?
  title        String?
  description  String?
  lead_id      String?
  contact_id   String?
  customer_id  String?
  created_by   String?
  scheduled_at String?
  completed_at String?
  status       String?
  metadata     Json?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_activities_created_at")
  @@index([status], map: "idx_activities_status")
  @@index([updated_at], map: "idx_activities_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model additional_specs {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  spec_category     String?
  spec_name         String?
  spec_type         String?
  default_value     String?
  min_value         Int?
  max_value         Int?
  unit              String?
  price_impact      Int?
  affects_lead_time Boolean?
  additional_days   Int?
  is_required       Boolean?
  is_active         Boolean?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_additional_specs_created_at")
  @@index([is_active], map: "idx_additional_specs_is_active")
  @@index([updated_at], map: "idx_additional_specs_updated_at")
  @@index([is_active], map: "idx_specs_active")
  @@index([spec_category], map: "idx_specs_category")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model addresses {
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  address_line_1 String       @db.VarChar(255)
  address_line_2 String?      @db.VarChar(255)
  city           String       @db.VarChar(100)
  state_province String?      @db.VarChar(100)
  postal_code    String?      @db.VarChar(20)
  country        String       @default("USA") @db.VarChar(100)
  address_type   address_type @default(Business)
  is_primary     Boolean      @default(false)
  contact_id     String?      @db.Uuid
  lead_id        String?      @db.Uuid
  customer_id    String?      @db.Uuid
  created_at     DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?    @default(now()) @db.Timestamptz(6)
  created_by     String?      @db.Uuid
  contacts       contacts?    @relation(fields: [contact_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customers      customers?   @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  leads          leads?       @relation(fields: [lead_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  projects       projects[]

  @@index([contact_id], map: "idx_addresses_contact_id")
  @@index([created_at], map: "idx_addresses_created_at")
  @@index([customer_id], map: "idx_addresses_customer_id")
  @@index([is_primary], map: "idx_addresses_is_primary")
  @@index([lead_id], map: "idx_addresses_lead_id")
  @@index([updated_at], map: "idx_addresses_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_audit_log {
  id            String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  action        String?
  user_id       String?
  user_email    String?
  resource_type String?
  resource_id   String?
  metadata      Json?
  ip_address    String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_admin_audit_log_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_permissions {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role_name  String
  resource   String
  action     String
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([role_name, resource, action])
  @@index([created_at], map: "idx_admin_permissions_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_security_events {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_type String
  user_id    String?   @db.Uuid
  ip_address String?   @db.Inet
  user_agent String?
  metadata   Json?     @default("{}")
  severity   String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_admin_security_events_created_at")
  @@index([user_id], map: "idx_admin_security_events_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_sessions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  session_token String?   @unique
  ip_address    String?   @db.Inet
  user_agent    String?
  is_active     Boolean?  @default(true)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  ended_at      DateTime? @db.Timestamp(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_admin_sessions_created_at")
  @@index([is_active], map: "idx_admin_sessions_is_active")
  @@index([user_id], map: "idx_admin_sessions_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model admin_settings {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category   String
  key        String
  value      Json?
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([category, key])
  @@index([updated_at], map: "idx_admin_settings_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model analytics_dashboard_widgets {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  widget_name              String    @db.VarChar(255)
  widget_type              String?   @db.VarChar(50)
  data_source              String?   @db.VarChar(100)
  query_config             Json
  display_config           Json?     @default("{}")
  refresh_interval_seconds Int?      @default(300)
  is_active                Boolean?  @default(true)
  created_by               String?   @db.Uuid
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  updated_at               DateTime? @default(now()) @db.Timestamptz(6)
  users                    users?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_analytics_dashboard_widgets_created_at")
  @@index([created_by], map: "idx_analytics_dashboard_widgets_created_by")
  @@index([is_active], map: "idx_analytics_dashboard_widgets_is_active")
  @@index([updated_at], map: "idx_analytics_dashboard_widgets_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model analytics_events {
  id               String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flipbook_id      String               @db.Uuid
  event_type       analytics_event_type
  user_id          String?              @db.Uuid
  session_id       String?              @db.Uuid
  page_number      Int?
  hotspot_id       String?              @db.Uuid
  duration_seconds Int?
  user_agent       String?
  ip_address       String?              @db.VarChar(45)
  referrer         String?
  device_type      String?              @db.VarChar(50)
  metadata         Json?
  created_at       DateTime             @default(now()) @db.Timestamptz(6)
  flipbooks        flipbooks            @relation(fields: [flipbook_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_analytics_events_flipbook")
  user_profiles    user_profiles?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_analytics_events_user")

  @@index([created_at(sort: Desc)], map: "idx_analytics_events_created_at")
  @@index([flipbook_id], map: "idx_analytics_events_flipbook")
  @@index([event_type], map: "idx_analytics_events_type")
  @@index([user_id], map: "idx_analytics_events_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_credential_audit_logs {
  id              String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credential_id   String          @db.Uuid
  action          String          @db.VarChar(50)
  performed_by    String?         @db.Uuid
  ip_address      String?         @db.VarChar(45)
  user_agent      String?         @db.VarChar(500)
  success         Boolean?        @default(true)
  error_message   String?
  metadata        Json?
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  api_credentials api_credentials @relation(fields: [credential_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_audit_credential")
  users           users?          @relation(fields: [performed_by], references: [id], onUpdate: NoAction, map: "fk_audit_user")

  @@index([created_at], map: "idx_api_credential_audit_logs_created_at")
  @@index([credential_id], map: "idx_api_credential_audit_logs_credential_id")
  @@index([performed_by], map: "idx_api_credential_audit_logs_performed_by")
  @@index([action], map: "idx_audit_action")
  @@index([created_at], map: "idx_audit_created")
  @@index([credential_id], map: "idx_audit_credential")
  @@index([performed_by], map: "idx_audit_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_credential_rotations {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credential_id          String          @db.Uuid
  rotation_type          String          @db.VarChar(50)
  old_credential_id      String?         @db.Uuid
  performed_by           String?         @db.Uuid
  success                Boolean?        @default(true)
  error_message          String?
  rollback_at            DateTime?       @db.Timestamptz(6)
  metadata               Json?
  created_at             DateTime?       @default(now()) @db.Timestamptz(6)
  status                 String?         @default("idle") @db.VarChar(20)
  old_credential_backup  String?
  new_credential_preview String?         @db.VarChar(10)
  initiated_by           String?         @db.Uuid
  started_at             DateTime?       @default(now()) @db.Timestamptz(6)
  grace_period_ends_at   DateTime?       @db.Timestamptz(6)
  completed_at           DateTime?       @db.Timestamptz(6)
  api_credentials        api_credentials @relation(fields: [credential_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rotation_credential")
  users                  users?          @relation(fields: [performed_by], references: [id], onUpdate: NoAction, map: "fk_rotation_user")

  @@index([created_at], map: "idx_api_credential_rotations_created_at")
  @@index([credential_id], map: "idx_api_credential_rotations_credential_id")
  @@index([performed_by], map: "idx_api_credential_rotations_performed_by")
  @@index([status], map: "idx_api_credential_rotations_status")
  @@index([created_at], map: "idx_rotation_created")
  @@index([credential_id], map: "idx_rotation_credential")
  @@index([started_at], map: "idx_rotation_started")
  @@index([status], map: "idx_rotation_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_credentials {
  id                                      String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  service_name                            String                      @unique @db.VarChar(100)
  display_name                            String                      @db.VarChar(200)
  description                             String?
  credential_type                         String                      @default("api_key") @db.VarChar(50)
  credentials                             Json?
  environment                             String?                     @default("production") @db.VarChar(50)
  is_active                               Boolean                     @default(true)
  last_used_at                            DateTime?                   @db.Timestamptz(6)
  expires_at                              DateTime?                   @db.Timestamptz(6)
  created_by                              String?                     @db.Uuid
  updated_by                              String?                     @db.Uuid
  created_at                              DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                              DateTime                    @default(now()) @db.Timestamptz(6)
  auto_rotation_enabled                   Boolean                     @default(false)
  aws_region                              String?                     @default("us-west-1") @db.VarChar(50)
  azure_key_vault_id                      String?
  last_rotated_at                         DateTime?                   @db.Timestamptz(6)
  next_rotation_at                        DateTime?                   @db.Timestamptz(6)
  rotation_interval_days                  Int                         @default(90)
  secret_arn                              String?
  storage_type                            String?                     @default("local") @db.VarChar(20)
  vault_path                              String?
  service_template                        String?                     @db.VarChar(100)
  allowed_ips                             String[]                    @default([])
  allowed_domains                         String[]                    @default([])
  rate_limit                              Int?
  concurrent_limit                        Int?
  is_primary                              Boolean?                    @default(true)
  rotation_partner_id                     String?                     @db.Uuid
  emergency_access_enabled                Boolean?                    @default(false)
  emergency_access_log                    Json?
  api_credential_audit_logs               api_credential_audit_logs[]
  api_credential_rotations                api_credential_rotations[]
  users_api_credentials_created_byTousers users?                      @relation("api_credentials_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  users_api_credentials_updated_byTousers users?                      @relation("api_credentials_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)
  api_health_check_results                api_health_check_results[]
  api_health_checks                       api_health_checks[]
  api_usage_logs                          api_usage_logs[]

  @@index([is_active], map: "idx_api_credentials_active")
  @@index([auto_rotation_enabled], map: "idx_api_credentials_auto_rotation")
  @@index([created_at], map: "idx_api_credentials_created_at")
  @@index([created_by], map: "idx_api_credentials_created_by")
  @@index([is_active], map: "idx_api_credentials_is_active")
  @@index([next_rotation_at], map: "idx_api_credentials_next_rotation")
  @@index([service_name], map: "idx_api_credentials_service")
  @@index([storage_type], map: "idx_api_credentials_storage_type")
  @@index([updated_at], map: "idx_api_credentials_updated_at")
  @@index([updated_by], map: "idx_api_credentials_updated_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_health_check_results {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credential_id    String          @db.Uuid
  status           String          @db.VarChar(20)
  response_time_ms Int?
  error_message    String?
  metadata         Json?
  checked_at       DateTime        @default(now()) @db.Timestamptz(6)
  api_credentials  api_credentials @relation(fields: [credential_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([credential_id], map: "idx_api_health_check_results_credential_id")
  @@index([status], map: "idx_api_health_check_results_status")
  @@index([checked_at], map: "idx_health_results_checked_at")
  @@index([credential_id], map: "idx_health_results_credential")
  @@index([status], map: "idx_health_results_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_health_checks {
  id                   String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  credential_id        String          @db.Uuid
  endpoint_url         String          @db.VarChar(500)
  check_interval       Int?            @default(15)
  timeout              Int?            @default(30)
  expected_status      Int?            @default(200)
  alert_on_failure     Boolean?        @default(true)
  is_active            Boolean?        @default(true)
  last_check_at        DateTime?       @db.Timestamptz(6)
  last_status_code     Int?
  last_response_time   Int?
  consecutive_failures Int?            @default(0)
  created_at           DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?       @default(now()) @db.Timestamptz(6)
  api_credentials      api_credentials @relation(fields: [credential_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_health_credential")

  @@index([created_at], map: "idx_api_health_checks_created_at")
  @@index([credential_id], map: "idx_api_health_checks_credential_id")
  @@index([is_active], map: "idx_api_health_checks_is_active")
  @@index([updated_at], map: "idx_api_health_checks_updated_at")
  @@index([is_active], map: "idx_health_active")
  @@index([credential_id], map: "idx_health_credential")
  @@index([last_check_at], map: "idx_health_last_check")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model api_usage_logs {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  service_name     String          @db.VarChar(100)
  endpoint         String?         @db.VarChar(500)
  method           String?         @db.VarChar(10)
  status_code      Int?
  response_time_ms Int?
  error_message    String?
  request_size     Int?
  response_size    Int?
  ip_address       String?         @db.VarChar(45)
  user_agent       String?
  metadata         Json?
  created_at       DateTime        @default(now()) @db.Timestamptz(6)
  api_credentials  api_credentials @relation(fields: [service_name], references: [service_name], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_api_usage_created_at")
  @@index([created_at], map: "idx_api_usage_logs_created_at")
  @@index([service_name], map: "idx_api_usage_logs_service_name")
  @@index([service_name], map: "idx_api_usage_service")
  @@index([status_code], map: "idx_api_usage_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model app_settings {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String?   @unique @db.Uuid
  theme                 String?   @default("system")
  notifications_enabled Boolean?  @default(true)
  offline_mode_enabled  Boolean?  @default(true)
  data_saver            Boolean?  @default(false)
  sync_frequency        String?   @default("auto")
  cache_size_mb         Int?      @default(50)
  language              String?   @default("en")
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
  users                 users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_app_settings_created_at")
  @@index([updated_at], map: "idx_app_settings_updated_at")
  @@index([user_id], map: "idx_app_settings_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model approval_templates {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  template_name     String    @unique
  description       String?
  document_category String?
  document_type     String?
  approval_stages   Json
  sequential        Boolean?  @default(false)
  auto_start        Boolean?  @default(true)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_approval_templates_created_at")
  @@index([updated_at], map: "idx_approval_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ar_aging {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  snapshot_date     DateTime   @db.Date
  customer_id       String?    @db.Uuid
  current_amount    Decimal?   @default(0) @db.Decimal(12, 2)
  days_1_30         Decimal?   @default(0) @db.Decimal(12, 2)
  days_31_60        Decimal?   @default(0) @db.Decimal(12, 2)
  days_61_90        Decimal?   @default(0) @db.Decimal(12, 2)
  over_90_days      Decimal?   @default(0) @db.Decimal(12, 2)
  total_outstanding Decimal?   @default(dbgenerated("((((current_amount + days_1_30) + days_31_60) + days_61_90) + over_90_days)")) @db.Decimal(12, 2)
  created_at        DateTime?  @default(now()) @db.Timestamp(6)
  customers         customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([snapshot_date, customer_id])
  @@index([created_at], map: "idx_ar_aging_created_at")
  @@index([customer_id], map: "idx_ar_aging_customer_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model automation_logs {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_id           String?           @db.Uuid
  trigger_data      Json?
  actions_executed  Json?
  status            String?           @db.VarChar(50)
  error_message     String?
  execution_time_ms Int?
  created_at        DateTime?         @default(now()) @db.Timestamptz(6)
  automation_rules  automation_rules? @relation(fields: [rule_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_automation_logs_created_at")
  @@index([rule_id], map: "idx_automation_logs_rule_id")
  @@index([status], map: "idx_automation_logs_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model automation_rules {
  id                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rule_name          String            @db.VarChar(255)
  rule_type          String?           @db.VarChar(50)
  trigger_event      String?           @db.VarChar(100)
  trigger_conditions Json?             @default("{}")
  actions            Json
  is_active          Boolean?          @default(true)
  priority           Int?              @default(5)
  last_triggered_at  DateTime?         @db.Timestamptz(6)
  trigger_count      Int?              @default(0)
  created_by         String?           @db.Uuid
  created_at         DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?         @default(now()) @db.Timestamptz(6)
  automation_logs    automation_logs[]
  users              users?            @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_automation_rules_created_at")
  @@index([created_by], map: "idx_automation_rules_created_by")
  @@index([is_active], map: "idx_automation_rules_is_active")
  @@index([updated_at], map: "idx_automation_rules_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_activity_log {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id      String         @db.Uuid
  user_id       String?        @db.Uuid
  action_type   String
  object_id     String?        @db.Uuid
  details       Json?          @default("{}")
  created_at    DateTime?      @default(now()) @db.Timestamptz(6)
  design_boards design_boards  @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles user_profiles? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([board_id], map: "idx_board_activity_log_board_id")
  @@index([created_at(sort: Desc)], map: "idx_board_activity_log_created_at")
  @@index([user_id], map: "idx_board_activity_log_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_collaborators {
  id                                                          String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id                                                    String         @db.Uuid
  user_id                                                     String         @db.Uuid
  role                                                        String         @default("editor")
  invited_by                                                  String?        @db.Uuid
  created_at                                                  DateTime?      @default(now()) @db.Timestamptz(6)
  design_boards                                               design_boards  @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles_board_collaborators_invited_byTouser_profiles user_profiles? @relation("board_collaborators_invited_byTouser_profiles", fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_board_collaborators_user_idTouser_profiles    user_profiles  @relation("board_collaborators_user_idTouser_profiles", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([board_id, user_id])
  @@index([board_id], map: "idx_board_collaborators_board_id")
  @@index([created_at], map: "idx_board_collaborators_created_at")
  @@index([invited_by], map: "idx_board_collaborators_invited_by")
  @@index([user_id], map: "idx_board_collaborators_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_comments {
  id                                                      String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id                                                String           @db.Uuid
  object_id                                               String?          @db.Uuid
  parent_comment_id                                       String?          @db.Uuid
  user_id                                                 String           @db.Uuid
  comment_text                                            String
  position_x                                              Float?
  position_y                                              Float?
  resolved                                                Boolean?         @default(false)
  resolved_by                                             String?          @db.Uuid
  resolved_at                                             DateTime?        @db.Timestamptz(6)
  created_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at                                              DateTime?        @default(now()) @db.Timestamptz(6)
  design_boards                                           design_boards    @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  board_objects                                           board_objects?   @relation(fields: [object_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  board_comments                                          board_comments?  @relation("board_commentsToboard_comments", fields: [parent_comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_board_comments                                    board_comments[] @relation("board_commentsToboard_comments")
  user_profiles_board_comments_resolved_byTouser_profiles user_profiles?   @relation("board_comments_resolved_byTouser_profiles", fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_board_comments_user_idTouser_profiles     user_profiles    @relation("board_comments_user_idTouser_profiles", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([board_id], map: "idx_board_comments_board_id")
  @@index([created_at], map: "idx_board_comments_created_at")
  @@index([object_id], map: "idx_board_comments_object_id")
  @@index([parent_comment_id], map: "idx_board_comments_parent")
  @@index([resolved_by], map: "idx_board_comments_resolved_by")
  @@index([updated_at], map: "idx_board_comments_updated_at")
  @@index([user_id], map: "idx_board_comments_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_objects {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id       String           @db.Uuid
  object_type    String
  object_data    Json
  position_x     Float
  position_y     Float
  width          Float?
  height         Float?
  rotation       Float?           @default(0)
  scale_x        Float?           @default(1)
  scale_y        Float?           @default(1)
  z_index        Int?             @default(0)
  locked         Boolean?         @default(false)
  visible        Boolean?         @default(true)
  created_by     String?          @db.Uuid
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?        @default(now()) @db.Timestamptz(6)
  board_comments board_comments[]
  design_boards  design_boards    @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles  user_profiles?   @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  board_votes    board_votes[]

  @@index([board_id], map: "idx_board_objects_board_id")
  @@index([created_at], map: "idx_board_objects_created_at")
  @@index([created_by], map: "idx_board_objects_created_by")
  @@index([object_type], map: "idx_board_objects_object_type")
  @@index([updated_at], map: "idx_board_objects_updated_at")
  @@index([board_id, z_index], map: "idx_board_objects_z_index")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_snapshots {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id       String         @db.Uuid
  snapshot_data  Json
  created_by     String?        @db.Uuid
  snapshot_name  String?
  auto_generated Boolean?       @default(false)
  created_at     DateTime?      @default(now()) @db.Timestamptz(6)
  design_boards  design_boards  @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles  user_profiles? @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([board_id], map: "idx_board_snapshots_board_id")
  @@index([created_at(sort: Desc)], map: "idx_board_snapshots_created_at")
  @@index([created_by], map: "idx_board_snapshots_created_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_templates {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  description   String?
  category      String
  thumbnail_url String?
  template_data Json
  is_public     Boolean?        @default(true)
  is_featured   Boolean?        @default(false)
  created_by    String?         @db.Uuid
  use_count     Int?            @default(0)
  tags          String[]        @default([])
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles?  @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_boards design_boards[]

  @@index([category], map: "idx_board_templates_category")
  @@index([created_at], map: "idx_board_templates_created_at")
  @@index([created_by], map: "idx_board_templates_created_by")
  @@index([is_public], map: "idx_board_templates_public")
  @@index([updated_at], map: "idx_board_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model board_votes {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_id      String        @db.Uuid
  object_id     String        @db.Uuid
  user_id       String        @db.Uuid
  vote_count    Int?          @default(1)
  vote_type     String?       @default("dot")
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  design_boards design_boards @relation(fields: [board_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  board_objects board_objects @relation(fields: [object_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles user_profiles @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([board_id, object_id, user_id, vote_type])
  @@index([board_id], map: "idx_board_votes_board_id")
  @@index([created_at], map: "idx_board_votes_created_at")
  @@index([object_id], map: "idx_board_votes_object_id")
  @@index([user_id], map: "idx_board_votes_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model budgets {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String
  budget_type      String?
  period_start     DateTime  @db.Date
  period_end       DateTime  @db.Date
  total_budget     Decimal   @db.Decimal(12, 2)
  allocated_amount Decimal?  @default(0) @db.Decimal(12, 2)
  spent_amount     Decimal?  @default(0) @db.Decimal(12, 2)
  remaining_amount Decimal?  @default(dbgenerated("(total_budget - spent_amount)")) @db.Decimal(12, 2)
  status           String?   @default("draft")
  owner_id         String?   @db.Uuid
  notes            String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  updated_at       DateTime? @default(now()) @db.Timestamp(6)
  category         String?   @db.VarChar(100)
  department       String?   @db.VarChar(100)
  period_name      String?   @db.VarChar(100)
  users            users?    @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_budgets_created_at")
  @@index([owner_id], map: "idx_budgets_owner_id")
  @@index([status], map: "idx_budgets_status")
  @@index([updated_at], map: "idx_budgets_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_files {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id       String?    @db.Uuid
  order_id          String?    @db.Uuid
  file_name         String
  file_type         String
  file_size         Int?
  file_url          String
  storage_path      String?
  category          String?
  description       String?
  uploaded_by       String?    @db.Uuid
  uploaded_at       DateTime?  @default(now()) @db.Timestamptz(6)
  is_client_visible Boolean?   @default(true)
  is_archived       Boolean?   @default(false)
  metadata          Json?      @default("{}")
  created_at        DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?  @default(now()) @db.Timestamptz(6)
  customers         customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders            orders?    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?     @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_client_files_created_at")
  @@index([customer_id], map: "idx_client_files_customer_id")
  @@index([order_id], map: "idx_client_files_order_id")
  @@index([updated_at], map: "idx_client_files_updated_at")
  @@index([uploaded_by], map: "idx_client_files_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_notifications {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id String    @db.Uuid
  type        String
  title       String
  message     String
  data        Json?     @default("{}")
  read        Boolean?  @default(false)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  customers   customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_client_notifications_created_at")
  @@index([customer_id], map: "idx_client_notifications_customer_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_portal_sessions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String    @db.Uuid
  user_email    String
  ip_address    String?   @db.Inet
  user_agent    String?
  started_at    DateTime? @default(now()) @db.Timestamptz(6)
  ended_at      DateTime? @db.Timestamptz(6)
  pages_visited Json?     @default("[]")
  customers     customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([customer_id], map: "idx_client_portal_sessions_customer_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model client_projects {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  client_name  String    @db.VarChar(255)
  project_code String    @unique @db.VarChar(50)
  project_type String?   @db.VarChar(255)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_client_projects_created_at")
  @@index([updated_at], map: "idx_client_projects_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model collection_activities {
  id                                            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                                   String?    @db.Uuid
  activity_type                                 String?    @db.VarChar(100)
  notes                                         String?
  created_at                                    DateTime?  @default(now()) @db.Timestamp(6)
  updated_at                                    DateTime?  @default(now()) @db.Timestamp(6)
  created_by                                    String?    @db.Uuid
  updated_by                                    String?    @db.Uuid
  users_collection_activities_created_byTousers users?     @relation("collection_activities_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                                     customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_collection_activities_updated_byTousers users?     @relation("collection_activities_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_collection_activities_created_at")
  @@index([customer_id], map: "idx_collection_activities_customer_id")
  @@index([updated_at], map: "idx_collection_activities_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model collections {
  id                             String                           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                           String                           @db.VarChar
  description                    String?
  created_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  prefix                         String?                          @db.VarChar(2)
  designer                       String?
  display_order                  Int?                             @default(1)
  is_active                      Boolean?                         @default(true)
  image_url                      String?
  metadata                       Json?
  variation_types                String[]
  designer_id                    String?                          @db.Uuid
  designers                      designers?                       @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_collections_designer")
  concepts                       concepts[]
  design_projects                design_projects[]
  documents                      documents[]
  items                          items[]
  manufacturer_projects          manufacturer_projects[]
  material_collection_audit      material_collection_audit[]
  material_collections           material_collections[]
  material_furniture_collections material_furniture_collections[]
  orders                         orders[]
  prototypes                     prototypes[]

  @@index([created_at], map: "idx_collections_created_at")
  @@index([designer_id], map: "idx_collections_designer_id")
  @@index([is_active], map: "idx_collections_is_active")
  @@index([updated_at], map: "idx_collections_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model communication_threads {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_type         String                @db.VarChar(100)
  entity_id           String                @db.Uuid
  subject             String?               @db.VarChar(500)
  status              String?               @default("open") @db.VarChar(50)
  participant_ids     String[]              @default([]) @db.Uuid
  created_by          String?               @db.Uuid
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  last_message_at     DateTime?             @db.Timestamptz(6)
  user_profiles       user_profiles?        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  thread_messages     thread_messages[]
  thread_participants thread_participants[]

  @@index([created_at(sort: Desc)], map: "idx_communication_threads_created")
  @@index([entity_type, entity_id], map: "idx_communication_threads_entity")
  @@index([last_message_at(sort: Desc)], map: "idx_communication_threads_last_message")
  @@index([status], map: "idx_communication_threads_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model concepts {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String       @db.VarChar(255)
  description    String?
  concept_number String?      @unique @db.VarChar(50)
  designer_id    String?      @db.Uuid
  collection_id  String?      @db.Uuid
  created_by     String       @db.Uuid
  status         String?      @default("concept") @db.VarChar(50)
  priority       String?      @default("medium") @db.VarChar(20)
  specifications Json?
  target_price   Decimal?     @db.Decimal(10, 2)
  estimated_cost Decimal?     @db.Decimal(10, 2)
  tags           String[]
  notes          String?
  internal_notes String?
  created_at     DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?    @default(now()) @db.Timestamptz(6)
  collections    collections? @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_concepts_collection")
  designers      designers?   @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_concepts_designer")
  users          users        @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_concepts_user")
  documents      documents[]
  prototypes     prototypes[]

  @@index([collection_id], map: "idx_concepts_collection_id")
  @@index([concept_number], map: "idx_concepts_concept_number")
  @@index([created_at], map: "idx_concepts_created_at")
  @@index([created_by], map: "idx_concepts_created_by")
  @@index([designer_id], map: "idx_concepts_designer_id")
  @@index([status], map: "idx_concepts_status")
  @@index([updated_at], map: "idx_concepts_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model contacts {
  id                   String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                 String?
  email                String?     @unique
  phone                String?
  company              String?
  position             String?
  notes                String?
  tags                 String[]    @default([])
  created_at           DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?   @default(now()) @db.Timestamptz(6)
  created_by           String?
  lead_conversion_date String?
  last_contacted       DateTime?   @db.Timestamptz(6)
  source               String?
  score                Decimal?    @default(0) @db.Decimal
  assigned_to          String?     @db.Uuid
  last_activity_date   DateTime?   @db.Timestamptz(6)
  status               String?     @default("active")
  first_name           String?     @db.VarChar(255)
  last_name            String?     @db.VarChar(255)
  addresses            addresses[]

  @@index([company], map: "idx_contacts_company")
  @@index([created_at], map: "idx_contacts_created_at")
  @@index([created_by], map: "idx_contacts_created_by")
  @@index([email], map: "idx_contacts_email")
  @@index([status], map: "idx_contacts_status")
  @@index([updated_at], map: "idx_contacts_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cost_tracking {
  id                    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id              String?        @db.Uuid
  order_item_id         String?        @db.Uuid
  cost_category         String?
  vendor_id             String?        @db.Uuid
  description           String?
  quantity              Decimal?       @db.Decimal(10, 2)
  unit_cost             Decimal?       @db.Decimal(12, 2)
  total_cost            Decimal        @db.Decimal(12, 2)
  currency              String?        @default("USD")
  invoice_number        String?
  paid                  Boolean?       @default(false)
  paid_date             DateTime?      @db.Date
  quickbooks_expense_id String?
  notes                 String?
  created_at            DateTime?      @default(now()) @db.Timestamp(6)
  updated_at            DateTime?      @default(now()) @db.Timestamp(6)
  orders                orders?        @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_items           order_items?   @relation(fields: [order_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturers         manufacturers? @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_cost_tracking_created_at")
  @@index([order_id], map: "idx_cost_tracking_order_id")
  @@index([order_id], map: "idx_cost_tracking_order_id_fk")
  @@index([order_item_id], map: "idx_cost_tracking_order_item_id")
  @@index([updated_at], map: "idx_cost_tracking_updated_at")
  @@index([vendor_id], map: "idx_cost_tracking_vendor_id")
  @@index([vendor_id], map: "idx_cost_tracking_vendor_id_fk")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_communication_preferences {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id            String                 @db.Uuid
  portal_user_id         String?                @db.Uuid
  email_notifications    Boolean?               @default(true)
  sms_notifications      Boolean?               @default(false)
  push_notifications     Boolean?               @default(false)
  notification_frequency String?                @default("immediate") @db.VarChar(20)
  quiet_hours_start      DateTime?              @default(dbgenerated("'22:00:00'::time without time zone")) @db.Time(6)
  quiet_hours_end        DateTime?              @default(dbgenerated("'08:00:00'::time without time zone")) @db.Time(6)
  timezone               String?                @default("America/Los_Angeles") @db.VarChar(50)
  language_preference    String?                @default("en") @db.VarChar(10)
  created_at             DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?              @default(now()) @db.Timestamptz(6)
  customers              customers              @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customer_portal_users  customer_portal_users? @relation(fields: [portal_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([customer_id, portal_user_id], map: "customer_communication_preferenc_customer_id_portal_user_id_key")
  @@index([created_at], map: "idx_customer_communication_preferences_created_at")
  @@index([customer_id], map: "idx_customer_communication_preferences_customer_id")
  @@index([portal_user_id], map: "idx_customer_communication_preferences_portal_user_id")
  @@index([updated_at], map: "idx_customer_communication_preferences_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_financials {
  id                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id            String?    @db.Uuid
  quickbooks_customer_id String?
  credit_limit           Decimal?   @db.Decimal(12, 2)
  payment_terms          String?
  currency               String?    @default("USD")
  tax_exempt             Boolean?   @default(false)
  tax_id                 String?
  credit_status          String?    @default("good")
  balance_outstanding    Decimal?   @default(0) @db.Decimal(12, 2)
  ytd_sales              Decimal?   @default(0) @db.Decimal(12, 2)
  lifetime_value         Decimal?   @default(0) @db.Decimal(12, 2)
  average_days_to_pay    Int?
  created_at             DateTime?  @default(now()) @db.Timestamp(6)
  updated_at             DateTime?  @default(now()) @db.Timestamp(6)
  customers              customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_customer_financials_created_at")
  @@index([customer_id], map: "idx_customer_financials_customer_id")
  @@index([updated_at], map: "idx_customer_financials_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_notifications {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String    @db.Uuid
  customer_id         String    @db.Uuid
  type                String    @db.VarChar(50)
  title               String    @db.VarChar(255)
  message             String
  link                String?   @db.VarChar(500)
  read                Boolean   @default(false)
  read_at             DateTime? @db.Timestamptz(6)
  related_entity_type String?   @db.VarChar(50)
  related_entity_id   String?   @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  customers           customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_customer_notifications_created_at")
  @@index([customer_id], map: "idx_customer_notifications_customer_id")
  @@index([type], map: "idx_customer_notifications_type")
  @@index([user_id], map: "idx_customer_notifications_user_id")
  @@index([user_id, read], map: "idx_customer_notifications_user_read")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_portal_access {
  id                                             String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id                                    String?    @db.Uuid
  user_id                                        String?    @db.Uuid
  portal_role                                    String?    @default("viewer") @db.VarChar(50)
  is_active                                      Boolean?   @default(true)
  last_login                                     DateTime?  @db.Timestamptz(6)
  login_count                                    Int?       @default(0)
  invited_by                                     String?    @db.Uuid
  invited_at                                     DateTime?  @db.Timestamptz(6)
  accepted_at                                    DateTime?  @db.Timestamptz(6)
  created_at                                     DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime?  @default(now()) @db.Timestamptz(6)
  portal_type                                    String?    @default("customer") @db.VarChar(20)
  entity_type                                    String?    @db.VarChar(20)
  entity_id                                      String?    @db.Uuid
  granted_at                                     DateTime?  @db.Timestamptz(6)
  customers                                      customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_customer_portal_access_invited_byTousers users?     @relation("customer_portal_access_invited_byTousers", fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customer_portal_access_user_idTousers    users?     @relation("customer_portal_access_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([customer_id, user_id])
  @@index([created_at], map: "idx_customer_portal_access_created_at")
  @@index([customer_id], map: "idx_customer_portal_access_customer_id")
  @@index([invited_by], map: "idx_customer_portal_access_invited_by")
  @@index([is_active], map: "idx_customer_portal_access_is_active")
  @@index([updated_at], map: "idx_customer_portal_access_updated_at")
  @@index([user_id], map: "idx_customer_portal_access_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_portal_activity {
  id                    String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  portal_id             String                 @db.Uuid
  portal_user_id        String?                @db.Uuid
  activity_type         String                 @db.VarChar(50)
  activity_description  String?
  resource_type         String?                @db.VarChar(50)
  resource_id           String?                @db.Uuid
  metadata              Json?                  @default("{}")
  ip_address            String?                @db.Inet
  user_agent            String?
  created_at            DateTime?              @default(now()) @db.Timestamptz(6)
  customer_portals      customer_portals       @relation(fields: [portal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customer_portal_users customer_portal_users? @relation(fields: [portal_user_id], references: [id], onUpdate: NoAction)

  @@index([created_at], map: "idx_customer_portal_activity_created_at")
  @@index([portal_id], map: "idx_customer_portal_activity_portal_id")
  @@index([portal_user_id], map: "idx_customer_portal_activity_portal_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_portal_sessions {
  id                    String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  portal_user_id        String                @db.Uuid
  session_token         String                @unique @db.VarChar(255)
  ip_address            String?               @db.Inet
  user_agent            String?
  started_at            DateTime?             @default(now()) @db.Timestamptz(6)
  last_active_at        DateTime?             @default(now()) @db.Timestamptz(6)
  ended_at              DateTime?             @db.Timestamptz(6)
  is_active             Boolean?              @default(true)
  customer_portal_users customer_portal_users @relation(fields: [portal_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_active], map: "idx_customer_portal_sessions_is_active")
  @@index([portal_user_id], map: "idx_customer_portal_sessions_portal_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_portal_users {
  id                                 String                               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  portal_id                          String                               @db.Uuid
  email                              String                               @db.VarChar(255)
  full_name                          String                               @db.VarChar(255)
  title                              String?                              @db.VarChar(255)
  phone                              String?                              @db.VarChar(50)
  role                               String                               @db.VarChar(20)
  is_primary_contact                 Boolean?                             @default(false)
  is_active                          Boolean?                             @default(true)
  invitation_status                  String?                              @default("pending") @db.VarChar(20)
  invitation_sent_at                 DateTime?                            @db.Timestamptz(6)
  invitation_accepted_at             DateTime?                            @db.Timestamptz(6)
  last_login_at                      DateTime?                            @db.Timestamptz(6)
  auth_user_id                       String?                              @db.Uuid
  created_at                         DateTime?                            @default(now()) @db.Timestamptz(6)
  updated_at                         DateTime?                            @default(now()) @db.Timestamptz(6)
  phone_verified                     Boolean?                             @default(false)
  sms_invitation_sent                Boolean?                             @default(false)
  sms_invitation_sent_at             DateTime?                            @db.Timestamptz(6)
  preferred_contact_method           String?                              @default("email") @db.VarChar(10)
  customer_communication_preferences customer_communication_preferences[]
  customer_portal_activity           customer_portal_activity[]
  customer_portal_sessions           customer_portal_sessions[]
  users                              users?                               @relation(fields: [auth_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customer_portals                   customer_portals                     @relation(fields: [portal_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sms_invitations                    sms_invitations[]

  @@unique([portal_id, email])
  @@index([auth_user_id], map: "idx_customer_portal_users_auth_user_id")
  @@index([created_at], map: "idx_customer_portal_users_created_at")
  @@index([is_active], map: "idx_customer_portal_users_is_active")
  @@index([portal_id], map: "idx_customer_portal_users_portal_id")
  @@index([updated_at], map: "idx_customer_portal_users_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_portals {
  id                                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                              String                     @unique @db.Uuid
  portal_name                              String                     @db.VarChar(255)
  welcome_message                          String?
  primary_color                            String?                    @default("#91bdbd") @db.VarChar(7)
  configuration                            Json                       @default("{}")
  is_active                                Boolean?                   @default(true)
  created_at                               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at                               DateTime?                  @default(now()) @db.Timestamptz(6)
  created_by                               String?                    @db.Uuid
  updated_by                               String?                    @db.Uuid
  customer_portal_activity                 customer_portal_activity[]
  customer_portal_users                    customer_portal_users[]
  users_customer_portals_created_byTousers users?                     @relation("customer_portals_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                                customers                  @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_customer_portals_updated_byTousers users?                     @relation("customer_portals_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_customer_portals_created_at")
  @@index([created_by], map: "idx_customer_portals_created_by")
  @@index([customer_id], map: "idx_customer_portals_customer_id")
  @@index([is_active], map: "idx_customer_portals_is_active")
  @@index([updated_at], map: "idx_customer_portals_updated_at")
  @@index([updated_by], map: "idx_customer_portals_updated_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_production_notifications {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String?    @db.Uuid
  order_id      String?    @db.Uuid
  type          String?
  channel       String?    @default("portal")
  subject       String?
  message       String
  data          Json?      @default("{}")
  status        String?    @default("pending")
  sent_at       DateTime?  @db.Timestamp(6)
  read_at       DateTime?  @db.Timestamp(6)
  error_message String?
  created_at    DateTime?  @default(now()) @db.Timestamp(6)
  customers     customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders        orders?    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_customer_production_notifications_created_at")
  @@index([customer_id], map: "idx_customer_production_notifications_customer_id")
  @@index([order_id], map: "idx_customer_production_notifications_order_id")
  @@index([status], map: "idx_customer_production_notifications_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customer_shipping_addresses {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id    String    @db.Uuid
  label          String    @db.VarChar(100)
  recipient_name String    @db.VarChar(255)
  address_line1  String    @db.VarChar(255)
  address_line2  String?   @db.VarChar(255)
  city           String    @db.VarChar(100)
  state          String    @db.VarChar(50)
  postal_code    String    @db.VarChar(20)
  country        String    @default("USA") @db.VarChar(100)
  phone          String?   @db.VarChar(20)
  is_default     Boolean   @default(false)
  active         Boolean   @default(true)
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @db.Timestamptz(6)
  customers      customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([active], map: "idx_customer_shipping_addresses_active")
  @@index([created_at], map: "idx_customer_shipping_addresses_created_at")
  @@index([customer_id], map: "idx_customer_shipping_addresses_customer_id")
  @@index([is_default], map: "idx_customer_shipping_addresses_is_default")
  @@index([updated_at], map: "idx_customer_shipping_addresses_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model customers {
  id                                              String                               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                            String
  email                                           String?                              @unique(map: "customers_email_unique")
  phone                                           String?
  company                                         String?
  address                                         Json?
  type                                            String?
  status                                          String?                              @default("active")
  notes                                           String?
  tags                                            String[]                             @default([])
  created_by                                      String?                              @db.Uuid
  created_at                                      DateTime?                            @default(now()) @db.Timestamp(6)
  updated_at                                      DateTime?                            @default(now()) @db.Timestamp(6)
  portal_access                                   Boolean?                             @default(false)
  portal_password                                 String?
  last_portal_login                               DateTime?                            @db.Timestamptz(6)
  portal_access_granted_at                        DateTime?                            @db.Timestamptz(6)
  portal_access_granted_by                        String?                              @db.Uuid
  user_id                                         String?                              @db.Uuid
  company_name                                    String?
  city                                            String?                              @db.VarChar(100)
  state                                           String?                              @db.VarChar(50)
  zip                                             String?                              @db.VarChar(20)
  country                                         String?                              @default("USA") @db.VarChar(100)
  billing_address_line1                           String?                              @db.VarChar(255)
  billing_address_line2                           String?                              @db.VarChar(255)
  billing_city                                    String?                              @db.VarChar(100)
  billing_state                                   String?                              @db.VarChar(50)
  billing_zip                                     String?                              @db.VarChar(20)
  billing_country                                 String?                              @default("USA") @db.VarChar(100)
  shipping_same_as_billing                        Boolean?                             @default(true)
  credit_limit                                    Decimal?                             @default(0) @db.Decimal(15, 2)
  portal_created_at                               DateTime?                            @db.Timestamptz(6)
  portal_created_by                               String?                              @db.Uuid
  last_password_reset                             DateTime?                            @db.Timestamptz(6)
  last_activity_date                              DateTime?                            @db.Timestamptz(6)
  first_name                                      String?                              @db.VarChar(255)
  last_name                                       String?                              @db.VarChar(255)
  addresses                                       addresses[]
  ar_aging                                        ar_aging[]
  client_files                                    client_files[]
  client_notifications                            client_notifications[]
  client_portal_sessions                          client_portal_sessions[]
  collection_activities                           collection_activities[]
  customer_communication_preferences              customer_communication_preferences[]
  customer_financials                             customer_financials[]
  customer_notifications                          customer_notifications[]
  customer_portal_access                          customer_portal_access[]
  customer_portals                                customer_portals?
  customer_production_notifications               customer_production_notifications[]
  customer_shipping_addresses                     customer_shipping_addresses[]
  users_customers_created_byTousers               users?                               @relation("customers_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customers_portal_access_granted_byTousers users?                               @relation("customers_portal_access_granted_byTousers", fields: [portal_access_granted_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customers_portal_created_byTousers        users?                               @relation("customers_portal_created_byTousers", fields: [portal_created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_customers_user_idTousers                  users?                               @relation("customers_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  deals                                           deals[]
  design_approvals                                design_approvals[]
  document_folders                                document_folders[]
  documents                                       documents[]
  invoices                                        invoices[]
  notifications                                   notifications[]
  orders                                          orders[]
  orders_old                                      orders_old[]
  pandadoc_documents                              pandadoc_documents[]
  payments                                        payments[]
  portal_access_logs                              portal_access_logs[]
  portal_activity_log                             portal_activity_log[]
  portal_configurations                           portal_configurations?
  portal_documents                                portal_documents[]
  portal_invitations                              portal_invitations[]
  portal_sessions                                 portal_sessions[]
  portal_settings                                 portal_settings?
  portal_users                                    portal_users[]
  production_invoices                             production_invoices[]
  projects                                        projects[]
  quickbooks_payment_queue                        quickbooks_payment_queue[]
  quickbooks_recurring_payments                   quickbooks_recurring_payments[]
  shipping_quotes                                 shipping_quotes[]
  sms_opt_outs                                    sms_opt_outs[]
  webhook_endpoints                               webhook_endpoints[]

  @@index([company_name], map: "idx_customers_company_name")
  @@index([company_name, status], map: "idx_customers_company_status")
  @@index([created_at], map: "idx_customers_created_at")
  @@index([created_at(sort: Desc)], map: "idx_customers_created_at_desc")
  @@index([created_by], map: "idx_customers_created_by_fk")
  @@index([email], map: "idx_customers_email")
  @@index([portal_access_granted_by], map: "idx_customers_portal_access_granted_by")
  @@index([portal_created_by], map: "idx_customers_portal_created_by")
  @@index([status], map: "idx_customers_status")
  @@index([status, created_at(sort: Desc)], map: "idx_customers_status_created")
  @@index([updated_at], map: "idx_customers_updated_at")
  @@index([user_id], map: "idx_customers_user_id")
  @@index([user_id], map: "idx_customers_user_id_fk")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model deals {
  id                             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                          String     @db.VarChar(255)
  client                         String     @db.VarChar(255)
  value                          Decimal    @db.Decimal(12, 2)
  stage                          String?    @default("discovery") @db.VarChar(50)
  probability                    Int?       @default(25)
  expected_close_date            DateTime?  @db.Date
  actual_close_date              DateTime?  @db.Date
  assigned_to                    String?    @db.Uuid
  created_at                     DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime?  @default(now()) @db.Timestamptz(6)
  notes                          String?
  customer_id                    String?    @db.Uuid
  lead_id                        String?    @db.Uuid
  loss_reason                    String?
  competitors                    String[]
  products                       String[]
  created_by                     String?    @db.Uuid
  metadata                       Json?      @default("{}")
  users_deals_assigned_toTousers users?     @relation("deals_assigned_toTousers", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_deals_created_byTousers  users?     @relation("deals_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                      customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([assigned_to], map: "idx_deals_assigned_to")
  @@index([created_at], map: "idx_deals_created_at")
  @@index([created_by], map: "idx_deals_created_by")
  @@index([customer_id], map: "idx_deals_customer_id")
  @@index([updated_at], map: "idx_deals_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model default_permissions {
  id          String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_type   user_type_enum
  module      String         @db.VarChar(50)
  can_view    Boolean?       @default(false)
  can_create  Boolean?       @default(false)
  can_edit    Boolean?       @default(false)
  can_delete  Boolean?       @default(false)
  can_approve Boolean?       @default(false)
  created_at  DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?      @default(now()) @db.Timestamptz(6)

  @@unique([user_type, module])
  @@index([created_at], map: "idx_default_permissions_created_at")
  @@index([updated_at], map: "idx_default_permissions_updated_at")
  @@index([user_type], map: "idx_default_permissions_user_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model delivery_addresses {
  id             String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shipment_id    String             @db.Uuid
  contact_name   String?            @db.VarChar(255)
  company_name   String?            @db.VarChar(255)
  street_address String
  city           String             @db.VarChar(100)
  state          String             @db.VarChar(50)
  postal_code    String             @db.VarChar(20)
  country        String?            @default("US") @db.VarChar(50)
  phone          String?            @db.VarChar(20)
  email          String?            @db.VarChar(255)
  address_type   address_type_enum? @default(delivery)
  created_at     DateTime?          @default(now()) @db.Timestamptz(6)
  shipments      shipments          @relation(fields: [shipment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_delivery_addresses_created_at")
  @@index([shipment_id], map: "idx_delivery_addresses_shipment_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_approvals {
  id                                         String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id                                   String?        @db.Uuid
  customer_id                                String?        @db.Uuid
  design_name                                String
  version                                    String?        @default(dbgenerated("1"))
  status                                     String?        @default("pending")
  submitted_at                               DateTime?      @default(now()) @db.Timestamptz(6)
  submitted_by                               String?        @db.Uuid
  reviewed_at                                DateTime?      @db.Timestamptz(6)
  reviewed_by                                String?        @db.Uuid
  approved_at                                DateTime?      @db.Timestamptz(6)
  approved_by                                String?        @db.Uuid
  notes                                      String?
  feedback                                   String?
  revision_count                             Int?           @default(0)
  metadata                                   Json?          @default("{}")
  created_at                                 DateTime?      @default(now()) @db.Timestamp(6)
  updated_at                                 DateTime?      @default(now()) @db.Timestamp(6)
  created_by                                 String?        @db.Uuid
  updated_by                                 String?        @db.Uuid
  users_design_approvals_approved_byTousers  users?         @relation("design_approvals_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_design_approvals_created_byTousers   users?         @relation("design_approvals_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                                  customers?     @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders                                     orders?        @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_design_approvals_reviewed_byTousers  users?         @relation("design_approvals_reviewed_byTousers", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_design_approvals_submitted_byTousers users?         @relation("design_approvals_submitted_byTousers", fields: [submitted_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_design_approvals_updated_byTousers   users?         @relation("design_approvals_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_files                               design_files[]

  @@index([approved_by], map: "idx_design_approvals_approved_by")
  @@index([created_at], map: "idx_design_approvals_created_at")
  @@index([created_by], map: "idx_design_approvals_created_by")
  @@index([customer_id], map: "idx_design_approvals_customer_id")
  @@index([order_id], map: "idx_design_approvals_order_id")
  @@index([reviewed_by], map: "idx_design_approvals_reviewed_by")
  @@index([status], map: "idx_design_approvals_status")
  @@index([submitted_by], map: "idx_design_approvals_submitted_by")
  @@index([updated_at], map: "idx_design_approvals_updated_at")
  @@index([updated_by], map: "idx_design_approvals_updated_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_boards {
  id                   String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String
  description          String?
  board_type           String                @default("freeform")
  template_id          String?               @db.Uuid
  status               String                @default("active")
  project_id           String?               @db.Uuid
  created_by           String                @db.Uuid
  thumbnail_url        String?
  is_shared            Boolean?              @default(false)
  is_public            Boolean?              @default(false)
  canvas_width         Int?                  @default(4000)
  canvas_height        Int?                  @default(3000)
  background_color     String?               @default("#ffffff")
  background_image_url String?
  grid_enabled         Boolean?              @default(true)
  snap_to_grid         Boolean?              @default(false)
  grid_size            Int?                  @default(20)
  metadata             Json?                 @default("{}")
  created_at           DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?             @default(now()) @db.Timestamptz(6)
  last_activity_at     DateTime?             @default(now()) @db.Timestamptz(6)
  board_activity_log   board_activity_log[]
  board_collaborators  board_collaborators[]
  board_comments       board_comments[]
  board_objects        board_objects[]
  board_snapshots      board_snapshots[]
  board_votes          board_votes[]
  user_profiles        user_profiles         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_projects      design_projects?      @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  board_templates      board_templates?      @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_design_boards_created_at")
  @@index([created_by], map: "idx_design_boards_created_by")
  @@index([project_id], map: "idx_design_boards_project_id")
  @@index([status], map: "idx_design_boards_status")
  @@index([template_id], map: "idx_design_boards_template_id")
  @@index([updated_at], map: "idx_design_boards_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_briefs {
  id                                     String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_project_id                      String?          @db.Uuid
  title                                  String
  description                            String?
  target_market                          String?
  price_point_min                        Decimal?         @db.Decimal(10, 2)
  price_point_max                        Decimal?         @db.Decimal(10, 2)
  materials_preference                   Json?            @default("[]")
  style_references                       Json?            @default("[]")
  functional_requirements                String?
  dimensional_constraints                Json?
  sustainability_requirements            String?
  created_by                             String?          @db.Uuid
  approved_date                          DateTime?        @db.Timestamp(6)
  approved_by                            String?          @db.Uuid
  created_at                             DateTime?        @default(now()) @db.Timestamp(6)
  updated_at                             DateTime?        @default(now()) @db.Timestamp(6)
  status                                 String?          @default("draft")
  users_design_briefs_approved_byTousers users?           @relation("design_briefs_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_design_briefs_created_byTousers  users?           @relation("design_briefs_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_projects                        design_projects? @relation(fields: [design_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([approved_by], map: "idx_design_briefs_approved_by")
  @@index([created_at], map: "idx_design_briefs_created_at")
  @@index([created_by], map: "idx_design_briefs_created_by")
  @@index([design_project_id], map: "idx_design_briefs_design_project_id")
  @@index([status], map: "idx_design_briefs_status")
  @@index([updated_at], map: "idx_design_briefs_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_deliverables {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_project_id String?          @db.Uuid
  deliverable_type  String?
  version           Int?             @default(1)
  file_name         String?
  file_url          String?
  file_size         Int?
  status            String?          @default("pending")
  submitted_date    DateTime?        @db.Timestamp(6)
  reviewed_by       String?          @db.Uuid
  review_date       DateTime?        @db.Timestamp(6)
  review_comments   String?
  created_at        DateTime?        @default(now()) @db.Timestamp(6)
  design_projects   design_projects? @relation(fields: [design_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?           @relation(fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_design_deliverables_created_at")
  @@index([design_project_id], map: "idx_design_deliverables_design_project_id")
  @@index([reviewed_by], map: "idx_design_deliverables_reviewed_by")
  @@index([status], map: "idx_design_deliverables_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_files {
  id                 String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_approval_id String?           @db.Uuid
  file_name          String
  file_type          String
  file_size          Int?
  file_url           String
  thumbnail_url      String?
  storage_path       String?
  uploaded_by        String?           @db.Uuid
  uploaded_at        DateTime?         @default(now()) @db.Timestamptz(6)
  is_active          Boolean?          @default(true)
  metadata           Json?             @default("{}")
  created_at         DateTime?         @default(now()) @db.Timestamp(6)
  updated_at         DateTime?         @default(now()) @db.Timestamp(6)
  google_drive_id    String?           @db.VarChar(255)
  google_drive_url   String?
  storage_type       String?           @default("supabase") @db.VarChar(50)
  design_approvals   design_approvals? @relation(fields: [design_approval_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users              users?            @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_design_files_created_at")
  @@index([design_approval_id], map: "idx_design_files_design_approval_id")
  @@index([is_active], map: "idx_design_files_is_active")
  @@index([storage_type], map: "idx_design_files_storage_type")
  @@index([updated_at], map: "idx_design_files_updated_at")
  @@index([uploaded_by], map: "idx_design_files_uploaded_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_projects {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_name         String
  project_code         String?                @unique
  designer_id          String?                @db.Uuid
  collection_id        String?                @db.Uuid
  project_type         String?
  current_stage        String?                @default("brief_creation")
  target_launch_date   DateTime?              @db.Date
  budget               Decimal?               @db.Decimal(10, 2)
  priority             String?                @default("normal")
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  designer_name        String?                @db.VarChar(255)
  manufacturer_name    String?                @db.VarChar(255)
  next_action          String?
  days_in_stage        Int?                   @default(0)
  design_boards        design_boards[]
  design_briefs        design_briefs[]
  design_deliverables  design_deliverables[]
  collections          collections?           @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  designers            designers?             @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_revisions     design_revisions[]
  design_to_prototype  design_to_prototype[]
  designer_performance designer_performance[]
  documents            documents[]
  mood_boards          mood_boards[]
  prototypes           prototypes[]

  @@index([collection_id], map: "idx_design_projects_collection_id")
  @@index([created_at], map: "idx_design_projects_created_at")
  @@index([designer_id], map: "idx_design_projects_designer_id")
  @@index([updated_at], map: "idx_design_projects_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_revisions {
  id                                         String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_project_id                          String?          @db.Uuid
  revision_number                            Int
  revision_stage                             String?
  requested_by                               String?          @db.Uuid
  request_date                               DateTime?        @default(now()) @db.Timestamp(6)
  revision_notes                             String?
  changes_requested                          Json?            @default("[]")
  designer_response                          String?
  response_date                              DateTime?        @db.Timestamp(6)
  approved                                   Boolean?         @default(false)
  approved_by                                String?          @db.Uuid
  approval_date                              DateTime?        @db.Timestamp(6)
  time_spent_hours                           Decimal?         @db.Decimal(5, 2)
  created_at                                 DateTime?        @default(now()) @db.Timestamp(6)
  users_design_revisions_approved_byTousers  users?           @relation("design_revisions_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_projects                            design_projects? @relation(fields: [design_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_design_revisions_requested_byTousers users?           @relation("design_revisions_requested_byTousers", fields: [requested_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approved_by], map: "idx_design_revisions_approved_by")
  @@index([created_at], map: "idx_design_revisions_created_at")
  @@index([design_project_id], map: "idx_design_revisions_design_project_id")
  @@index([requested_by], map: "idx_design_revisions_requested_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model design_to_prototype {
  id                      String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_project_id       String?                @db.Uuid
  manufacturer_project_id String?                @db.Uuid
  prototype_status        String?
  handoff_date            DateTime?              @db.Timestamp(6)
  estimated_completion    DateTime?              @db.Date
  actual_completion       DateTime?              @db.Date
  notes                   String?
  created_at              DateTime?              @default(now()) @db.Timestamp(6)
  design_projects         design_projects?       @relation(fields: [design_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturer_projects   manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_design_to_prototype_created_at")
  @@index([design_project_id], map: "idx_design_to_prototype_design_project_id")
  @@index([manufacturer_project_id], map: "idx_design_to_prototype_manufacturer_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model designer_contracts {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  designer_id     String?    @db.Uuid
  contract_number String?    @unique
  contract_type   String?
  start_date      DateTime?  @db.Date
  end_date        DateTime?  @db.Date
  payment_terms   String?
  deliverables    Json?
  total_value     Decimal?   @db.Decimal(10, 2)
  status          String?    @default("draft")
  signed_date     DateTime?  @db.Date
  document_url    String?
  created_at      DateTime?  @default(now()) @db.Timestamp(6)
  updated_at      DateTime?  @default(now()) @db.Timestamp(6)
  designers       designers? @relation(fields: [designer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_designer_contracts_created_at")
  @@index([designer_id], map: "idx_designer_contracts_designer_id")
  @@index([status], map: "idx_designer_contracts_status")
  @@index([updated_at], map: "idx_designer_contracts_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model designer_performance {
  id                   String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  designer_id          String?          @db.Uuid
  project_id           String?          @db.Uuid
  on_time_delivery     Boolean?
  revision_count       Int?
  quality_rating       Int?
  creativity_rating    Int?
  communication_rating Int?
  would_rehire         Boolean?
  notes                String?
  created_at           DateTime?        @default(now()) @db.Timestamp(6)
  designers            designers?       @relation(fields: [designer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  design_projects      design_projects? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_designer_performance_created_at")
  @@index([designer_id], map: "idx_designer_performance_designer_id")
  @@index([project_id], map: "idx_designer_performance_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model designers {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String
  company_name         String?
  contact_email        String
  phone                String?
  website              String?
  portfolio_url        String?
  specialties          Json?                  @default("[]")
  design_style         Json?                  @default("[]")
  hourly_rate          Decimal?               @db.Decimal(10, 2)
  currency             String?                @default("USD")
  status               String?                @default("prospect")
  rating               Decimal?               @db.Decimal(3, 2)
  years_experience     Int?
  certifications       Json?                  @default("[]")
  notes                String?
  created_at           DateTime?              @default(now()) @db.Timestamp(6)
  updated_at           DateTime?              @default(now()) @db.Timestamp(6)
  collections          collections[]
  concepts             concepts[]
  design_projects      design_projects[]
  designer_contracts   designer_contracts[]
  designer_performance designer_performance[]
  documents            documents[]
  mood_boards          mood_boards[]
  prototypes           prototypes[]

  @@index([created_at], map: "idx_designers_created_at")
  @@index([status], map: "idx_designers_status")
  @@index([updated_at], map: "idx_designers_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_access_log {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id   String        @db.Uuid
  accessed_by   String        @db.Uuid
  access_type   String?       @db.VarChar(50)
  ip_address    String?       @db.Inet
  user_agent    String?
  accessed_at   DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles @relation(fields: [accessed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([accessed_by], map: "idx_document_access_log_accessed_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_approval_workflow {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id     String        @db.Uuid
  approval_step   Int
  approver_id     String        @db.Uuid
  approval_status String?       @default("pending") @db.VarChar(50)
  approval_date   DateTime?     @db.Timestamptz(6)
  comments        String?
  due_date        DateTime?     @db.Date
  created_at      DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles   user_profiles @relation(fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([document_id, approval_step])
  @@index([approver_id], map: "idx_document_approval_workflow_approver_id")
  @@index([created_at], map: "idx_document_approval_workflow_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_approvals {
  id                      String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  document_id             String                   @db.Uuid
  approver_id             String?                  @db.Uuid
  approver_email          String?
  approver_role           String?
  approval_status         String                   @default("pending")
  comments                String?
  conditions_for_approval String?
  markup_file_url         String?
  requested_at            DateTime?                @default(now()) @db.Timestamptz(6)
  requested_by            String                   @db.Uuid
  responded_at            DateTime?                @db.Timestamptz(6)
  deadline                DateTime?                @db.Timestamptz(6)
  reminder_sent_at        DateTime?                @db.Timestamptz(6)
  auto_escalate_after     Unsupported("interval")? @default(dbgenerated("'48:00:00'::interval"))
  escalated_to            String?                  @db.Uuid
  escalated_at            DateTime?                @db.Timestamptz(6)
  priority                String?                  @default("normal")
  approval_order          Int?
  requires_all            Boolean?                 @default(false)

  @@unique([document_id, approver_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_categories {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category      String    @unique @db.VarChar(100)
  subcategories Json?     @default("[]")
  icon          String?   @db.VarChar(50)
  color         String?   @db.VarChar(50)
  sort_order    Int?      @default(0)
  is_active     Boolean?  @default(true)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_document_categories_created_at")
  @@index([is_active], map: "idx_document_categories_is_active")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_comments {
  id                                                          String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id                                                 String              @db.Uuid
  revision_id                                                 String?             @db.Uuid
  comment_text                                                String
  commented_by                                                String              @db.Uuid
  parent_comment_id                                           String?             @db.Uuid
  mentioned_users                                             String[]            @db.Uuid
  is_resolved                                                 Boolean?            @default(false)
  resolved_by                                                 String?             @db.Uuid
  resolved_at                                                 DateTime?           @db.Timestamptz(6)
  created_at                                                  DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at                                                  DateTime?           @default(now()) @db.Timestamptz(6)
  user_profiles_document_comments_commented_byTouser_profiles user_profiles       @relation("document_comments_commented_byTouser_profiles", fields: [commented_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  document_comments                                           document_comments?  @relation("document_commentsTodocument_comments", fields: [parent_comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_document_comments                                     document_comments[] @relation("document_commentsTodocument_comments")
  user_profiles_document_comments_resolved_byTouser_profiles  user_profiles?      @relation("document_comments_resolved_byTouser_profiles", fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([commented_by], map: "idx_document_comments_commented_by")
  @@index([created_at], map: "idx_document_comments_created_at")
  @@index([parent_comment_id], map: "idx_document_comments_parent_comment_id")
  @@index([resolved_by], map: "idx_document_comments_resolved_by")
  @@index([updated_at], map: "idx_document_comments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_comments_new {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id String?    @db.Uuid
  user_id     Int?
  comment     String
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  documents   documents? @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_document_comments_new_created_at")
  @@index([document_id], map: "idx_document_comments_new_document_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_folders {
  id                     String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  folder_name            String             @db.VarChar(255)
  parent_folder_id       String?            @db.Uuid
  google_drive_folder_id String?            @db.VarChar(255)
  customer_id            String?            @db.Uuid
  order_id               String?            @db.Uuid
  project_type           String?            @db.VarChar(50)
  full_path              String?
  created_at             DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?          @default(now()) @db.Timestamptz(6)
  customers              customers?         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders                 orders?            @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  document_folders       document_folders?  @relation("document_foldersTodocument_folders", fields: [parent_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_document_folders document_folders[] @relation("document_foldersTodocument_folders")

  @@index([created_at], map: "idx_document_folders_created_at")
  @@index([customer_id], map: "idx_document_folders_customer_id")
  @@index([order_id], map: "idx_document_folders_order_id")
  @@index([parent_folder_id], map: "idx_document_folders_parent_folder_id")
  @@index([updated_at], map: "idx_document_folders_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_revisions {
  id                                                          String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id                                                 String?        @db.Uuid
  version                                                     Int
  name                                                        String?        @db.VarChar(255)
  size                                                        BigInt?
  uploaded_by                                                 String?        @db.VarChar(255)
  created_at                                                  DateTime?      @default(now()) @db.Timestamptz(6)
  revision_notes                                              String?
  url                                                         String?
  file_hash                                                   String?        @db.VarChar(255)
  changed_by                                                  String?        @db.Uuid
  reviewed_by                                                 String?        @db.Uuid
  review_status                                               String?        @db.VarChar(50)
  review_date                                                 DateTime?      @db.Timestamptz(6)
  user_profiles_document_revisions_changed_byTouser_profiles  user_profiles? @relation("document_revisions_changed_byTouser_profiles", fields: [changed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  documents                                                   documents?     @relation(fields: [document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles_document_revisions_reviewed_byTouser_profiles user_profiles? @relation("document_revisions_reviewed_byTouser_profiles", fields: [reviewed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([changed_by], map: "idx_document_revisions_changed_by")
  @@index([created_at], map: "idx_document_revisions_created_at")
  @@index([document_id], map: "idx_document_revisions_document_id")
  @@index([reviewed_by], map: "idx_document_revisions_reviewed_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model document_templates {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_name    String            @db.VarChar(255)
  category         document_category
  naming_pattern   String?           @db.VarChar(255)
  default_tags     String[]
  default_metadata Json?             @default("{}")
  folder_structure String?
  is_active        Boolean?          @default(true)
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_document_templates_created_at")
  @@index([is_active], map: "idx_document_templates_is_active")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model documents {
  id                                                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                                    String                  @db.VarChar(255)
  original_name                                           String                  @db.VarChar(255)
  auto_generated_name                                     String?                 @db.VarChar(255)
  type                                                    String?                 @db.VarChar(50)
  category                                                String?                 @db.VarChar(100)
  subcategory                                             String?                 @db.VarChar(100)
  size                                                    BigInt?
  uploaded_by                                             String?                 @db.VarChar(255)
  project_id                                              String?                 @db.Uuid
  project_name                                            String?                 @db.VarChar(255)
  client_id                                               String?                 @db.Uuid
  client_name                                             String?                 @db.VarChar(255)
  order_id                                                String?                 @db.Uuid
  order_number                                            String?                 @db.VarChar(100)
  item_id                                                 String?                 @db.Uuid
  item_name                                               String?                 @db.VarChar(255)
  collection_id                                           String?                 @db.Uuid
  manufacturer_id                                         String?                 @db.Uuid
  manufacturer_project_id                                 String?                 @db.Uuid
  designer_id                                             String?                 @db.Uuid
  design_project_id                                       String?                 @db.Uuid
  customer_id                                             String?                 @db.Uuid
  order_item_id                                           String?                 @db.Uuid
  status                                                  String?                 @default("active") @db.VarChar(50)
  tags                                                    Json?                   @default("[]")
  url                                                     String?
  download_url                                            String?
  version                                                 Int?                    @default(1)
  revision_notes                                          String?
  parent_document_id                                      String?                 @db.Uuid
  is_latest_version                                       Boolean?                @default(true)
  access_permissions                                      Json?                   @default("[\"read\"]")
  file_hash                                               String?                 @db.VarChar(255)
  confidentiality                                         String?                 @default("internal") @db.VarChar(50)
  metadata                                                Json?                   @default("{}")
  created_at                                              DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                                              DateTime?               @default(now()) @db.Timestamptz(6)
  uploaded_by_user                                        String?                 @db.Uuid
  approved_by                                             String?                 @db.Uuid
  approved_at                                             DateTime?               @db.Timestamptz(6)
  approval_status                                         String?                 @default("pending") @db.VarChar(50)
  google_drive_folder_id                                  String?                 @db.VarChar(255)
  google_drive_id                                         String?                 @db.VarChar(255)
  google_drive_url                                        String?
  storage_bucket                                          String?                 @db.VarChar(100)
  storage_type                                            String?                 @default("supabase") @db.VarChar(50)
  concept_id                                              String?                 @db.Uuid
  prototype_id                                            String?                 @db.Uuid
  catalog_item_id                                         String?                 @db.Uuid
  production_order_id                                     String?                 @db.Uuid
  media_type                                              String?                 @db.VarChar(50)
  use_for_packaging                                       Boolean?                @default(false)
  use_for_labeling                                        Boolean?                @default(false)
  use_for_marketing                                       Boolean?                @default(false)
  is_primary_image                                        Boolean?                @default(false)
  display_order                                           Int?                    @default(0)
  google_drive_file_id                                    String?                 @db.VarChar(255)
  file_source                                             String?                 @default("supabase") @db.VarChar(20)
  document_comments_new                                   document_comments_new[]
  document_revisions                                      document_revisions[]
  user_profiles_documents_approved_byTouser_profiles      user_profiles?          @relation("documents_approved_byTouser_profiles", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  collections                                             collections?            @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                                               customers?              @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_projects                                         design_projects?        @relation(fields: [design_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  designers                                               designers?              @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturers                                           manufacturers?          @relation(fields: [manufacturer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturer_projects                                   manufacturer_projects?  @relation(fields: [manufacturer_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items                                             order_items?            @relation(fields: [order_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_profiles_documents_uploaded_by_userTouser_profiles user_profiles?          @relation("documents_uploaded_by_userTouser_profiles", fields: [uploaded_by_user], references: [id], onDelete: NoAction, onUpdate: NoAction)
  concepts                                                concepts?               @relation(fields: [concept_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_documents_concepts")
  prototypes                                              prototypes?             @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_documents_prototypes")
  production_orders                                       production_orders[]

  @@index([approved_by], map: "idx_documents_approved_by")
  @@index([catalog_item_id], map: "idx_documents_catalog_item_id")
  @@index([collection_id], map: "idx_documents_collection_id")
  @@index([concept_id], map: "idx_documents_concept_id")
  @@index([created_at], map: "idx_documents_created_at")
  @@index([customer_id], map: "idx_documents_customer_id")
  @@index([design_project_id], map: "idx_documents_design_project_id")
  @@index([designer_id], map: "idx_documents_designer_id")
  @@index([manufacturer_id], map: "idx_documents_manufacturer_id")
  @@index([manufacturer_project_id], map: "idx_documents_manufacturer_project_id")
  @@index([media_type], map: "idx_documents_media_type")
  @@index([order_item_id], map: "idx_documents_order_item_id")
  @@index([production_order_id], map: "idx_documents_production_order_id")
  @@index([prototype_id], map: "idx_documents_prototype_id")
  @@index([status], map: "idx_documents_status")
  @@index([storage_type], map: "idx_documents_storage_type")
  @@index([updated_at], map: "idx_documents_updated_at")
  @@index([uploaded_by_user], map: "idx_documents_uploaded_by_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_campaigns {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_name     String           @db.VarChar(255)
  subject_line      String
  email_template    String
  from_name         String?          @db.VarChar(100)
  from_email        String?          @db.VarChar(255)
  reply_to          String?          @db.VarChar(255)
  recipient_list    Json?            @default("[]")
  segment_criteria  Json?
  scheduled_date    DateTime?        @db.Timestamptz(6)
  status            String?          @default("draft") @db.VarChar(50)
  total_recipients  Int?             @default(0)
  sent_count        Int?             @default(0)
  open_count        Int?             @default(0)
  click_count       Int?             @default(0)
  bounce_count      Int?             @default(0)
  unsubscribe_count Int?             @default(0)
  created_by        String?          @db.Uuid
  created_at        DateTime?        @default(now()) @db.Timestamptz(6)
  sent_at           DateTime?        @db.Timestamptz(6)
  scheduled_for     DateTime?        @db.Timestamptz(6)
  updated_at        DateTime?        @default(now()) @db.Timestamptz(6)
  users             users?           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  email_queue       email_queue[]
  email_tracking    email_tracking[]

  @@index([created_at], map: "idx_email_campaigns_created_at")
  @@index([created_by], map: "idx_email_campaigns_created_by")
  @@index([status], map: "idx_email_campaigns_status")
  @@index([updated_at], map: "idx_email_campaigns_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_queue {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  recipient_email     String           @db.VarChar(255)
  template_id         String?          @db.Uuid
  subject             String           @db.VarChar(255)
  html_content        String?
  text_content        String?
  status              String?          @default("pending") @db.VarChar(20)
  provider            String?          @db.VarChar(50)
  provider_message_id String?          @db.VarChar(255)
  error_message       String?
  sent_at             DateTime?        @db.Timestamptz(6)
  delivered_at        DateTime?        @db.Timestamptz(6)
  priority            Int?             @default(5)
  metadata            Json?            @default("{}")
  created_at          DateTime?        @default(now()) @db.Timestamptz(6)
  campaign_id         String?          @db.Uuid
  unsubscribe_token   String?          @db.VarChar(255)
  email_campaigns     email_campaigns? @relation(fields: [campaign_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  email_templates     email_templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([campaign_id], map: "idx_email_queue_campaign_id")
  @@index([created_at], map: "idx_email_queue_created_at")
  @@index([status], map: "idx_email_queue_status")
  @@index([template_id], map: "idx_email_queue_template")
  @@index([template_id], map: "idx_email_queue_template_id")
  @@index([unsubscribe_token], map: "idx_email_queue_unsubscribe_token")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_templates {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_key String        @unique @db.VarChar(100)
  name         String        @db.VarChar(255)
  subject      String        @db.VarChar(255)
  html_content String
  text_content String?
  variables    String[]
  language     String?       @default("en") @db.VarChar(10)
  is_active    Boolean?      @default(true)
  created_at   DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @default(now()) @db.Timestamptz(6)
  email_queue  email_queue[]

  @@index([created_at], map: "idx_email_templates_created_at")
  @@index([is_active], map: "idx_email_templates_is_active")
  @@index([updated_at], map: "idx_email_templates_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_tracking {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_id     String?          @db.Uuid
  recipient_email String?          @db.VarChar(255)
  event_type      String?          @db.VarChar(50)
  event_data      Json?
  ip_address      String?          @db.Inet
  user_agent      String?
  created_at      DateTime?        @default(now()) @db.Timestamptz(6)
  email_campaigns email_campaigns? @relation(fields: [campaign_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([campaign_id], map: "idx_email_tracking_campaign_id")
  @@index([created_at], map: "idx_email_tracking_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model email_unsubscribes {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String    @unique @db.VarChar(255)
  reason          String?   @db.VarChar(100)
  unsubscribed_at DateTime? @default(now()) @db.Timestamptz(6)
  campaign_id     String?   @db.Uuid
  metadata        Json?     @default("{}")

  @@index([email], map: "idx_email_unsubscribes_email")
  @@index([unsubscribed_at], map: "idx_email_unsubscribes_unsubscribed_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model expenses {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category         String    @db.VarChar(255)
  subcategory      String?   @db.VarChar(255)
  amount           Decimal   @db.Decimal(12, 2)
  description      String?
  vendor           String?   @db.VarChar(255)
  payment_method   String?   @db.VarChar(100)
  reference_number String?   @db.VarChar(100)
  expense_date     DateTime  @db.Date
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  created_by       String?   @db.Uuid
  approved_by      String?   @db.Uuid
  approval_status  String?   @default("pending") @db.VarChar(50)

  @@index([approval_status], map: "idx_expenses_approval_status")
  @@index([category], map: "idx_expenses_category")
  @@index([created_at], map: "idx_expenses_created_at")
  @@index([expense_date], map: "idx_expenses_expense_date")
  @@index([updated_at], map: "idx_expenses_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model export_configurations {
  id                    String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String           @db.VarChar(255)
  module                String           @db.VarChar(100)
  export_type           String           @db.VarChar(50)
  fields                Json             @default("[]")
  filters               Json?            @default("{}")
  schedule_enabled      Boolean?         @default(false)
  schedule_frequency    String?          @db.VarChar(50)
  schedule_time         DateTime?        @db.Time(6)
  schedule_day_of_week  Int?
  schedule_day_of_month Int?
  email_recipients      String[]
  is_active             Boolean?         @default(true)
  created_by            String?          @db.Uuid
  created_at            DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?        @default(now()) @db.Timestamptz(6)
  users                 users?           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  export_history        export_history[]

  @@index([created_at], map: "idx_export_configurations_created_at")
  @@index([created_by], map: "idx_export_configurations_created_by")
  @@index([is_active], map: "idx_export_configurations_is_active")
  @@index([updated_at], map: "idx_export_configurations_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model export_history {
  id                    String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  configuration_id      String?                @db.Uuid
  module                String                 @db.VarChar(100)
  export_type           String                 @db.VarChar(50)
  file_name             String                 @db.VarChar(255)
  file_size             BigInt?
  file_url              String?
  storage_path          String?
  record_count          Int?
  filters_applied       Json?
  status                String?                @default("pending") @db.VarChar(50)
  error_message         String?
  started_at            DateTime?              @default(now()) @db.Timestamptz(6)
  completed_at          DateTime?              @db.Timestamptz(6)
  expires_at            DateTime?              @db.Timestamptz(6)
  created_by            String?                @db.Uuid
  created_at            DateTime?              @default(now()) @db.Timestamptz(6)
  export_configurations export_configurations? @relation(fields: [configuration_id], references: [id], onUpdate: NoAction)
  users                 users?                 @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([configuration_id], map: "idx_export_history_configuration_id")
  @@index([created_at], map: "idx_export_history_created_at")
  @@index([created_by], map: "idx_export_history_created_by")
  @@index([status], map: "idx_export_history_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model factory_review_comments {
  id                                               String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  photo_id                                         String?                   @db.Uuid
  session_id                                       String                    @db.Uuid
  comment_text                                     String
  comment_type                                     String                    @default("issue")
  author_id                                        String                    @db.Uuid
  author_role                                      String
  is_action_item                                   Boolean                   @default(false)
  assigned_to                                      String?
  due_date                                         DateTime?                 @db.Date
  resolved_at                                      DateTime?                 @db.Timestamptz(6)
  resolved_by                                      String?                   @db.Uuid
  parent_comment_id                                String?                   @db.Uuid
  created_at                                       DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime                  @default(now()) @db.Timestamptz(6)
  users_factory_review_comments_author_idTousers   users                     @relation("factory_review_comments_author_idTousers", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  factory_review_comments                          factory_review_comments?  @relation("factory_review_commentsTofactory_review_comments", fields: [parent_comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_factory_review_comments                    factory_review_comments[] @relation("factory_review_commentsTofactory_review_comments")
  factory_review_photos                            factory_review_photos?    @relation(fields: [photo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_factory_review_comments_resolved_byTousers users?                    @relation("factory_review_comments_resolved_byTousers", fields: [resolved_by], references: [id], onUpdate: NoAction)
  factory_review_sessions                          factory_review_sessions   @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([is_action_item], map: "idx_factory_review_comments_action")
  @@index([author_id], map: "idx_factory_review_comments_author_id")
  @@index([created_at], map: "idx_factory_review_comments_created_at")
  @@index([parent_comment_id], map: "idx_factory_review_comments_parent_comment_id")
  @@index([photo_id], map: "idx_factory_review_comments_photo")
  @@index([photo_id], map: "idx_factory_review_comments_photo_id")
  @@index([resolved_by], map: "idx_factory_review_comments_resolved_by")
  @@index([session_id], map: "idx_factory_review_comments_session")
  @@index([session_id], map: "idx_factory_review_comments_session_id")
  @@index([updated_at], map: "idx_factory_review_comments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model factory_review_documents {
  id                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id              String                  @db.Uuid
  file_url                String
  file_name               String
  file_size               BigInt?
  document_type           String?
  uploaded_by             String                  @db.Uuid
  created_at              DateTime                @default(now()) @db.Timestamptz(6)
  factory_review_sessions factory_review_sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                   users                   @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_factory_review_documents_created_at")
  @@index([session_id], map: "idx_factory_review_documents_session")
  @@index([session_id], map: "idx_factory_review_documents_session_id")
  @@index([uploaded_by], map: "idx_factory_review_documents_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model factory_review_photos {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id              String                    @db.Uuid
  file_url                String
  thumbnail_url           String?
  file_name               String
  file_size               BigInt
  mime_type               String?
  component_area          String?
  issue_severity          String                    @default("observation")
  uploaded_by             String                    @db.Uuid
  uploaded_by_role        String
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  factory_review_comments factory_review_comments[]
  factory_review_sessions factory_review_sessions   @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                   users                     @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_factory_review_photos_created_at")
  @@index([session_id], map: "idx_factory_review_photos_session")
  @@index([session_id], map: "idx_factory_review_photos_session_id")
  @@index([issue_severity], map: "idx_factory_review_photos_severity")
  @@index([uploaded_by], map: "idx_factory_review_photos_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model factory_review_sessions {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_production_id  String                     @db.Uuid
  session_number           Int
  session_name             String
  review_date              DateTime                   @db.Date
  location                 String?
  limn_team_members        String[]
  designer_ids             String[]
  factory_representatives  String[]
  status                   String                     @default("scheduled")
  completion_notes         String?
  completed_at             DateTime?                  @db.Timestamptz(6)
  created_by               String                     @db.Uuid
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime                   @default(now()) @db.Timestamptz(6)
  factory_review_comments  factory_review_comments[]
  factory_review_documents factory_review_documents[]
  factory_review_photos    factory_review_photos[]
  users                    users                      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prototype_production     prototype_production       @relation(fields: [prototype_production_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_factory_review_sessions_created_at")
  @@index([created_by], map: "idx_factory_review_sessions_created_by")
  @@index([review_date], map: "idx_factory_review_sessions_date")
  @@index([prototype_production_id], map: "idx_factory_review_sessions_production")
  @@index([prototype_production_id], map: "idx_factory_review_sessions_prototype_production_id")
  @@index([status], map: "idx_factory_review_sessions_status")
  @@index([updated_at], map: "idx_factory_review_sessions_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feature_permissions {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_type        user_type_enum
  feature_name     String         @db.VarChar(100)
  feature_category String?        @db.VarChar(50)
  is_enabled       Boolean?       @default(false)
  description      String?
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?      @default(now()) @db.Timestamptz(6)

  @@unique([user_type, feature_name])
  @@index([created_at], map: "idx_feature_permissions_created_at")
  @@index([updated_at], map: "idx_feature_permissions_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model financial_periods {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  period_type          String?
  period_name          String
  start_date           DateTime  @db.Date
  end_date             DateTime  @db.Date
  is_closed            Boolean?  @default(false)
  closed_date          DateTime? @db.Timestamp(6)
  closed_by            String?   @db.Uuid
  total_revenue        Decimal?  @db.Decimal(12, 2)
  total_costs          Decimal?  @db.Decimal(12, 2)
  gross_profit         Decimal?  @db.Decimal(12, 2)
  gross_margin_percent Decimal?  @db.Decimal(5, 2)
  invoice_count        Int?
  payment_count        Int?
  created_at           DateTime? @default(now()) @db.Timestamp(6)
  users                users?    @relation(fields: [closed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([period_type, start_date])
  @@index([closed_by], map: "idx_financial_periods_closed_by")
  @@index([created_at], map: "idx_financial_periods_created_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flipbook_conversions {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flipbook_id    String         @db.Uuid
  session_id     String         @db.Uuid
  order_id       String         @db.Uuid
  user_id        String?        @db.Uuid
  converted_at   DateTime       @default(now()) @db.Timestamptz(6)
  revenue_amount Decimal?       @db.Decimal(12, 2)
  metadata       Json?
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  flipbooks      flipbooks      @relation(fields: [flipbook_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_flipbook_conversions_flipbook")
  orders         orders         @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_flipbook_conversions_order")
  user_profiles  user_profiles? @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_flipbook_conversions_user")

  @@index([converted_at(sort: Desc)], map: "idx_flipbook_conversions_converted_at")
  @@index([created_at(sort: Desc)], map: "idx_flipbook_conversions_created_at")
  @@index([flipbook_id], map: "idx_flipbook_conversions_flipbook_id")
  @@index([order_id], map: "idx_flipbook_conversions_order_id")
  @@index([session_id], map: "idx_flipbook_conversions_session_id")
  @@index([user_id], map: "idx_flipbook_conversions_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flipbook_pages {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flipbook_id            String                   @db.Uuid
  page_number            Int
  image_url              String
  thumbnail_url          String?
  page_type              Unsupported("page_type") @default(dbgenerated("'CONTENT'::flipbook.page_type"))
  text_content           String?
  seo_title              String?                  @db.VarChar(255)
  seo_description        String?
  layout_data            Json?
  created_at             DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                 @default(now()) @db.Timestamptz(6)
  thumbnail_small_url    String?                  @db.VarChar(500)
  thumbnail_generated_at DateTime?                @db.Timestamptz(6)
  width                  Int?
  height                 Int?
  flipbooks              flipbooks                @relation(fields: [flipbook_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  hotspots               hotspots[]

  @@unique([flipbook_id, page_number])
  @@index([created_at], map: "idx_flipbook_pages_created_at")
  @@index([flipbook_id], map: "idx_flipbook_pages_flipbook")
  @@index([flipbook_id], map: "idx_flipbook_pages_flipbook_id")
  @@index([updated_at], map: "idx_flipbook_pages_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flipbook_share_links {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flipbook_id       String             @db.Uuid
  created_by_id     String             @db.Uuid
  token             String             @unique @db.VarChar(64)
  vanity_slug       String?            @unique @db.VarChar(100)
  label             String?            @db.VarChar(255)
  view_count        Int                @default(0)
  unique_view_count Int                @default(0)
  last_viewed_at    DateTime?          @db.Timestamptz(6)
  expires_at        DateTime?          @db.Timestamptz(6)
  is_active         Boolean            @default(true)
  settings          Json?
  created_at        DateTime           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime           @default(now()) @db.Timestamptz(6)
  user_profiles     user_profiles      @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  flipbooks         flipbooks          @relation(fields: [flipbook_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  share_link_views  share_link_views[]

  @@index([created_at], map: "idx_flipbook_share_links_created_at")
  @@index([created_by_id], map: "idx_flipbook_share_links_created_by_id")
  @@index([flipbook_id], map: "idx_flipbook_share_links_flipbook_id")
  @@index([is_active], map: "idx_flipbook_share_links_is_active")
  @@index([token], map: "idx_flipbook_share_links_token")
  @@index([updated_at], map: "idx_flipbook_share_links_updated_at")
  @@index([created_by_id], map: "idx_share_links_creator")
  @@index([expires_at], map: "idx_share_links_expiry")
  @@index([flipbook_id], map: "idx_share_links_flipbook")
  @@index([token], map: "idx_share_links_token")
  @@index([vanity_slug], map: "idx_share_links_vanity")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flipbook_versions {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  flipbook_id    String        @db.Uuid
  version_number Int
  created_by_id  String        @db.Uuid
  snapshot_data  Json
  change_notes   String?
  is_published   Boolean       @default(false)
  created_at     DateTime      @default(now()) @db.Timestamptz(6)
  user_profiles  user_profiles @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  flipbooks      flipbooks     @relation(fields: [flipbook_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([flipbook_id, version_number])
  @@index([created_at], map: "idx_flipbook_versions_created_at")
  @@index([created_by_id], map: "idx_flipbook_versions_created_by")
  @@index([created_by_id], map: "idx_flipbook_versions_created_by_id")
  @@index([flipbook_id], map: "idx_flipbook_versions_flipbook")
  @@index([flipbook_id], map: "idx_flipbook_versions_flipbook_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flipbooks {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                String                 @db.VarChar(255)
  description          String?
  created_by_id        String                 @db.Uuid
  cover_image_url      String?
  thumbnail_url        String?
  pdf_source_url       String?
  page_count           Int?                   @default(0)
  view_count           Int?                   @default(0)
  published_at         DateTime?              @db.Timestamptz(6)
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  settings             Json?
  branding             Json?
  toc_data             Json?
  toc_auto_generated   Boolean?               @default(false)
  toc_last_updated     DateTime?              @db.Timestamptz(6)
  navigation_settings  Json?
  status               flipbook_status        @default(DRAFT)
  analytics_events     analytics_events[]
  flipbook_conversions flipbook_conversions[]
  flipbook_pages       flipbook_pages[]
  flipbook_share_links flipbook_share_links[]
  flipbook_versions    flipbook_versions[]
  user_profiles        user_profiles          @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_flipbooks_created_at")
  @@index([created_by_id], map: "idx_flipbooks_created_by_id")
  @@index([created_by_id], map: "idx_flipbooks_creator")
  @@index([status], map: "idx_flipbooks_status")
  @@index([updated_at], map: "idx_flipbooks_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model furniture_dimensions {
  id                                    String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  item_id                               String    @db.Uuid
  furniture_type                        String    @db.VarChar(50)
  height_inches                         Decimal?  @db.Decimal(10, 2)
  height_cm                             Decimal?  @db.Decimal(10, 2)
  width_inches                          Decimal?  @db.Decimal(10, 2)
  width_cm                              Decimal?  @db.Decimal(10, 2)
  depth_inches                          Decimal?  @db.Decimal(10, 2)
  depth_cm                              Decimal?  @db.Decimal(10, 2)
  weight_capacity                       Int?
  clearance_required_inches             Decimal?  @db.Decimal(10, 2)
  clearance_required_cm                 Decimal?  @db.Decimal(10, 2)
  doorway_clearance_inches              Decimal?  @db.Decimal(10, 2)
  doorway_clearance_cm                  Decimal?  @db.Decimal(10, 2)
  material_thickness_inches             Decimal?  @db.Decimal(10, 2)
  material_thickness_cm                 Decimal?  @db.Decimal(10, 2)
  length_inches                         Decimal?  @db.Decimal(10, 2)
  length_cm                             Decimal?  @db.Decimal(10, 2)
  apron_height_inches                   Decimal?  @db.Decimal(10, 2)
  apron_height_cm                       Decimal?  @db.Decimal(10, 2)
  leg_clearance_inches                  Decimal?  @db.Decimal(10, 2)
  leg_clearance_cm                      Decimal?  @db.Decimal(10, 2)
  overhang_inches                       Decimal?  @db.Decimal(10, 2)
  overhang_cm                           Decimal?  @db.Decimal(10, 2)
  leaf_width_inches                     Decimal?  @db.Decimal(10, 2)
  leaf_width_cm                         Decimal?  @db.Decimal(10, 2)
  leaf_length_inches                    Decimal?  @db.Decimal(10, 2)
  leaf_length_cm                        Decimal?  @db.Decimal(10, 2)
  seat_height_inches                    Decimal?  @db.Decimal(10, 2)
  seat_height_cm                        Decimal?  @db.Decimal(10, 2)
  seat_width_inches                     Decimal?  @db.Decimal(10, 2)
  seat_width_cm                         Decimal?  @db.Decimal(10, 2)
  seat_depth_inches                     Decimal?  @db.Decimal(10, 2)
  seat_depth_cm                         Decimal?  @db.Decimal(10, 2)
  arm_height_inches                     Decimal?  @db.Decimal(10, 2)
  arm_height_cm                         Decimal?  @db.Decimal(10, 2)
  backrest_height_inches                Decimal?  @db.Decimal(10, 2)
  backrest_height_cm                    Decimal?  @db.Decimal(10, 2)
  width_across_arms_inches              Decimal?  @db.Decimal(10, 2)
  width_across_arms_cm                  Decimal?  @db.Decimal(10, 2)
  created_at                            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                            DateTime? @default(now()) @db.Timestamptz(6)
  overall_assembled_width_inches        Decimal?  @db.Decimal(10, 2)
  overall_assembled_width_cm            Decimal?  @db.Decimal(10, 2)
  overall_assembled_depth_inches        Decimal?  @db.Decimal(10, 2)
  overall_assembled_depth_cm            Decimal?  @db.Decimal(10, 2)
  corner_width_inches                   Decimal?  @db.Decimal(10, 2)
  corner_width_cm                       Decimal?  @db.Decimal(10, 2)
  corner_depth_inches                   Decimal?  @db.Decimal(10, 2)
  corner_depth_cm                       Decimal?  @db.Decimal(10, 2)
  chaise_length_inches                  Decimal?  @db.Decimal(10, 2)
  chaise_length_cm                      Decimal?  @db.Decimal(10, 2)
  min_configuration_width_inches        Decimal?  @db.Decimal(10, 2)
  min_configuration_width_cm            Decimal?  @db.Decimal(10, 2)
  max_configuration_width_inches        Decimal?  @db.Decimal(10, 2)
  max_configuration_width_cm            Decimal?  @db.Decimal(10, 2)
  reclined_depth_inches                 Decimal?  @db.Decimal(10, 2)
  reclined_depth_cm                     Decimal?  @db.Decimal(10, 2)
  footrest_length_inches                Decimal?  @db.Decimal(10, 2)
  footrest_length_cm                    Decimal?  @db.Decimal(10, 2)
  zero_wall_clearance_inches            Decimal?  @db.Decimal(10, 2)
  zero_wall_clearance_cm                Decimal?  @db.Decimal(10, 2)
  swivel_range                          Int?
  rock_glide_depth_inches               Decimal?  @db.Decimal(10, 2)
  rock_glide_depth_cm                   Decimal?  @db.Decimal(10, 2)
  ottoman_height_inches                 Decimal?  @db.Decimal(10, 2)
  ottoman_height_cm                     Decimal?  @db.Decimal(10, 2)
  ottoman_length_inches                 Decimal?  @db.Decimal(10, 2)
  ottoman_length_cm                     Decimal?  @db.Decimal(10, 2)
  ottoman_width_inches                  Decimal?  @db.Decimal(10, 2)
  ottoman_width_cm                      Decimal?  @db.Decimal(10, 2)
  interior_width_inches                 Decimal?  @db.Decimal(10, 2)
  interior_width_cm                     Decimal?  @db.Decimal(10, 2)
  interior_depth_inches                 Decimal?  @db.Decimal(10, 2)
  interior_depth_cm                     Decimal?  @db.Decimal(10, 2)
  interior_height_inches                Decimal?  @db.Decimal(10, 2)
  interior_height_cm                    Decimal?  @db.Decimal(10, 2)
  backrest_angle                        Int?
  chaise_orientation                    String?   @db.VarChar(10)
  adjustable_positions                  Int?
  cushion_thickness_compressed_inches   Decimal?  @db.Decimal(10, 2)
  cushion_thickness_compressed_cm       Decimal?  @db.Decimal(10, 2)
  cushion_thickness_uncompressed_inches Decimal?  @db.Decimal(10, 2)
  cushion_thickness_uncompressed_cm     Decimal?  @db.Decimal(10, 2)
  stacking_height_inches                Decimal?  @db.Decimal(10, 2)
  stacking_height_cm                    Decimal?  @db.Decimal(10, 2)
  folded_width_inches                   Decimal?  @db.Decimal(10, 2)
  folded_width_cm                       Decimal?  @db.Decimal(10, 2)
  folded_depth_inches                   Decimal?  @db.Decimal(10, 2)
  folded_depth_cm                       Decimal?  @db.Decimal(10, 2)
  folded_height_inches                  Decimal?  @db.Decimal(10, 2)
  folded_height_cm                      Decimal?  @db.Decimal(10, 2)
  diagonal_depth_inches                 Decimal?  @db.Decimal(10, 2)
  diagonal_depth_cm                     Decimal?  @db.Decimal(10, 2)
  leg_height_inches                     Decimal?  @db.Decimal(10, 2)
  leg_height_cm                         Decimal?  @db.Decimal(10, 2)
  clearance_height_inches               Decimal?  @db.Decimal(10, 2)
  clearance_height_cm                   Decimal?  @db.Decimal(10, 2)
  table_top_thickness_inches            Decimal?  @db.Decimal(10, 2)
  table_top_thickness_cm                Decimal?  @db.Decimal(10, 2)
  leg_section_length_inches             Decimal?  @db.Decimal(10, 2)
  leg_section_length_cm                 Decimal?  @db.Decimal(10, 2)
  back_height_inches                    Decimal?  @db.Decimal(10, 2)
  back_height_cm                        Decimal?  @db.Decimal(10, 2)
  weight_lbs_new                        Decimal?  @db.Decimal(10, 2)
  weight_kg                             Decimal?  @db.Decimal(10, 2)
  clearance_required_new_inches         Decimal?  @db.Decimal(10, 2)
  clearance_required_new_cm             Decimal?  @db.Decimal(10, 2)
  doorway_clearance_new_inches          Decimal?  @db.Decimal(10, 2)
  doorway_clearance_new_cm              Decimal?  @db.Decimal(10, 2)
  diagonal_depth_new_inches             Decimal?  @db.Decimal(10, 2)
  diagonal_depth_new_cm                 Decimal?  @db.Decimal(10, 2)
  stacking_height_new_inches            Decimal?  @db.Decimal(10, 2)
  stacking_height_new_cm                Decimal?  @db.Decimal(10, 2)
  folded_width_new_inches               Decimal?  @db.Decimal(10, 2)
  folded_width_new_cm                   Decimal?  @db.Decimal(10, 2)
  folded_depth_new_inches               Decimal?  @db.Decimal(10, 2)
  folded_depth_new_cm                   Decimal?  @db.Decimal(10, 2)
  folded_height_new_inches              Decimal?  @db.Decimal(10, 2)
  folded_height_new_cm                  Decimal?  @db.Decimal(10, 2)
  material_thickness_new_inches         Decimal?  @db.Decimal(10, 2)
  material_thickness_new_cm             Decimal?  @db.Decimal(10, 2)
  items                                 items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_furniture_dimensions_created_at")
  @@index([item_id], map: "idx_furniture_dimensions_item_id")
  @@index([updated_at], map: "idx_furniture_dimensions_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model hotspots {
  id                String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  page_id           String                      @db.Uuid
  hotspot_type      Unsupported("hotspot_type")
  x_position        Decimal                     @db.Decimal(5, 2)
  y_position        Decimal                     @db.Decimal(5, 2)
  width             Decimal                     @db.Decimal(5, 2)
  height            Decimal                     @db.Decimal(5, 2)
  target_url        String?
  target_page       Int?
  target_product_id String?                     @db.Uuid
  popup_content     Json?
  form_config       Json?
  style_config      Json?
  click_count       Int                         @default(0)
  created_at        DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at        DateTime                    @default(now()) @db.Timestamptz(6)
  flipbook_pages    flipbook_pages              @relation(fields: [page_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products          products?                   @relation(fields: [target_product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_hotspots_created_at")
  @@index([page_id], map: "idx_hotspots_page")
  @@index([page_id], map: "idx_hotspots_page_id")
  @@index([target_product_id], map: "idx_hotspots_target_product")
  @@index([target_product_id], map: "idx_hotspots_target_product_id")
  @@index([hotspot_type], map: "idx_hotspots_type")
  @@index([updated_at], map: "idx_hotspots_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model integration_status {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  service_name String    @unique @db.VarChar(100)
  status       String?   @default("active") @db.VarChar(50)
  last_sync    DateTime? @db.Timestamptz(6)
  sync_errors  Json?     @default("[]")
  metadata     Json?     @default("{}")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_integration_status_created_at")
  @@index([status], map: "idx_integration_status_status")
  @@index([updated_at], map: "idx_integration_status_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model inventory {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  item_id           String?   @db.Uuid
  location          String?
  quantity          Int?
  reserved_quantity Int?
  reorder_point     Int?
  reorder_quantity  Int?
  last_counted      String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([item_id, location])
  @@index([created_at], map: "idx_inventory_created_at")
  @@index([updated_at], map: "idx_inventory_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_items {
  id                 String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_id         String?      @db.Uuid
  item_id            String?      @db.Uuid
  order_item_id      String?      @db.Uuid
  quickbooks_item_id String?
  description        String
  quantity           Decimal      @db.Decimal(10, 2)
  unit_price         Decimal      @db.Decimal(12, 2)
  discount_percent   Decimal?     @default(0) @db.Decimal(5, 2)
  discount_amount    Decimal?     @default(0) @db.Decimal(12, 2)
  tax_rate           Decimal?     @db.Decimal(5, 2)
  tax_amount         Decimal?     @db.Decimal(12, 2)
  line_total         Decimal?     @default(dbgenerated("((quantity * unit_price) - discount_amount)")) @db.Decimal(12, 2)
  item_type          String?
  sort_order         Int?
  created_at         DateTime?    @default(now()) @db.Timestamp(6)
  invoices           invoices?    @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  items              items?       @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items        order_items? @relation(fields: [order_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_invoice_items_created_at")
  @@index([invoice_id], map: "idx_invoice_items_invoice_id")
  @@index([item_id], map: "idx_invoice_items_item_id")
  @@index([order_item_id], map: "idx_invoice_items_order_item_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoice_templates {
  id                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String
  template_type          String
  is_default             Boolean?   @default(false)
  company_logo_url       String?
  company_name           String?    @default("Limn Systems")
  company_address        String?
  company_city_state_zip String?
  company_phone          String?
  company_email          String?
  company_website        String?
  font_family            String?    @default("Roboto")
  font_size_base         Int?       @default(10)
  font_size_heading      Int?       @default(24)
  font_size_subheading   Int?       @default(14)
  color_primary          String?    @default("#2563eb")
  color_secondary        String?    @default("#64748b")
  color_text             String?    @default("#0f172a")
  color_border           String?    @default("#e2e8f0")
  color_background       String?    @default("#ffffff")
  show_company_logo      Boolean?   @default(true)
  show_payment_terms     Boolean?   @default(true)
  show_bank_details      Boolean?   @default(false)
  show_notes_section     Boolean?   @default(true)
  show_tax_summary       Boolean?   @default(true)
  default_payment_terms  String?    @default("Net 30")
  bank_name              String?
  bank_account_number    String?
  bank_routing_number    String?
  bank_swift_code        String?
  footer_text            String?
  notes_text             String?
  created_at             DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?  @default(now()) @db.Timestamptz(6)
  created_by             String?    @db.Uuid
  users                  users?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoices               invoices[]

  @@index([created_at], map: "idx_invoice_templates_created_at")
  @@index([created_by], map: "idx_invoice_templates_created_by")
  @@index([template_type], map: "idx_invoice_templates_type")
  @@index([updated_at], map: "idx_invoice_templates_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoices {
  id                       String                     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  invoice_number           String?                    @unique
  invoice_date             DateTime?                  @default(dbgenerated("CURRENT_DATE")) @db.Date
  due_date                 DateTime?                  @db.Date
  customer_id              String?                    @db.Uuid
  order_id                 String?                    @db.Uuid
  project_id               String?                    @db.Uuid
  status                   String?                    @default("pending")
  subtotal                 Decimal?                   @default(0) @db.Decimal(12, 2)
  tax_total                Decimal?                   @default(0) @db.Decimal(12, 2)
  discount_total           Decimal?                   @default(0) @db.Decimal(12, 2)
  total_amount             Decimal?                   @default(0) @db.Decimal(12, 2)
  amount_paid              Decimal?                   @default(0) @db.Decimal(12, 2)
  balance_due              Decimal?                   @default(dbgenerated("(total_amount - amount_paid)")) @db.Decimal(12, 2)
  template_id              String?                    @db.Uuid
  pdf_url                  String?
  pdf_generated_at         DateTime?                  @db.Timestamptz(6)
  invoice_notes            String?
  payment_terms            String?                    @default("Net 30")
  internal_notes           String?
  quickbooks_invoice_id    String?
  quickbooks_sync_date     DateTime?                  @db.Timestamptz(6)
  invoice_items            invoice_items[]
  customers                customers?                 @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders                   orders?                    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects                 projects?                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoice_templates        invoice_templates?         @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment_allocations      payment_allocations[]
  quickbooks_payment_queue quickbooks_payment_queue[]

  @@index([created_at], map: "idx_invoices_created_at")
  @@index([created_at(sort: Desc)], map: "idx_invoices_created_at_desc")
  @@index([customer_id], map: "idx_invoices_customer_id")
  @@index([customer_id, status], map: "idx_invoices_customer_status")
  @@index([due_date], map: "idx_invoices_due_date")
  @@index([invoice_date(sort: Desc)], map: "idx_invoices_invoice_date")
  @@index([invoice_number], map: "idx_invoices_invoice_number")
  @@index([order_id], map: "idx_invoices_order_id")
  @@index([project_id], map: "idx_invoices_project_id")
  @@index([status], map: "idx_invoices_status")
  @@index([status, created_at(sort: Desc)], map: "idx_invoices_status_created")
  @@index([template_id], map: "idx_invoices_template_id")
  @@index([updated_at], map: "idx_invoices_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model item_images {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  item_id     String    @db.Uuid
  image_type  String    @db.VarChar(50)
  file_url    String
  file_name   String?   @db.VarChar(255)
  file_size   Int?
  mime_type   String?   @db.VarChar(100)
  alt_text    String?
  description String?
  sort_order  Int?      @default(0)
  is_primary  Boolean?  @default(false)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  items       items     @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_item_images_created_at")
  @@index([item_id], map: "idx_item_images_item_id")
  @@index([image_type], map: "idx_item_images_type")
  @@index([updated_at], map: "idx_item_images_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model items {
  id                                                         String                  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                                                       String                  @db.VarChar
  sku_full                                                   String?                 @db.VarChar
  description                                                String?
  price                                                      Decimal?                @db.Decimal(10, 2)
  category                                                   String?                 @db.VarChar
  created_at                                                 DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at                                                 DateTime?               @default(now()) @db.Timestamptz(6)
  collection_id                                              String?                 @db.Uuid
  list_price                                                 Decimal?                @db.Decimal(10, 2)
  cost                                                       Decimal?                @db.Decimal(10, 2)
  weight                                                     Decimal?                @db.Decimal
  dimensions                                                 String?
  material_id                                                String?                 @db.Uuid
  labor_hours                                                Decimal?                @db.Decimal
  setup_fee                                                  Decimal?                @db.Decimal(10, 2)
  minimum_quantity                                           Int?
  lead_time_days                                             Int?
  active                                                     Boolean?                @default(true)
  tags                                                       String[]
  notes                                                      String?
  created_by                                                 String?
  supplier_id                                                String?                 @db.Uuid
  supplier_sku                                               String?
  barcode                                                    String?
  location                                                   String?
  reorder_point                                              Int?
  reorder_quantity                                           Int?
  stock_quantity                                             Int?
  reserved_quantity                                          Int?
  sku                                                        String?                 @db.VarChar
  item_code                                                  String?                 @db.VarChar
  variation_type                                             String?                 @db.VarChar(50)
  furniture_type                                             String?                 @db.VarChar(50)
  type                                                       String?                 @db.VarChar(50)
  base_sku                                                   String?                 @unique @db.VarChar(50)
  product_sku                                                String?                 @db.VarChar(100)
  specifications                                             Json?
  item_metadata                                              Json?                   @default("{}")
  furniture_dimensions                                       furniture_dimensions[]
  invoice_items                                              invoice_items[]
  item_images                                                item_images[]
  collections                                                collections?            @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturer_projects                                      manufacturer_projects[]
  order_items                                                order_items[]
  production_orders_production_orders_catalog_item_idToitems production_orders[]     @relation("production_orders_catalog_item_idToitems")
  production_orders_production_orders_concept_idToitems      production_orders[]     @relation("production_orders_concept_idToitems")
  production_orders_production_orders_prototype_idToitems    production_orders[]     @relation("production_orders_prototype_idToitems")
  prototypes                                                 prototypes[]

  @@index([category], map: "idx_items_category")
  @@index([collection_id], map: "idx_items_collection_id")
  @@index([collection_id], map: "idx_items_collection_id_fk")
  @@index([created_at], map: "idx_items_created_at")
  @@index([item_metadata], map: "idx_items_metadata_gin", type: Gin)
  @@index([updated_at], map: "idx_items_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model leads {
  id                       String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                     String      @db.VarChar
  email                    String?     @db.VarChar
  phone                    String?     @db.VarChar
  company                  String?     @db.VarChar
  prospect_status          String?     @db.VarChar
  notes                    String?
  created_at               DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?   @default(now()) @db.Timestamptz(6)
  status                   String?
  converted_to_customer_id String?
  assigned_to              String?     @db.Uuid
  lead_source              String?
  interest_level           String?
  follow_up_date           DateTime?   @db.Timestamptz(6)
  converted_at             DateTime?   @db.Timestamptz(6)
  conversion_type          String?
  tags                     String[]
  last_contacted           DateTime?   @db.Timestamptz(6)
  contact_method           String?
  lead_value               Decimal?    @db.Decimal
  created_by               String?
  website                  String?
  pipeline_stage           String?     @default("initial")
  last_activity_date       DateTime?   @db.Timestamptz(6)
  first_name               String?     @db.VarChar(255)
  last_name                String?     @db.VarChar(255)
  addresses                addresses[]

  @@index([created_at], map: "idx_leads_created_at")
  @@index([status], map: "idx_leads_status")
  @@index([updated_at], map: "idx_leads_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model magic_link_tokens {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email      String    @db.VarChar(255)
  token      String    @unique @db.VarChar(255)
  expires_at DateTime  @db.Timestamptz(6)
  used_at    DateTime? @db.Timestamptz(6)
  ip_address String?   @db.Inet
  user_agent String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_magic_link_tokens_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_capabilities {
  id                   String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id      String?        @db.Uuid
  category             String?
  techniques           Json?          @default("[]")
  materials            Json?          @default("[]")
  max_dimensions       Json?
  min_order_quantity   Int?
  max_capacity_monthly Int?
  lead_time_days       Int?
  rush_available       Boolean?       @default(false)
  created_at           DateTime?      @default(now()) @db.Timestamp(6)
  manufacturers        manufacturers? @relation(fields: [manufacturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_capabilities_created_at")
  @@index([manufacturer_id], map: "idx_manufacturer_capabilities_manufacturer_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_communications {
  id                    String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id       String?                @db.Uuid
  project_id            String?                @db.Uuid
  communication_type    String?
  subject               String?
  summary               String?
  participants          Json?                  @default("[]")
  action_items          Json?                  @default("[]")
  follow_up_required    Boolean?               @default(false)
  follow_up_date        DateTime?              @db.Date
  created_by            String?                @db.Uuid
  created_at            DateTime?              @default(now()) @db.Timestamp(6)
  users                 users?                 @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturers         manufacturers?         @relation(fields: [manufacturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  manufacturer_projects manufacturer_projects? @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_communications_created_at")
  @@index([created_by], map: "idx_manufacturer_communications_created_by")
  @@index([manufacturer_id], map: "idx_manufacturer_communications_manufacturer_id")
  @@index([project_id], map: "idx_manufacturer_communications_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_contracts {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id String?        @db.Uuid
  contract_number String?        @unique
  contract_type   String?
  start_date      DateTime?      @db.Date
  end_date        DateTime?      @db.Date
  auto_renew      Boolean?       @default(false)
  terms           Json?
  min_commitment  Decimal?       @db.Decimal(10, 2)
  max_liability   Decimal?       @db.Decimal(10, 2)
  document_url    String?
  status          String?        @default("draft")
  signed_date     DateTime?      @db.Date
  signed_by       String?
  created_at      DateTime?      @default(now()) @db.Timestamp(6)
  updated_at      DateTime?      @default(now()) @db.Timestamp(6)
  manufacturers   manufacturers? @relation(fields: [manufacturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_contracts_created_at")
  @@index([manufacturer_id], map: "idx_manufacturer_contracts_manufacturer_id")
  @@index([status], map: "idx_manufacturer_contracts_status")
  @@index([updated_at], map: "idx_manufacturer_contracts_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_performance {
  id                    String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id       String?        @db.Uuid
  metric_date           DateTime       @db.Date
  on_time_delivery_rate Decimal?       @db.Decimal(5, 2)
  quality_score         Decimal?       @db.Decimal(3, 2)
  defect_rate           Decimal?       @db.Decimal(5, 2)
  response_time_hours   Int?
  rework_rate           Decimal?       @db.Decimal(5, 2)
  projects_completed    Int?
  projects_delayed      Int?
  created_at            DateTime?      @default(now()) @db.Timestamp(6)
  manufacturers         manufacturers? @relation(fields: [manufacturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([manufacturer_id, metric_date])
  @@index([created_at], map: "idx_manufacturer_performance_created_at")
  @@index([manufacturer_id], map: "idx_manufacturer_performance_manufacturer_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_pricing {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id  String?        @db.Uuid
  pricing_type     String?
  base_rate        Decimal?       @db.Decimal(10, 2)
  currency         String?        @default("USD")
  volume_discounts Json?          @default("[]")
  rush_multiplier  Decimal?       @default(1.5) @db.Decimal(3, 2)
  payment_terms    String?
  valid_from       DateTime?      @db.Date
  valid_until      DateTime?      @db.Date
  notes            String?
  created_at       DateTime?      @default(now()) @db.Timestamp(6)
  updated_at       DateTime?      @default(now()) @db.Timestamp(6)
  manufacturers    manufacturers? @relation(fields: [manufacturer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_pricing_created_at")
  @@index([manufacturer_id], map: "idx_manufacturer_pricing_manufacturer_id")
  @@index([updated_at], map: "idx_manufacturer_pricing_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_projects {
  id                          String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_id             String?                       @db.Uuid
  project_type                String?
  project_name                String?
  reference_number            String?
  item_id                     String?                       @db.Uuid
  collection_id               String?                       @db.Uuid
  status                      String?                       @default("quoted")
  quoted_price                Decimal?                      @db.Decimal(10, 2)
  final_price                 Decimal?                      @db.Decimal(10, 2)
  quoted_lead_time_days       Int?
  actual_lead_time_days       Int?
  start_date                  DateTime?                     @db.Date
  completion_date             DateTime?                     @db.Date
  quality_rating              Int?
  notes                       String?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamp(6)
  unit_cost                   Decimal?                      @db.Decimal(10, 2)
  quantity                    Int?                          @default(1)
  priority                    String?                       @default("normal")
  project_code                String?
  total_value                 Decimal?                      @db.Decimal(10, 2)
  estimated_start_date        DateTime?                     @db.Date
  estimated_completion_date   DateTime?                     @db.Date
  actual_start_date           DateTime?                     @db.Date
  actual_completion_date      DateTime?                     @db.Date
  currency                    String?                       @default("USD")
  shipping_method             String?
  tracking_number             String?
  quality_requirements        String?
  special_instructions        String?
  created_by                  String?                       @db.Uuid
  design_to_prototype         design_to_prototype[]
  documents                   documents[]
  manufacturer_communications manufacturer_communications[]
  collections                 collections?                  @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  items                       items?                        @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturers               manufacturers?                @relation(fields: [manufacturer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturer_qc_records     manufacturer_qc_records[]
  manufacturer_shipments      manufacturer_shipments[]
  production_milestones       production_milestones[]
  project_materials           project_materials[]
  quality_inspections         quality_inspections[]

  @@index([collection_id], map: "idx_manufacturer_projects_collection_id")
  @@index([collection_id], map: "idx_manufacturer_projects_collection_id_fk")
  @@index([created_at], map: "idx_manufacturer_projects_created_at")
  @@index([item_id], map: "idx_manufacturer_projects_item_id")
  @@index([item_id], map: "idx_manufacturer_projects_item_id_fk")
  @@index([manufacturer_id], map: "idx_manufacturer_projects_manufacturer_id")
  @@index([manufacturer_id], map: "idx_manufacturer_projects_manufacturer_id_fk")
  @@index([status], map: "idx_manufacturer_projects_status")
  @@index([updated_at], map: "idx_manufacturer_projects_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_qc_records {
  id                      String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_project_id String?                @db.Uuid
  inspection_type         String?
  inspection_date         DateTime?              @db.Date
  inspector_name          String?
  passed                  Boolean?
  defects_found           Json?                  @default("[]")
  measurements            Json?                  @default("{}")
  corrective_actions      String?
  reinspection_required   Boolean?               @default(false)
  photos                  Json?                  @default("[]")
  report_url              String?
  created_at              DateTime?              @default(now()) @db.Timestamp(6)
  manufacturer_projects   manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_qc_records_created_at")
  @@index([manufacturer_project_id], map: "idx_manufacturer_qc_records_manufacturer_project_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturer_shipments {
  id                      String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_project_id String?                @db.Uuid
  shipment_number         String?                @unique
  shipping_carrier        String?
  tracking_number         String?
  shipping_method         String?
  ship_date               DateTime?              @db.Date
  estimated_delivery_date DateTime?              @db.Date
  actual_delivery_date    DateTime?              @db.Date
  ship_from_address       String?
  ship_to_address         String?
  package_count           Int?                   @default(1)
  total_weight            Decimal?               @db.Decimal(10, 2)
  total_dimensions        String?
  shipping_cost           Decimal?               @db.Decimal(10, 2)
  insurance_value         Decimal?               @db.Decimal(10, 2)
  special_handling        String?
  delivery_instructions   String?
  status                  String?
  recipient_signature     String?
  delivery_photos         Json?                  @default("[]")
  created_at              DateTime?              @default(now()) @db.Timestamp(6)
  updated_at              DateTime?              @default(now()) @db.Timestamp(6)
  manufacturer_projects   manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_manufacturer_shipments_created_at")
  @@index([manufacturer_project_id], map: "idx_manufacturer_shipments_manufacturer_project_id")
  @@index([status], map: "idx_manufacturer_shipments_status")
  @@index([updated_at], map: "idx_manufacturer_shipments_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model manufacturers {
  id                          String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                        String
  company_name                String?
  contact_person              String?
  email                       String?
  phone                       String?
  website                     String?
  address                     Json?
  established_year            Int?
  employee_count              String?
  certifications              Json?                         @default("[]")
  status                      String?                       @default("prospect")
  rating                      Decimal?                      @db.Decimal(3, 2)
  notes                       String?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(6)
  updated_at                  DateTime?                     @default(now()) @db.Timestamp(6)
  contact_email               String?
  contact_phone               String?
  performance_rating          Decimal?                      @db.Decimal(3, 2)
  quality_rating              Decimal?                      @db.Decimal(3, 2)
  delivery_rating             Decimal?                      @db.Decimal(3, 2)
  communication_rating        Decimal?                      @db.Decimal(3, 2)
  city                        String?
  state                       String?
  country                     String?                       @default("USA")
  postal_code                 String?
  years_in_business           Int?
  annual_capacity             Int?
  lead_time_weeks             Int?
  minimum_order_quantity      Int?
  payment_terms               String?
  cost_tracking               cost_tracking[]
  documents                   documents[]
  manufacturer_capabilities   manufacturer_capabilities[]
  manufacturer_communications manufacturer_communications[]
  manufacturer_contracts      manufacturer_contracts[]
  manufacturer_performance    manufacturer_performance[]
  manufacturer_pricing        manufacturer_pricing[]
  manufacturer_projects       manufacturer_projects[]
  production_orders           production_orders[]
  prototypes                  prototypes[]

  @@index([created_at], map: "idx_manufacturers_created_at")
  @@index([status], map: "idx_manufacturers_status")
  @@index([updated_at], map: "idx_manufacturers_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_categories {
  id         String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String      @unique
  icon       String?
  sort_order Int?        @default(0)
  active     Boolean?    @default(true)
  created_at DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at DateTime?   @default(now()) @db.Timestamptz(6)
  materials  materials[]

  @@index([created_at], map: "idx_material_categories_created_at")
  @@index([updated_at], map: "idx_material_categories_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_collection_audit {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  material_type String
  material_id   String      @db.Uuid
  collection_id String      @db.Uuid
  action        String
  user_id       String?     @db.Uuid
  created_at    DateTime?   @default(now()) @db.Timestamp(6)
  notes         String?
  collections   collections @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([collection_id], map: "idx_material_collection_audit_collection")
  @@index([collection_id], map: "idx_material_collection_audit_collection_id")
  @@index([created_at], map: "idx_material_collection_audit_created_at")
  @@index([material_type, material_id], map: "idx_material_collection_audit_material")
  @@index([user_id], map: "idx_material_collection_audit_user")
  @@index([user_id], map: "idx_material_collection_audit_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_collections {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  material_id   String      @db.Uuid
  collection_id String      @db.Uuid
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  created_by    String?
  collections   collections @relation(fields: [collection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  materials     materials   @relation(fields: [material_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([material_id, collection_id])
  @@index([collection_id], map: "idx_material_collections_collection_id")
  @@index([created_at], map: "idx_material_collections_created_at")
  @@index([material_id], map: "idx_material_collections_material_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_furniture_collections {
  id                      String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  material_id             String      @db.Uuid
  furniture_collection_id String      @db.Uuid
  created_at              DateTime?   @default(now()) @db.Timestamptz(6)
  collections             collections @relation(fields: [furniture_collection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  materials               materials   @relation(fields: [material_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([material_id, furniture_collection_id], map: "material_furniture_collection_material_id_furniture_collect_key")
  @@index([created_at], map: "idx_material_furniture_collections_created_at")
  @@index([furniture_collection_id], map: "idx_material_furniture_collections_furniture_collection_id")
  @@index([material_id], map: "idx_material_furniture_collections_material_id")
  @@index([furniture_collection_id], map: "idx_mfc_furniture_collection_id")
  @@index([material_id], map: "idx_mfc_material_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_inventory {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  material_type  String
  option_id      String    @db.Uuid
  quantity       Decimal?  @default(0) @db.Decimal(10, 2)
  unit           String?   @default("unit")
  min_quantity   Decimal?  @default(10) @db.Decimal(10, 2)
  max_quantity   Decimal?  @default(1000) @db.Decimal(10, 2)
  location       String?
  last_restocked DateTime? @db.Timestamptz(6)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_material_inventory_created_at")
  @@index([updated_at], map: "idx_material_inventory_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model material_price_history {
  id             String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  material_type  String
  option_id      String    @db.Uuid
  price          Decimal   @db.Decimal(10, 2)
  effective_date DateTime  @db.Date
  created_by     String?   @db.Uuid
  notes          String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  users          users?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_material_price_history_created_at")
  @@index([created_by], map: "idx_material_price_history_created_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model materials {
  id                             String                           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                           String                           @db.VarChar
  type                           String?                          @db.VarChar
  description                    String?
  created_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime?                        @default(now()) @db.Timestamptz(6)
  category_id                    String?                          @db.Uuid
  active                         Boolean?                         @default(true)
  cost_per_unit                  Decimal?                         @db.Decimal(10, 2)
  unit_of_measure                String?
  created_by                     String?
  parent_material_id             String?                          @db.Uuid
  hierarchy_level                Int?
  hierarchy_path                 String?
  code                           String?                          @unique @db.VarChar
  swatch_url                     String?
  material_collections           material_collections[]
  material_furniture_collections material_furniture_collections[]
  material_categories            material_categories?             @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  materials                      materials?                       @relation("materialsTomaterials", fields: [parent_material_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_materials                materials[]                      @relation("materialsTomaterials")
  order_item_materials           order_item_materials[]

  @@index([category_id], map: "idx_materials_category_id")
  @@index([category_id], map: "idx_materials_category_id_fk")
  @@index([created_at], map: "idx_materials_created_at")
  @@index([hierarchy_level], map: "idx_materials_hierarchy_level")
  @@index([parent_material_id], map: "idx_materials_parent")
  @@index([type], map: "idx_materials_type")
  @@index([updated_at], map: "idx_materials_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mood_boards {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  board_number      String           @unique
  name              String           @db.VarChar(255)
  description       String?
  design_project_id String?          @db.Uuid
  designer_id       String?          @db.Uuid
  board_type        String           @default("mood") @db.VarChar(50)
  layout            Json?            @default("{}")
  images            Json?            @default("[]")
  notes             String?
  is_shared         Boolean          @default(false)
  shared_with       Json?            @default("[]")
  share_token       String?          @unique
  share_expires_at  DateTime?        @db.Timestamptz(6)
  status            String           @default("draft") @db.VarChar(50)
  created_by        String?          @db.Uuid
  created_at        DateTime         @default(now()) @db.Timestamptz(6)
  updated_at        DateTime         @default(now()) @db.Timestamptz(6)
  users             users?           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  design_projects   design_projects? @relation(fields: [design_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  designers         designers?       @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([board_type], map: "idx_mood_boards_board_type")
  @@index([created_at], map: "idx_mood_boards_created_at")
  @@index([created_by], map: "idx_mood_boards_created_by")
  @@index([design_project_id], map: "idx_mood_boards_design_project_id")
  @@index([designer_id], map: "idx_mood_boards_designer_id")
  @@index([status], map: "idx_mood_boards_status")
  @@index([updated_at], map: "idx_mood_boards_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notification_queue {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  title         String
  body          String
  icon          String?
  badge         Int?      @default(0)
  priority      String?   @default("normal")
  status        String?   @default("pending")
  scheduled_for DateTime? @db.Timestamptz(6)
  sent_at       DateTime? @db.Timestamptz(6)
  error_message String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_notification_queue_created_at")
  @@index([status], map: "idx_notification_queue_status")
  @@index([updated_at], map: "idx_notification_queue_updated_at")
  @@index([user_id], map: "idx_notification_queue_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notifications {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String?    @db.Uuid
  user_id     String?
  type        String?
  title       String?
  message     String?
  data        Json?
  read        Boolean?
  read_at     String?
  sent_via    Json?
  priority    String?
  expires_at  String?
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  link        String?
  entity_type String?
  entity_id   String?    @db.Uuid
  customers   customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_notifications_created_at")
  @@index([customer_id], map: "idx_notifications_customer_id")
  @@index([entity_type, entity_id], map: "idx_notifications_entity")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model oauth_tokens {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String    @db.Uuid
  provider      String    @db.VarChar(50)
  access_token  String
  refresh_token String?
  token_type    String?   @default("Bearer") @db.VarChar(50)
  expires_at    DateTime  @db.Timestamptz(6)
  scope         String?
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @db.Timestamptz(6)
  last_used_at  DateTime? @db.Timestamptz(6)
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, provider])
  @@index([created_at], map: "idx_oauth_tokens_created_at")
  @@index([expires_at], map: "idx_oauth_tokens_expires_at")
  @@index([provider], map: "idx_oauth_tokens_provider")
  @@index([updated_at], map: "idx_oauth_tokens_updated_at")
  @@index([user_id], map: "idx_oauth_tokens_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model offline_sync_queue {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  action        String
  entity_type   String
  entity_id     String?   @db.Uuid
  payload       Json
  status        String?   @default("pending")
  attempts      Int?      @default(0)
  error_message String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  synced_at     DateTime? @db.Timestamptz(6)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, entity_type, entity_id, action, status], map: "unique_pending_action")
  @@index([created_at], map: "idx_offline_sync_queue_created_at")
  @@index([status], map: "idx_offline_sync_queue_status")
  @@index([user_id], map: "idx_offline_sync_queue_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_item_materials {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_item_id String      @db.Uuid
  material_id   String      @db.Uuid
  quantity      Decimal?    @default(1) @db.Decimal(10, 2)
  material_type String?     @db.VarChar(100)
  notes         String?
  created_at    DateTime    @default(now()) @db.Timestamptz(6)
  updated_at    DateTime    @default(now()) @db.Timestamptz(6)
  created_by    String?     @db.VarChar(255)
  materials     materials   @relation(fields: [material_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_order_item_materials_material")
  order_items   order_items @relation(fields: [order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_order_item_materials_order_item")

  @@unique([order_item_id, material_id], map: "idx_order_item_materials_unique")
  @@index([created_at], map: "idx_order_item_materials_created_at")
  @@index([material_id], map: "idx_order_item_materials_material_id")
  @@index([material_type], map: "idx_order_item_materials_material_type")
  @@index([order_item_id], map: "idx_order_item_materials_order_item_id")
  @@index([updated_at], map: "idx_order_item_materials_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_items {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id             String?                @db.Uuid
  item_id              String?                @db.Uuid
  quantity             Int?                   @default(1)
  unit_price           Decimal?               @db.Decimal(10, 2)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  project_sku          String?
  description          String?
  specifications       Json?
  due_date             DateTime?              @db.Timestamptz(6)
  status               String?
  notes                String?
  full_sku             String?                @db.VarChar(500)
  cost_tracking        cost_tracking[]
  documents            documents[]
  invoice_items        invoice_items[]
  order_item_materials order_item_materials[]
  items                items?                 @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders               orders?                @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  packing_jobs         packing_jobs[]
  production_items     production_items[]
  qc_inspections       qc_inspections[]

  @@index([created_at], map: "idx_order_items_created_at")
  @@index([full_sku], map: "idx_order_items_full_sku")
  @@index([item_id], map: "idx_order_items_item_id")
  @@index([item_id], map: "idx_order_items_item_id_fk")
  @@index([order_id], map: "idx_order_items_order_id")
  @@index([order_id], map: "idx_order_items_order_id_fk")
  @@index([status], map: "idx_order_items_status")
  @@index([updated_at], map: "idx_order_items_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ordered_items_production {
  id                    String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sku                   String            @unique
  production_order_id   String            @db.Uuid
  item_number           Int
  serial_number         String?
  status                String            @default("pending")
  qc_status             String?
  qc_notes              String?
  qc_date               DateTime?         @db.Timestamptz(6)
  qc_by                 String?           @db.Uuid
  shipment_id           String?           @db.Uuid
  production_start_date DateTime?         @db.Timestamptz(6)
  production_end_date   DateTime?         @db.Timestamptz(6)
  shipped_date          DateTime?         @db.Timestamptz(6)
  delivered_date        DateTime?         @db.Timestamptz(6)
  created_at            DateTime          @default(now()) @db.Timestamptz(6)
  updated_at            DateTime          @default(now()) @db.Timestamptz(6)
  production_orders     production_orders @relation(fields: [production_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                 users?            @relation(fields: [qc_by], references: [id], onUpdate: NoAction)
  shipments             shipments?        @relation(fields: [shipment_id], references: [id], onUpdate: NoAction)

  @@index([created_at], map: "idx_ordered_items_production_created_at")
  @@index([production_order_id], map: "idx_ordered_items_production_order_id")
  @@index([production_order_id], map: "idx_ordered_items_production_production_order_id")
  @@index([qc_by], map: "idx_ordered_items_production_qc_by")
  @@index([qc_status], map: "idx_ordered_items_production_qc_status")
  @@index([shipment_id], map: "idx_ordered_items_production_shipment_id")
  @@index([status], map: "idx_ordered_items_production_status")
  @@index([updated_at], map: "idx_ordered_items_production_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders {
  id                                String                              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_number                      String                              @unique(map: "orders_order_number_key1") @db.VarChar
  client_id                         String?                             @db.Uuid
  status                            String?                             @default("pending") @db.VarChar
  total_amount                      Decimal?                            @db.Decimal(10, 2)
  notes                             String?
  created_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  customer_id                       String?                             @db.Uuid
  collection_id                     String?                             @db.Uuid
  priority                          String?
  due_date                          DateTime?                           @db.Timestamptz(6)
  estimated_completion              DateTime?                           @db.Timestamptz(6)
  actual_completion                 DateTime?                           @db.Timestamptz(6)
  assigned_to                       String?                             @db.Uuid
  department                        String?
  rush_order                        Boolean?
  shipping_method                   String?
  tracking_number                   String?
  invoice_sent                      Boolean?
  payment_received                  Boolean?
  tags                              String[]
  created_by                        String?
  project_id                        String?                             @db.Uuid
  client_files                      client_files[]
  cost_tracking                     cost_tracking[]
  customer_production_notifications customer_production_notifications[]
  design_approvals                  design_approvals[]
  document_folders                  document_folders[]
  flipbook_conversions              flipbook_conversions[]
  invoices                          invoices[]
  order_items                       order_items[]
  collections                       collections?                        @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                         customers?                          @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "orders_customer_id_fkey1")
  projects                          projects?                           @relation(fields: [project_id], references: [id], onUpdate: NoAction)
  pandadoc_documents                pandadoc_documents[]
  production_invoices               production_invoices[]
  production_items                  production_items[]
  production_orders                 production_orders[]
  qc_inspections                    qc_inspections[]

  @@index([assigned_to, status], map: "idx_orders_assigned_status")
  @@index([assigned_to], map: "idx_orders_assigned_to")
  @@index([collection_id], map: "idx_orders_collection_id")
  @@index([created_at], map: "idx_orders_created_at")
  @@index([customer_id], map: "idx_orders_customer_id")
  @@index([customer_id, status], map: "idx_orders_customer_status")
  @@index([due_date], map: "idx_orders_due_date")
  @@index([project_id], map: "idx_orders_project_id")
  @@index([rush_order, status], map: "idx_orders_rush_status")
  @@index([status], map: "idx_orders_status")
  @@index([status, created_at(sort: Desc)], map: "idx_orders_status_created")
  @@index([status, created_at], map: "idx_orders_status_date")
  @@index([updated_at], map: "idx_orders_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders_old {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_number     String     @unique(map: "orders_order_number_key")
  customer_id      String?    @db.Uuid
  project_id       String?    @db.Uuid
  status           String?    @default("draft")
  order_date       DateTime?  @default(dbgenerated("CURRENT_DATE")) @db.Date
  delivery_date    DateTime?  @db.Date
  subtotal         Decimal?   @db.Decimal(12, 2)
  tax              Decimal?   @db.Decimal(12, 2)
  shipping         Decimal?   @db.Decimal(12, 2)
  total            Decimal?   @db.Decimal(12, 2)
  currency         String?    @default("USD")
  payment_status   String?    @default("pending")
  payment_terms    String?
  shipping_address Json?
  billing_address  Json?
  notes            String?
  metadata         Json?      @default("{}")
  created_by       String?    @db.Uuid
  created_at       DateTime?  @default(now()) @db.Timestamp(6)
  updated_at       DateTime?  @default(now()) @db.Timestamp(6)
  users            users?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_created_by_fkey")
  customers        customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_customer_id_fkey")
  projects         projects?  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_project_id_fkey")

  @@index([created_at], map: "idx_orders_old_created_at")
  @@index([created_by], map: "idx_orders_old_created_by")
  @@index([customer_id], map: "idx_orders_old_customer")
  @@index([customer_id], map: "idx_orders_old_customer_id")
  @@index([project_id], map: "idx_orders_old_project")
  @@index([project_id], map: "idx_orders_old_project_id")
  @@index([status], map: "idx_orders_old_status")
  @@index([updated_at], map: "idx_orders_old_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organization_members {
  id                                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id                              String    @db.Uuid
  user_id                                      String    @db.Uuid
  organization_roles                           String[]  @default([])
  status                                       String    @default("active")
  is_primary_org                               Boolean?  @default(false)
  joined_at                                    DateTime  @default(now()) @db.Timestamptz(6)
  invited_by                                   String?   @db.Uuid
  invitation_accepted_at                       DateTime? @db.Timestamptz(6)
  created_at                                   DateTime  @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime  @default(now()) @db.Timestamptz(6)
  users_organization_members_invited_byTousers users?    @relation("organization_members_invited_byTousers", fields: [invited_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_organization_members_user_idTousers    users     @relation("organization_members_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([organization_id, user_id], map: "uq_org_member")
  @@index([organization_id], map: "idx_org_members_org")
  @@index([status], map: "idx_org_members_status")
  @@index([user_id], map: "idx_org_members_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model organization_permissions {
  id                                               String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization_id                                  String                 @db.Uuid
  user_id                                          String                 @db.Uuid
  permission_id                                    String                 @db.Uuid
  resource_type                                    String?                @db.VarChar(100)
  resource_id                                      String?                @db.Uuid
  scope_metadata                                   Json?
  granted_by                                       String?                @db.Uuid
  granted_at                                       DateTime               @default(now()) @db.Timestamptz(6)
  expires_at                                       DateTime?              @db.Timestamptz(6)
  reason                                           String?
  is_active                                        Boolean?               @default(true)
  created_at                                       DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime               @default(now()) @db.Timestamptz(6)
  users_organization_permissions_granted_byTousers users?                 @relation("organization_permissions_granted_byTousers", fields: [granted_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  permission_definitions                           permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_organization_permissions_user_idTousers    users                  @relation("organization_permissions_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([organization_id, user_id, permission_id, resource_type, resource_id], map: "uq_org_perm")
  @@index([scope_metadata(ops: JsonbPathOps)], map: "idx_org_perms_metadata", type: Gin)
  @@index([organization_id], map: "idx_org_perms_org")
  @@index([permission_id], map: "idx_org_perms_permission")
  @@index([resource_type, resource_id], map: "idx_org_perms_resource")
  @@index([user_id], map: "idx_org_perms_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model packing_boxes {
  id                   String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  packing_job_id       String       @db.Uuid
  box_number           Int
  box_type             String?      @db.VarChar(50)
  dimensions           String?      @db.VarChar(100)
  weight               Decimal?     @db.Decimal(8, 2)
  contents_description String?
  barcode              String?      @db.VarChar(100)
  tracking_number      String?      @db.VarChar(100)
  created_at           DateTime?    @default(now()) @db.Timestamptz(6)
  packing_jobs         packing_jobs @relation(fields: [packing_job_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_packing_boxes_created_at")
  @@index([packing_job_id], map: "idx_packing_boxes_packing_job_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model packing_jobs {
  id                   String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id             String              @db.Uuid
  order_item_id        String?             @db.Uuid
  qc_inspection_id     String?             @db.Uuid
  quantity             Int
  packed_quantity      Int                 @default(0)
  box_count            Int                 @default(0)
  total_weight         Decimal?            @default(0) @db.Decimal(10, 2)
  dimensions           String?             @db.VarChar(100)
  packing_status       packing_status_enum @default(pending)
  packer_assigned_id   String?             @db.Uuid
  priority             priority_enum       @default(normal)
  special_instructions String?
  packed_date          DateTime?           @db.Timestamptz(6)
  tracking_number      String?             @db.VarChar(100)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)
  packing_boxes        packing_boxes[]
  order_items          order_items?        @relation(fields: [order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_inspections       qc_inspections?     @relation(fields: [qc_inspection_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shipments            shipments[]

  @@index([created_at], map: "idx_packing_jobs_created_at")
  @@index([order_item_id], map: "idx_packing_jobs_order_item_id")
  @@index([qc_inspection_id], map: "idx_packing_jobs_qc_inspection_id")
  @@index([updated_at], map: "idx_packing_jobs_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pandadoc_documents {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id   String     @unique @db.VarChar(255)
  template_id   String?    @db.Uuid
  order_id      String?    @db.Uuid
  customer_id   String?    @db.Uuid
  document_type String?    @db.VarChar(100)
  status        String?    @db.VarChar(50)
  recipients    Json?      @default("[]")
  metadata      Json?      @default("{}")
  sent_at       DateTime?  @db.Timestamptz(6)
  viewed_at     DateTime?  @db.Timestamptz(6)
  signed_at     DateTime?  @db.Timestamptz(6)
  expired_at    DateTime?  @db.Timestamptz(6)
  document_url  String?
  created_by    String?    @db.Uuid
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?  @default(now()) @db.Timestamptz(6)
  users         users?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers     customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders        orders?    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_pandadoc_documents_created_at")
  @@index([created_by], map: "idx_pandadoc_documents_created_by")
  @@index([customer_id], map: "idx_pandadoc_documents_customer_id")
  @@index([order_id], map: "idx_pandadoc_documents_order_id")
  @@index([status], map: "idx_pandadoc_documents_status")
  @@index([updated_at], map: "idx_pandadoc_documents_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pandadoc_templates {
  id                   Int       @id @default(autoincrement())
  pandadoc_template_id String    @unique @db.VarChar(255)
  name                 String    @db.VarChar(255)
  template_type        String    @default("contract") @db.VarChar(50)
  description          String?
  tags                 String[]  @default([])
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamp(6)
  updated_at           DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_pandadoc_templates_created_at")
  @@index([is_active], map: "idx_pandadoc_templates_is_active")
  @@index([updated_at], map: "idx_pandadoc_templates_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_contacts {
  id                       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  partner_id               String    @db.Uuid
  name                     String
  role                     String
  email                    String
  phone                    String?
  mobile                   String?
  is_primary               Boolean   @default(false)
  is_qc                    Boolean   @default(false)
  is_production            Boolean   @default(false)
  is_finance               Boolean   @default(false)
  preferred_contact_method String?
  timezone                 String?
  languages                String[]
  active                   Boolean   @default(true)
  notes                    String?
  created_at               DateTime  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime  @default(now()) @db.Timestamptz(6)
  user_id                  String?   @db.Uuid
  portal_role              String?   @db.VarChar(50)
  portal_access_enabled    Boolean?  @default(false)
  portal_modules_allowed   Json?     @default("[]")
  last_login_at            DateTime? @db.Timestamptz(6)
  first_name               String?   @db.VarChar(255)
  last_name                String?   @db.VarChar(255)
  department               String?   @db.VarChar(100)
  employee_id              String?   @db.VarChar(100)
  employment_end_date      DateTime? @db.Timestamptz(6)
  employment_start_date    DateTime? @db.Timestamptz(6)
  employment_status        String?   @default("active") @db.VarChar(50)
  users                    users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_partner_contacts_user")
  partners                 partners  @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_partner_contacts_created_at")
  @@index([department], map: "idx_partner_contacts_department")
  @@index([email], map: "idx_partner_contacts_email")
  @@index([employee_id], map: "idx_partner_contacts_employee_id")
  @@index([employment_status], map: "idx_partner_contacts_employment_status")
  @@index([partner_id], map: "idx_partner_contacts_partner_id")
  @@index([updated_at], map: "idx_partner_contacts_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_documents {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  partner_id    String    @db.Uuid
  document_type String
  title         String
  description   String?
  file_url      String
  file_name     String
  file_size     BigInt
  mime_type     String
  status        String    @default("active")
  issue_date    DateTime? @db.Timestamptz(6)
  expiry_date   DateTime? @db.Timestamptz(6)
  uploaded_by   String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime  @default(now()) @db.Timestamptz(6)
  partners      partners  @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users     @relation(fields: [uploaded_by], references: [id], onUpdate: NoAction)

  @@index([created_at], map: "idx_partner_documents_created_at")
  @@index([document_type], map: "idx_partner_documents_document_type")
  @@index([partner_id], map: "idx_partner_documents_partner_id")
  @@index([status], map: "idx_partner_documents_status")
  @@index([updated_at], map: "idx_partner_documents_updated_at")
  @@index([uploaded_by], map: "idx_partner_documents_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_performance {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  partner_id          String   @db.Uuid
  period_start        DateTime @db.Timestamptz(6)
  period_end          DateTime @db.Timestamptz(6)
  orders_completed    Int      @default(0)
  orders_on_time      Int      @default(0)
  total_defects       Int      @default(0)
  average_lead_time   Int?
  on_time_rate        Decimal  @db.Decimal(5, 2)
  defect_rate         Decimal  @db.Decimal(5, 2)
  total_revenue       Decimal  @db.Decimal(12, 2)
  average_order_value Decimal  @db.Decimal(10, 2)
  satisfaction_score  Decimal? @db.Decimal(3, 2)
  created_at          DateTime @default(now()) @db.Timestamptz(6)
  updated_at          DateTime @default(now()) @db.Timestamptz(6)
  partners            partners @relation(fields: [partner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([partner_id, period_start, period_end], map: "unique_partner_performance_period")
  @@index([created_at], map: "idx_partner_performance_created_at")
  @@index([partner_id], map: "idx_partner_performance_partner_id")
  @@index([updated_at], map: "idx_partner_performance_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partner_portal_roles {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  partner_type    String    @db.VarChar(50)
  role_key        String    @db.VarChar(50)
  role_label      String    @db.VarChar(100)
  description     String?
  default_modules String[]  @default([])
  is_system_role  Boolean?  @default(false)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([partner_type, role_key], map: "unique_role_per_type")
  @@index([created_at], map: "idx_partner_portal_roles_created_at")
  @@index([updated_at], map: "idx_partner_portal_roles_updated_at")
  @@index([role_key], map: "idx_portal_roles_key")
  @@index([partner_type], map: "idx_portal_roles_partner_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model partners {
  id                    String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                  String
  company_name          String
  business_name         String?
  registration_number   String?
  primary_contact       String
  primary_email         String
  primary_phone         String
  website               String?
  address_line1         String
  address_line2         String?
  city                  String
  state                 String?
  postal_code           String
  country               String
  specializations       String[]
  capabilities          String[]
  certifications        String[]
  languages             String[]
  production_capacity   Int?
  lead_time_days        Int?
  minimum_order         Int?
  payment_terms         String?
  currency              String                 @default("USD")
  status                String                 @default("active")
  quality_rating        Decimal?               @db.Decimal(3, 2)
  on_time_delivery_rate Decimal?               @db.Decimal(5, 2)
  defect_rate           Decimal?               @db.Decimal(5, 2)
  portal_enabled        Boolean                @default(false)
  portal_user_id        String?                @unique @db.Uuid
  notes                 String?
  internal_rating       String?
  tags                  String[]
  created_at            DateTime               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime               @default(now()) @db.Timestamptz(6)
  is_verified           Boolean                @default(false)
  partner_code          String?                @unique
  partner_contacts      partner_contacts[]
  partner_documents     partner_documents[]
  partner_performance   partner_performance[]
  users                 users?                 @relation(fields: [portal_user_id], references: [id], onUpdate: NoAction)
  production_orders     production_orders[]
  prototype_production  prototype_production[]
  shop_drawings         shop_drawings[]

  @@index([company_name], map: "idx_partners_company_name")
  @@index([created_at], map: "idx_partners_created_at")
  @@index([portal_user_id], map: "idx_partners_portal_user_id")
  @@index([status], map: "idx_partners_status")
  @@index([type], map: "idx_partners_type")
  @@index([updated_at], map: "idx_partners_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model password_reset_tokens {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  token      String    @unique @db.VarChar(255)
  expires_at DateTime  @db.Timestamptz(6)
  used_at    DateTime? @db.Timestamptz(6)
  ip_address String?   @db.Inet
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_password_reset_tokens_created_at")
  @@index([user_id], map: "idx_password_reset_tokens_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_allocations {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  payment_id       String?   @db.Uuid
  invoice_id       String?   @db.Uuid
  allocated_amount Decimal   @db.Decimal(12, 2)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  invoices         invoices? @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments         payments? @relation(fields: [payment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_payment_allocations_created_at")
  @@index([invoice_id], map: "idx_payment_allocations_invoice_id")
  @@index([payment_id], map: "idx_payment_allocations_payment_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_batches {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_number String    @db.VarChar(100)
  total_amount Decimal?  @db.Decimal(15, 2)
  status       String?   @default("pending") @db.VarChar(50)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_payment_batches_created_at")
  @@index([status], map: "idx_payment_batches_status")
  @@index([updated_at], map: "idx_payment_batches_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_transactions {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                   String    @default("incoming") @db.VarChar(20)
  amount                 Decimal   @db.Decimal(10, 2)
  currency               String?   @default("USD") @db.VarChar(3)
  status                 String?   @default("pending") @db.VarChar(20)
  method                 String?   @default("ach") @db.VarChar(50)
  reference_number       String?   @unique @db.VarChar(100)
  description            String?
  customer_id            String?   @db.Uuid
  customer_name          String?   @db.VarChar(255)
  invoice_id             String?   @db.Uuid
  invoice_number         String?   @db.VarChar(50)
  quickbooks_id          String?   @db.VarChar(100)
  quickbooks_sync_status String?   @default("pending") @db.VarChar(20)
  processed_date         DateTime? @db.Timestamp(6)
  created_date           DateTime? @default(now()) @db.Timestamp(6)
  batch_id               String?   @db.VarChar(100)
  fee_amount             Decimal?  @db.Decimal(10, 2)
  net_amount             Decimal?  @db.Decimal(10, 2)
  metadata               Json?
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  updated_at             DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_payment_transactions_created_at")
  @@index([status], map: "idx_payment_transactions_status")
  @@index([updated_at], map: "idx_payment_transactions_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payments {
  id                                String                              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  payment_number                    String?                             @unique
  quickbooks_payment_id             String?
  invoice_id                        String?
  customer_id                       String?                             @db.Uuid
  payment_date                      String?
  payment_method                    String?
  payment_type                      String?
  amount                            Int?
  currency                          String?
  exchange_rate                     Int?
  reference_number                  String?
  processor_transaction_id          String?
  processing_fee                    String?
  net_amount                        Int?
  status                            String?
  notes                             String?
  quickbooks_sync_date              String?
  created_by                        String?
  created_at                        DateTime?                           @default(now()) @db.Timestamptz(6)
  payment_allocations               payment_allocations[]
  customers                         customers?                          @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quickbooks_payment_reconciliation quickbooks_payment_reconciliation[]
  quickbooks_recurring_payments     quickbooks_recurring_payments[]

  @@index([created_at], map: "idx_payments_created_at")
  @@index([customer_id], map: "idx_payments_customer_id")
  @@index([status], map: "idx_payments_status")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pending_sign_up {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email              String   @unique @db.VarChar(255)
  verification_token String   @unique @db.VarChar(255)
  expires_at         DateTime @db.Timestamptz(6)
  user_type          String   @db.VarChar(50)
  metadata           Json?
  created_at         DateTime @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_pending_sign_up_created_at")
  @@index([email], map: "idx_pending_sign_up_email")
  @@index([expires_at], map: "idx_pending_sign_up_expires_at")
  @@index([verification_token], map: "idx_pending_sign_up_token")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pending_user_requests {
  id                String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email             String    @db.VarChar
  first_name        String?   @db.VarChar
  last_name         String?   @db.VarChar
  company           String?   @db.VarChar
  message           String?
  status            String?   @default("pending") @db.VarChar
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  updated_at        DateTime? @default(now()) @db.Timestamptz(6)
  phone             String?   @db.VarChar(20)
  user_type         String?   @db.VarChar(50)
  reason_for_access String?
  requested_at      DateTime? @default(now()) @db.Timestamptz(6)
  reviewed_at       DateTime? @db.Timestamptz(6)
  reviewed_by       String?   @db.Uuid
  admin_notes       String?
  metadata          Json?     @default("{}")

  @@index([created_at], map: "idx_pending_user_requests_created_at")
  @@index([status], map: "idx_pending_user_requests_status")
  @@index([updated_at], map: "idx_pending_user_requests_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model performance_metrics {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  metric_date  DateTime  @db.Date
  metric_type  String?   @db.VarChar(100)
  metric_value Decimal?  @db.Decimal(10, 2)
  metadata     Json?     @default("{}")
  created_at   DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([metric_date, metric_type])
  @@index([created_at], map: "idx_performance_metrics_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_conditions {
  id                                            String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  permission_id                                 String                 @db.Uuid
  user_id                                       String?                @db.Uuid
  role_id                                       String?                @db.Uuid
  condition_type                                String
  time_start                                    DateTime?              @db.Time(6)
  time_end                                      DateTime?              @db.Time(6)
  days_of_week                                  Int[]
  timezone                                      String?                @default("UTC")
  allowed_countries                             String[]
  allowed_regions                               String[]
  allowed_cities                                String[]
  geo_fence                                     Json?
  allowed_device_types                          String[]
  required_os                                   String[]
  corporate_device_only                         Boolean?               @default(false)
  allowed_ip_ranges                             String[]               @db.Inet
  is_active                                     Boolean?               @default(true)
  created_at                                    DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime               @default(now()) @db.Timestamptz(6)
  created_by                                    String?                @db.Uuid
  users_permission_conditions_created_byTousers users?                 @relation("permission_conditions_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  permission_definitions                        permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  role_definitions                              role_definitions?      @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_permission_conditions_user_idTousers    users?                 @relation("permission_conditions_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([permission_id], map: "idx_permission_conditions_permission")
  @@index([role_id], map: "idx_permission_conditions_role")
  @@index([condition_type], map: "idx_permission_conditions_type")
  @@index([user_id], map: "idx_permission_conditions_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_definitions {
  id                        String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  permission_key            String                      @unique @db.VarChar(100)
  permission_name           String                      @db.VarChar(150)
  description               String?
  category                  String?                     @db.VarChar(50)
  is_system                 Boolean                     @default(true)
  is_active                 Boolean                     @default(true)
  created_at                DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                    @default(now()) @db.Timestamptz(6)
  organization_permissions  organization_permissions[]
  permission_conditions     permission_conditions[]
  permission_delegations    permission_delegations[]
  permission_requests       permission_requests[]
  permission_template_items permission_template_items[]
  permission_usage_log      permission_usage_log[]
  role_permissions          role_permissions[]

  @@index([is_active], map: "idx_permission_definitions_active")
  @@index([category], map: "idx_permission_definitions_category")
  @@index([permission_key], map: "idx_permission_definitions_key")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_delegations {
  id                                               String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  delegator_id                                     String                 @db.Uuid
  delegatee_id                                     String                 @db.Uuid
  permission_id                                    String                 @db.Uuid
  resource_type                                    String?
  resource_id                                      String?
  valid_from                                       DateTime               @default(now()) @db.Timestamptz(6)
  valid_until                                      DateTime               @db.Timestamptz(6)
  status                                           String                 @default("active")
  revoked_at                                       DateTime?              @db.Timestamptz(6)
  revoked_by                                       String?                @db.Uuid
  revoke_reason                                    String?
  delegation_reason                                String?
  created_at                                       DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                       DateTime               @default(now()) @db.Timestamptz(6)
  users_permission_delegations_delegatee_idTousers users                  @relation("permission_delegations_delegatee_idTousers", fields: [delegatee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_permission_delegations_delegator_idTousers users                  @relation("permission_delegations_delegator_idTousers", fields: [delegator_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  permission_definitions                           permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_permission_delegations_revoked_byTousers   users?                 @relation("permission_delegations_revoked_byTousers", fields: [revoked_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([delegatee_id], map: "idx_delegations_delegatee")
  @@index([delegator_id], map: "idx_delegations_delegator")
  @@index([permission_id], map: "idx_delegations_permission")
  @@index([status], map: "idx_delegations_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_requests {
  id                                            String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  requester_id                                  String                 @db.Uuid
  permission_id                                 String                 @db.Uuid
  resource_type                                 String?
  resource_id                                   String?
  request_reason                                String
  duration_hours                                Int?
  status                                        String                 @default("pending")
  approver_id                                   String?                @db.Uuid
  approved_at                                   DateTime?              @db.Timestamptz(6)
  denied_at                                     DateTime?              @db.Timestamptz(6)
  approval_reason                               String?
  auto_approved                                 Boolean?               @default(false)
  auto_approval_reason                          String?
  requested_at                                  DateTime               @default(now()) @db.Timestamptz(6)
  expires_at                                    DateTime?              @db.Timestamptz(6)
  metadata                                      Json?
  created_at                                    DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                    DateTime               @default(now()) @db.Timestamptz(6)
  users_permission_requests_approver_idTousers  users?                 @relation("permission_requests_approver_idTousers", fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  permission_definitions                        permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_permission_requests_requester_idTousers users                  @relation("permission_requests_requester_idTousers", fields: [requester_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([approver_id], map: "idx_permission_requests_approver")
  @@index([permission_id], map: "idx_permission_requests_permission")
  @@index([requester_id], map: "idx_permission_requests_requester")
  @@index([status], map: "idx_permission_requests_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_scopes {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String    @db.Uuid
  permission_key String    @db.VarChar(100)
  resource_type  String    @db.VarChar(100)
  resource_id    String?   @db.Uuid
  scope_metadata Json?
  granted_by     String?   @db.Uuid
  granted_at     DateTime  @default(now()) @db.Timestamptz(6)
  expires_at     DateTime? @db.Timestamptz(6)
  is_active      Boolean   @default(true)
  reason         String?
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @db.Timestamptz(6)

  @@index([is_active], map: "idx_permission_scopes_active")
  @@index([scope_metadata], map: "idx_permission_scopes_metadata", type: Gin)
  @@index([permission_key], map: "idx_permission_scopes_permission")
  @@index([resource_type, resource_id], map: "idx_permission_scopes_resource")
  @@index([user_id], map: "idx_permission_scopes_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_template_items {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_id            String                 @db.Uuid
  permission_id          String                 @db.Uuid
  resource_type          String?                @db.VarChar(100)
  scope_metadata         Json?
  created_at             DateTime               @default(now()) @db.Timestamptz(6)
  permission_definitions permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  permission_templates   permission_templates   @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([template_id, permission_id, resource_type], map: "uq_template_item")
  @@index([permission_id], map: "idx_perm_template_items_permission")
  @@index([resource_type], map: "idx_perm_template_items_resource")
  @@index([template_id], map: "idx_perm_template_items_template")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_templates {
  id                        String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_name             String                      @unique @db.VarChar(100)
  template_description      String?
  is_global                 Boolean?                    @default(true)
  organization_id           String?                     @db.Uuid
  category                  String?                     @db.VarChar(50)
  is_system_template        Boolean?                    @default(false)
  is_active                 Boolean?                    @default(true)
  created_by                String?                     @db.Uuid
  created_at                DateTime                    @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                    @default(now()) @db.Timestamptz(6)
  permission_template_items permission_template_items[]
  users                     users?                      @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([category], map: "idx_perm_templates_category")
  @@index([template_name], map: "idx_perm_templates_name")
  @@index([organization_id], map: "idx_perm_templates_org")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model permission_usage_log {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                String                 @db.Uuid
  permission_id          String                 @db.Uuid
  resource_type          String?
  resource_id            String?
  action                 String?
  result                 String
  denial_reason          String?
  ip_address             String?                @db.Inet
  user_agent             String?
  session_id             String?                @db.Uuid
  timestamp              DateTime               @default(now()) @db.Timestamptz(6)
  metadata               Json?
  permission_definitions permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                  users                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([permission_id, timestamp(sort: Desc)], map: "idx_usage_log_permission_time")
  @@index([result], map: "idx_usage_log_result")
  @@index([timestamp(sort: Desc)], map: "idx_usage_log_timestamp")
  @@index([user_id, timestamp(sort: Desc)], map: "idx_usage_log_user_time")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pickup_requests {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shipment_id          String?   @db.Uuid
  pickup_date          DateTime  @db.Date
  ready_time           DateTime  @db.Time(6)
  close_time           DateTime  @db.Time(6)
  location             Json
  confirmation_number  String?
  driver_name          String?
  driver_phone         String?
  status               String?   @default("requested")
  seko_pickup_response Json?
  created_at           DateTime? @default(now()) @db.Timestamp(6)
  updated_at           DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_pickup_requests_created_at")
  @@index([status], map: "idx_pickup_requests_status")
  @@index([updated_at], map: "idx_pickup_requests_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_access_audit {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String        @db.Uuid
  portal_type    String        @db.VarChar(50)
  resource_type  String        @db.VarChar(100)
  resource_id    String?       @db.Uuid
  action         String        @db.VarChar(50)
  access_granted Boolean
  denial_reason  String?       @db.VarChar(255)
  ip_address     String?       @db.Inet
  user_agent     String?
  created_at     DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles  user_profiles @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([access_granted], map: "idx_portal_access_audit_access_granted")
  @@index([created_at(sort: Desc)], map: "idx_portal_access_audit_created")
  @@index([portal_type], map: "idx_portal_access_audit_portal_type")
  @@index([resource_type, resource_id], map: "idx_portal_access_audit_resource")
  @@index([user_id], map: "idx_portal_access_audit_user")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_access_logs {
  id                 String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id        String?       @db.Uuid
  portal_user_id     String?       @db.Uuid
  action             String        @db.VarChar(100)
  resource_type      String?       @db.VarChar(50)
  resource_id        String?       @db.Uuid
  ip_address         String?       @db.Inet
  user_agent         String?
  request_method     String?       @db.VarChar(10)
  request_path       String?
  response_status    Int?
  occurred_at        DateTime?     @default(now()) @db.Timestamptz(6)
  processing_time_ms Int?
  metadata           Json?         @default("{}")
  customers          customers?    @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  portal_users       portal_users? @relation(fields: [portal_user_id], references: [id], onUpdate: NoAction)

  @@index([customer_id], map: "idx_portal_access_logs_customer_id")
  @@index([portal_user_id], map: "idx_portal_access_logs_portal_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_activity_log {
  id            String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id   String?    @db.Uuid
  user_id       String?    @db.Uuid
  activity_type String     @db.VarChar(50)
  description   String?
  metadata      Json?      @default("{}")
  ip_address    String?    @db.Inet
  user_agent    String?
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  customers     customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_portal_activity_log_created_at")
  @@index([customer_id], map: "idx_portal_activity_log_customer_id")
  @@index([user_id], map: "idx_portal_activity_log_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_activity_logs {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id      String?          @db.Uuid
  user_id         String           @db.Uuid
  portal_type     String           @db.VarChar(50)
  activity_type   String           @db.VarChar(100)
  entity_type     String?          @db.VarChar(100)
  entity_id       String?          @db.Uuid
  metadata        Json?
  created_at      DateTime?        @default(now()) @db.Timestamptz(6)
  portal_sessions portal_sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles   user_profiles    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([activity_type], map: "idx_portal_activity_logs_activity_type")
  @@index([created_at(sort: Desc)], map: "idx_portal_activity_logs_created")
  @@index([entity_type, entity_id], map: "idx_portal_activity_logs_entity")
  @@index([portal_type], map: "idx_portal_activity_logs_portal_type")
  @@index([session_id], map: "idx_portal_activity_logs_session")
  @@index([user_id], map: "idx_portal_activity_logs_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_configurations {
  id                                            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                                   String    @unique @db.Uuid
  portal_name                                   String?   @db.VarChar(255)
  welcome_message                               String?
  custom_logo_url                               String?
  primary_color                                 String?   @default("#91bdbd") @db.VarChar(7)
  show_dashboard                                Boolean?  @default(true)
  show_orders                                   Boolean?  @default(true)
  show_shipping                                 Boolean?  @default(true)
  show_financials                               Boolean?  @default(false)
  show_documents                                Boolean?  @default(true)
  show_approvals                                Boolean?  @default(true)
  show_production_tracking                      Boolean?  @default(true)
  show_design_center                            Boolean?  @default(false)
  show_support_tickets                          Boolean?  @default(true)
  show_invoice_details                          Boolean?  @default(false)
  show_payment_history                          Boolean?  @default(false)
  show_outstanding_balance                      Boolean?  @default(false)
  allow_online_payments                         Boolean?  @default(false)
  allow_document_upload                         Boolean?  @default(true)
  allowed_file_types                            String[]  @default(["pdf", "doc", "docx", "jpg", "png"])
  max_file_size_mb                              Int?      @default(10)
  require_approval_for_uploads                  Boolean?  @default(true)
  enable_notifications                          Boolean?  @default(true)
  enable_email_notifications                    Boolean?  @default(true)
  notification_frequency                        String?   @default("immediate") @db.VarChar(20)
  session_timeout_minutes                       Int?      @default(480)
  require_mfa                                   Boolean?  @default(false)
  allowed_ip_ranges                             String[]
  created_at                                    DateTime? @default(now()) @db.Timestamptz(6)
  created_by                                    String?   @db.Uuid
  updated_at                                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_by                                    String?   @db.Uuid
  users_portal_configurations_created_byTousers users?    @relation("portal_configurations_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                                     customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_portal_configurations_updated_byTousers users?    @relation("portal_configurations_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_portal_configurations_created_at")
  @@index([created_by], map: "idx_portal_configurations_created_by")
  @@index([customer_id], map: "idx_portal_configurations_customer_id")
  @@index([updated_at], map: "idx_portal_configurations_updated_at")
  @@index([updated_by], map: "idx_portal_configurations_updated_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_documents {
  id            String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id   String?    @db.Uuid
  document_type String     @db.VarChar(50)
  title         String     @db.VarChar(255)
  description   String?
  file_url      String?
  file_size     Int?
  mime_type     String?    @db.VarChar(100)
  is_public     Boolean?   @default(false)
  uploaded_by   String?    @db.Uuid
  tags          String[]
  metadata      Json?      @default("{}")
  created_at    DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?  @default(now()) @db.Timestamptz(6)
  customers     customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users?     @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_portal_documents_created_at")
  @@index([customer_id], map: "idx_portal_documents_customer_id")
  @@index([updated_at], map: "idx_portal_documents_updated_at")
  @@index([uploaded_by], map: "idx_portal_documents_uploaded_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_invitations {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id         String    @db.Uuid
  email               String    @db.VarChar(255)
  full_name           String    @db.VarChar(255)
  title               String?   @db.VarChar(255)
  portal_role         String?   @default("viewer") @db.VarChar(50)
  invitation_token    String    @unique @default(dbgenerated("(gen_random_uuid())::text")) @db.VarChar(255)
  status              String?   @default("pending") @db.VarChar(20)
  sent_at             DateTime? @default(now()) @db.Timestamptz(6)
  expires_at          DateTime? @default(dbgenerated("(now() + '7 days'::interval)")) @db.Timestamptz(6)
  accepted_at         DateTime? @db.Timestamptz(6)
  revoked_at          DateTime? @db.Timestamptz(6)
  initial_permissions Json?     @default("{}")
  custom_message      String?
  sender_name         String?   @db.VarChar(255)
  created_by          String    @db.Uuid
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  users               users     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers           customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([customer_id, email, status])
  @@index([created_at], map: "idx_portal_invitations_created_at")
  @@index([created_by], map: "idx_portal_invitations_created_by")
  @@index([customer_id], map: "idx_portal_invitations_customer_id")
  @@index([status], map: "idx_portal_invitations_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_module_settings {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  portal_type String    @db.VarChar(50)
  entity_id   String?   @db.Uuid
  module_key  String    @db.VarChar(100)
  is_enabled  Boolean   @default(true)
  permissions Json?     @default("{}")
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([portal_type, entity_id, module_key])
  @@index([created_at], map: "idx_portal_module_settings_created_at")
  @@index([updated_at], map: "idx_portal_module_settings_updated_at")
  @@index([portal_type, entity_id])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_sessions {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id          String                 @db.Uuid
  portal_user_id       String?                @db.Uuid
  session_token        String                 @unique @db.VarChar(255)
  ip_address           String?                @db.Inet
  user_agent           String?
  device_info          Json?                  @default("{}")
  started_at           DateTime?              @default(now()) @db.Timestamptz(6)
  last_activity        DateTime?              @default(now()) @db.Timestamptz(6)
  ended_at             DateTime?              @db.Timestamptz(6)
  is_active            Boolean?               @default(true)
  pages_visited        String[]               @default([])
  actions_performed    Json?                  @default("[]")
  is_suspicious        Boolean?               @default(false)
  risk_score           Int?                   @default(0)
  portal_activity_logs portal_activity_logs[]
  customers            customers              @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  portal_users         portal_users?          @relation(fields: [portal_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([customer_id], map: "idx_portal_sessions_customer_id")
  @@index([is_active], map: "idx_portal_sessions_is_active")
  @@index([portal_user_id], map: "idx_portal_sessions_portal_user_id")
  @@index([started_at(sort: Desc)], map: "idx_portal_sessions_started")
  @@index([session_token], map: "idx_portal_sessions_token")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_settings {
  id                       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id              String?    @unique @db.Uuid
  show_production_tracking Boolean?   @default(true)
  show_financial_details   Boolean?   @default(true)
  show_shipping_info       Boolean?   @default(true)
  allow_document_upload    Boolean?   @default(false)
  allow_design_approval    Boolean?   @default(false)
  custom_branding          Json?      @default("{}")
  notification_preferences Json?      @default("{\"sms\": false, \"email\": true, \"in_app\": true}")
  created_at               DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?  @default(now()) @db.Timestamptz(6)
  customers                customers? @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_portal_settings_created_at")
  @@index([customer_id], map: "idx_portal_settings_customer_id")
  @@index([updated_at], map: "idx_portal_settings_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model portal_users {
  id                                     String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                            String               @db.Uuid
  auth_user_id                           String?              @unique @db.Uuid
  email                                  String               @db.VarChar(255)
  full_name                              String               @db.VarChar(255)
  title                                  String?              @db.VarChar(255)
  phone                                  String?              @db.VarChar(50)
  portal_role                            String?              @default("viewer") @db.VarChar(50)
  is_active                              Boolean?             @default(true)
  is_primary_contact                     Boolean?             @default(false)
  permissions                            Json?                @default("{}")
  last_login                             DateTime?            @db.Timestamptz(6)
  login_count                            Int?                 @default(0)
  password_reset_required                Boolean?             @default(true)
  created_at                             DateTime?            @default(now()) @db.Timestamptz(6)
  created_by                             String?              @db.Uuid
  updated_at                             DateTime?            @default(now()) @db.Timestamptz(6)
  updated_by                             String?              @db.Uuid
  portal_access_logs                     portal_access_logs[]
  portal_sessions                        portal_sessions[]
  users_portal_users_auth_user_idTousers users?               @relation("portal_users_auth_user_idTousers", fields: [auth_user_id], references: [id], onUpdate: NoAction)
  users_portal_users_created_byTousers   users?               @relation("portal_users_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers                              customers            @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_portal_users_updated_byTousers   users?               @relation("portal_users_updated_byTousers", fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([customer_id, email])
  @@index([created_at], map: "idx_portal_users_created_at")
  @@index([created_by], map: "idx_portal_users_created_by")
  @@index([customer_id], map: "idx_portal_users_customer_id")
  @@index([is_active], map: "idx_portal_users_is_active")
  @@index([updated_at], map: "idx_portal_users_updated_at")
  @@index([updated_by], map: "idx_portal_users_updated_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_batches {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_number    String    @unique
  order_id        String?   @db.Uuid
  status          String?   @default("pending")
  start_date      DateTime? @db.Date
  completion_date DateTime? @db.Date
  assigned_to     String?
  notes           String?
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_production_batches_created_at")
  @@index([status], map: "idx_production_batches_status")
  @@index([updated_at], map: "idx_production_batches_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_events {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  production_tracking_id String?   @db.Uuid
  event_type             String
  title                  String
  description            String?
  severity               String?   @default("info")
  data                   Json?     @default("{}")
  created_by             String?   @db.Uuid
  created_at             DateTime? @default(now()) @db.Timestamp(6)
  users                  users?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_production_events_created_at")
  @@index([created_by], map: "idx_production_events_created_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_invoice_line_items {
  id                    String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  production_invoice_id String              @db.Uuid
  description           String
  quantity              Int
  unit_price            Decimal             @db.Decimal(10, 2)
  total                 Decimal             @db.Decimal(10, 2)
  created_at            DateTime            @default(now()) @db.Timestamptz(6)
  production_invoices   production_invoices @relation(fields: [production_invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_production_invoice_line_items_created_at")
  @@index([production_invoice_id], map: "idx_production_invoice_line_items_invoice_id")
  @@index([production_invoice_id], map: "idx_production_invoice_line_items_production_invoice_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_invoices {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_number                String                          @unique
  invoice_type                  String
  production_order_id           String?                         @db.Uuid
  project_id                    String?                         @db.Uuid
  customer_id                   String?                         @db.Uuid
  subtotal                      Decimal                         @db.Decimal(10, 2)
  tax                           Decimal                         @default(0) @db.Decimal(10, 2)
  shipping                      Decimal                         @default(0) @db.Decimal(10, 2)
  total                         Decimal                         @db.Decimal(10, 2)
  amount_paid                   Decimal                         @default(0) @db.Decimal(10, 2)
  amount_due                    Decimal                         @db.Decimal(10, 2)
  payment_terms                 String
  due_date                      DateTime?                       @db.Date
  status                        String                          @default("pending_payment")
  invoice_date                  DateTime                        @default(now()) @db.Timestamptz(6)
  paid_date                     DateTime?                       @db.Timestamptz(6)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(6)
  order_id                      String?                         @db.Uuid
  production_invoice_line_items production_invoice_line_items[]
  customers                     customers?                      @relation(fields: [customer_id], references: [id], onUpdate: NoAction)
  orders                        orders?                         @relation(fields: [order_id], references: [id], onUpdate: NoAction)
  production_orders             production_orders?              @relation(fields: [production_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  projects                      projects?                       @relation(fields: [project_id], references: [id], onUpdate: NoAction)
  production_payments           production_payments[]

  @@index([created_at], map: "idx_production_invoices_created_at")
  @@index([customer_id], map: "idx_production_invoices_customer_id")
  @@index([invoice_date], map: "idx_production_invoices_invoice_date")
  @@index([order_id], map: "idx_production_invoices_order_id")
  @@index([production_order_id], map: "idx_production_invoices_production_order_id")
  @@index([project_id], map: "idx_production_invoices_project_id")
  @@index([status], map: "idx_production_invoices_status")
  @@index([updated_at], map: "idx_production_invoices_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_items {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id             String                 @db.Uuid
  order_item_id        String?                @db.Uuid
  item_name            String                 @db.VarChar(255)
  current_stage_name   String?                @db.VarChar(100)
  current_stage_id     String?                @db.VarChar(10)
  progress             Int?                   @default(0)
  priority             priority_enum          @default(normal)
  assigned_to          String?                @db.VarChar(255)
  started_at           DateTime?              @db.Timestamptz(6)
  estimated_completion DateTime?              @db.Timestamptz(6)
  customer_name        String?                @db.VarChar(255)
  status               production_status_enum @default(planned)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @default(now()) @db.Timestamptz(6)
  qc_status            String?
  qc_ready_at          DateTime?              @db.Timestamptz(6)
  orders               orders                 @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_items          order_items?           @relation(fields: [order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_inspections       qc_inspections[]

  @@index([created_at], map: "idx_production_items_created_at")
  @@index([order_id], map: "idx_production_items_order_id")
  @@index([order_item_id], map: "idx_production_items_order_item_id")
  @@index([qc_status, qc_ready_at(sort: Desc)], map: "idx_production_items_qc_ready")
  @@index([qc_status], map: "idx_production_items_qc_status")
  @@index([status], map: "idx_production_items_status")
  @@index([updated_at], map: "idx_production_items_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_milestones {
  id                      String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_project_id String?                @db.Uuid
  milestone_name          String
  milestone_type          String?
  planned_date            DateTime?              @db.Date
  actual_date             DateTime?              @db.Date
  status                  String?                @default("pending")
  completion_percentage   Int?                   @default(0)
  notes                   String?
  photos                  Json?                  @default("[]")
  created_by              String?                @db.Uuid
  created_at              DateTime?              @default(now()) @db.Timestamp(6)
  updated_at              DateTime?              @default(now()) @db.Timestamp(6)
  production_order_id     String?                @db.Uuid
  users                   users?                 @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  manufacturer_projects   manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  production_orders       production_orders?     @relation(fields: [production_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_production_milestones_created_at")
  @@index([created_by], map: "idx_production_milestones_created_by")
  @@index([manufacturer_project_id], map: "idx_production_milestones_manufacturer_project_id")
  @@index([production_order_id], map: "idx_production_milestones_production_order_id")
  @@index([status], map: "idx_production_milestones_status")
  @@index([updated_at], map: "idx_production_milestones_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_orders {
  id                                             String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_number                                   String                     @unique
  project_id                                     String?                    @db.Uuid
  product_type                                   String
  catalog_item_id                                String?                    @db.Uuid
  prototype_id                                   String?                    @db.Uuid
  concept_id                                     String?                    @db.Uuid
  item_name                                      String
  item_description                               String?
  quantity                                       Int
  unit_price                                     Decimal                    @db.Decimal(10, 2)
  total_cost                                     Decimal                    @db.Decimal(10, 2)
  deposit_paid                                   Boolean                    @default(false)
  final_payment_paid                             Boolean                    @default(false)
  status                                         String                     @default("awaiting_deposit")
  order_date                                     DateTime                   @default(now()) @db.Timestamptz(6)
  estimated_ship_date                            DateTime?                  @db.Date
  actual_ship_date                               DateTime?                  @db.Date
  factory_id                                     String?                    @db.Uuid
  factory_notes                                  String?
  created_at                                     DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime                   @default(now()) @db.Timestamptz(6)
  created_by                                     String?                    @db.Uuid
  order_id                                       String?                    @db.Uuid
  delivered_date                                 DateTime?                  @db.Date
  estimated_completion_date                      DateTime?                  @db.Date
  production_start_date                          DateTime?                  @db.Date
  shipped_date                                   DateTime?                  @db.Date
  balance_amount                                 Decimal?                   @db.Decimal(10, 2)
  deposit_amount                                 Decimal?                   @db.Decimal(10, 2)
  completed_at                                   DateTime?                  @db.Timestamptz(6)
  ordered_items_production                       ordered_items_production[]
  production_invoices                            production_invoices[]
  production_milestones                          production_milestones[]
  items_production_orders_catalog_item_idToitems items?                     @relation("production_orders_catalog_item_idToitems", fields: [catalog_item_id], references: [id], onUpdate: NoAction)
  items_production_orders_concept_idToitems      items?                     @relation("production_orders_concept_idToitems", fields: [concept_id], references: [id], onUpdate: NoAction)
  users                                          users?                     @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  manufacturers                                  manufacturers?             @relation(fields: [factory_id], references: [id], onUpdate: NoAction)
  orders                                         orders?                    @relation(fields: [order_id], references: [id], onUpdate: NoAction)
  partners                                       partners?                  @relation(fields: [factory_id], references: [id], onUpdate: NoAction, map: "production_orders_partner_factory_id_fkey")
  projects                                       projects?                  @relation(fields: [project_id], references: [id], onUpdate: NoAction)
  items_production_orders_prototype_idToitems    items?                     @relation("production_orders_prototype_idToitems", fields: [prototype_id], references: [id], onUpdate: NoAction)
  production_payments                            production_payments[]
  shipping_quotes                                shipping_quotes[]
  shop_drawings                                  shop_drawings[]
  documents                                      documents[]

  @@index([catalog_item_id], map: "idx_production_orders_catalog_item_id")
  @@index([completed_at], map: "idx_production_orders_completed_at")
  @@index([concept_id], map: "idx_production_orders_concept_id")
  @@index([created_at], map: "idx_production_orders_created_at")
  @@index([created_by], map: "idx_production_orders_created_by")
  @@index([factory_id], map: "idx_production_orders_factory_id")
  @@index([order_date], map: "idx_production_orders_order_date")
  @@index([order_id], map: "idx_production_orders_order_id")
  @@index([project_id], map: "idx_production_orders_project_id")
  @@index([prototype_id], map: "idx_production_orders_prototype_id")
  @@index([status], map: "idx_production_orders_status")
  @@index([updated_at], map: "idx_production_orders_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_payments {
  id                    String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  payment_number        String              @unique
  production_invoice_id String              @db.Uuid
  production_order_id   String?             @db.Uuid
  amount                Decimal             @db.Decimal(10, 2)
  payment_method        String
  transaction_id        String?
  status                String              @default("completed")
  payment_date          DateTime            @default(now()) @db.Timestamptz(6)
  notes                 String?
  created_at            DateTime            @default(now()) @db.Timestamptz(6)
  updated_at            DateTime            @default(now()) @db.Timestamptz(6)
  created_by            String?             @db.Uuid
  users                 users?              @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  production_invoices   production_invoices @relation(fields: [production_invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  production_orders     production_orders?  @relation(fields: [production_order_id], references: [id], onUpdate: NoAction)

  @@index([created_at], map: "idx_production_payments_created_at")
  @@index([created_by], map: "idx_production_payments_created_by")
  @@index([production_invoice_id], map: "idx_production_payments_invoice_id")
  @@index([production_order_id], map: "idx_production_payments_order_id")
  @@index([payment_date], map: "idx_production_payments_payment_date")
  @@index([production_invoice_id], map: "idx_production_payments_production_invoice_id")
  @@index([production_order_id], map: "idx_production_payments_production_order_id")
  @@index([status], map: "idx_production_payments_status")
  @@index([updated_at], map: "idx_production_payments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_progress {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id             String    @db.Uuid
  stage                String
  status               String?   @default("pending")
  progress_percentage  Int?      @default(0)
  estimated_completion DateTime? @db.Date
  actual_completion    DateTime? @db.Timestamptz(6)
  notes                String?
  updated_by           String?   @db.Uuid
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  users                users?    @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_production_progress_created_at")
  @@index([order_id], map: "idx_production_progress_order_id")
  @@index([status], map: "idx_production_progress_status")
  @@index([updated_at], map: "idx_production_progress_updated_at")
  @@index([updated_by], map: "idx_production_progress_updated_by")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_reset_config {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  table_name     String    @unique
  reset_strategy String?   @default("truncate")
  load_order     Int?      @default(100)
  notes          String?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_production_reset_config_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_stage_history {
  id                                                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  production_tracking_id                             String?   @db.Uuid
  stage_id                                           String?   @db.Uuid
  entered_at                                         DateTime? @default(now()) @db.Timestamp(6)
  exited_at                                          DateTime? @db.Timestamp(6)
  duration_minutes                                   Int?
  completed_by                                       String?   @db.Uuid
  notes                                              String?
  photos                                             Json?     @default("[]")
  issues_reported                                    Json?     @default("[]")
  approval_status                                    String?
  approved_by                                        String?   @db.Uuid
  approval_notes                                     String?
  created_at                                         DateTime? @default(now()) @db.Timestamp(6)
  users_production_stage_history_approved_byTousers  users?    @relation("production_stage_history_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_production_stage_history_completed_byTousers users?    @relation("production_stage_history_completed_byTousers", fields: [completed_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approved_by], map: "idx_production_stage_history_approved_by")
  @@index([completed_by], map: "idx_production_stage_history_completed_by")
  @@index([created_at], map: "idx_production_stage_history_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_stages {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String
  stage_order           Int       @unique
  description           String?
  typical_duration_days Int?
  color                 String?   @default("#91bdbd")
  icon                  String?
  is_active             Boolean?  @default(true)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_production_stages_created_at")
  @@index([is_active], map: "idx_production_stages_is_active")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model production_tracking {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id             String?   @unique @db.Uuid
  current_stage_id     String?   @db.Uuid
  progress             Int?      @default(0)
  stage_history        Json?     @default("[]")
  started_at           DateTime? @db.Timestamptz(6)
  estimated_completion DateTime? @db.Timestamptz(6)
  completed_at         DateTime? @db.Timestamptz(6)
  internal_notes       String?
  customer_notes       String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_by           String?   @db.Uuid
  users                users?    @relation(fields: [updated_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_production_tracking_created_at")
  @@index([updated_at], map: "idx_production_tracking_updated_at")
  @@index([updated_by], map: "idx_production_tracking_updated_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model products {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  sku         String     @unique
  name        String
  category    String?
  base_price  Decimal?   @db.Decimal(10, 2)
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?  @default(now()) @db.Timestamptz(6)
  description String?
  unit        String?
  weight_lbs  Decimal?   @db.Decimal(10, 2)
  dimensions  String?
  hotspots    hotspots[]

  @@index([category], map: "idx_products_category")
  @@index([created_at], map: "idx_products_created_at")
  @@index([name], map: "idx_products_name")
  @@index([updated_at], map: "idx_products_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id          String    @id @db.Uuid
  email       String?   @unique
  full_name   String?
  role        String?
  tenant_id   String?   @db.Uuid
  department  String?
  permissions Json?     @default("{}")
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  users       users     @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tenants     tenants?  @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_profiles_created_at")
  @@index([id], map: "idx_profiles_id")
  @@index([is_active], map: "idx_profiles_is_active")
  @@index([tenant_id], map: "idx_profiles_tenant_id")
  @@index([updated_at], map: "idx_profiles_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model project_materials {
  id                      String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_project_id String?                @db.Uuid
  material_name           String
  material_type           String?
  supplier_name           String?
  quantity_needed         Decimal?               @db.Decimal(10, 3)
  quantity_ordered        Decimal?               @db.Decimal(10, 3)
  quantity_received       Decimal?               @db.Decimal(10, 3)
  unit_of_measure         String?
  unit_cost               Decimal?               @db.Decimal(10, 2)
  total_cost              Decimal?               @db.Decimal(10, 2)
  order_date              DateTime?              @db.Date
  expected_delivery_date  DateTime?              @db.Date
  actual_delivery_date    DateTime?              @db.Date
  status                  String?                @default("planning")
  quality_grade           String?
  storage_location        String?
  notes                   String?
  created_at              DateTime?              @default(now()) @db.Timestamp(6)
  updated_at              DateTime?              @default(now()) @db.Timestamp(6)
  manufacturer_projects   manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_project_materials_created_at")
  @@index([manufacturer_project_id], map: "idx_project_materials_manufacturer_project_id")
  @@index([status], map: "idx_project_materials_status")
  @@index([updated_at], map: "idx_project_materials_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model projects {
  id                        String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                      String?
  customer_id               String?               @db.Uuid
  status                    String?
  start_date                String?
  end_date                  String?
  budget                    Int?
  description               String?
  metadata                  Json?
  created_by                String?               @db.Uuid
  created_at                DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at                DateTime?             @default(now()) @db.Timestamptz(6)
  user_id                   String?               @db.Uuid
  tenant_id                 String?               @db.Uuid
  priority                  String?
  estimated_completion_date String?
  actual_completion_date    String?
  budget_estimate           String?
  actual_cost               String?
  project_manager           String?
  shipping_address_id       String?               @db.Uuid
  invoices                  invoices[]
  orders                    orders[]
  orders_old                orders_old[]
  production_invoices       production_invoices[]
  production_orders         production_orders[]
  customers                 customers?            @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  addresses                 addresses?            @relation(fields: [shipping_address_id], references: [id], onUpdate: NoAction)
  tenants                   tenants?              @relation(fields: [tenant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prototypes                prototypes[]
  shipments                 shipments[]

  @@index([created_at], map: "idx_projects_created_at")
  @@index([created_by], map: "idx_projects_created_by")
  @@index([customer_id], map: "idx_projects_customer_id")
  @@index([shipping_address_id], map: "idx_projects_shipping_address_id")
  @@index([status], map: "idx_projects_status")
  @@index([tenant_id], map: "idx_projects_tenant_id")
  @@index([updated_at], map: "idx_projects_updated_at")
  @@index([user_id, created_at(sort: Desc)], map: "idx_projects_user_id_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_documents {
  id                                           String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id                                 String                @db.Uuid
  milestone_id                                 String?               @db.Uuid
  document_type                                String
  title                                        String
  description                                  String?
  version                                      String?
  storage_type                                 String                @default("supabase")
  file_url                                     String
  file_name                                    String
  file_size                                    BigInt
  mime_type                                    String
  status                                       String                @default("draft")
  requires_approval                            Boolean               @default(false)
  approved_by                                  String?               @db.Uuid
  approved_at                                  DateTime?             @db.Timestamptz(6)
  uploaded_by                                  String                @db.Uuid
  uploaded_at                                  DateTime              @default(now()) @db.Timestamptz(6)
  users_prototype_documents_approved_byTousers users?                @relation("prototype_documents_approved_byTousers", fields: [approved_by], references: [id], onUpdate: NoAction)
  prototype_milestones                         prototype_milestones? @relation(fields: [milestone_id], references: [id], onUpdate: NoAction)
  prototypes                                   prototypes            @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_prototype_documents_uploaded_byTousers users                 @relation("prototype_documents_uploaded_byTousers", fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approved_by], map: "idx_prototype_documents_approved_by")
  @@index([milestone_id], map: "idx_prototype_documents_milestone")
  @@index([milestone_id], map: "idx_prototype_documents_milestone_id")
  @@index([prototype_id], map: "idx_prototype_documents_prototype")
  @@index([prototype_id], map: "idx_prototype_documents_prototype_id")
  @@index([status], map: "idx_prototype_documents_status")
  @@index([document_type], map: "idx_prototype_documents_type")
  @@index([uploaded_by], map: "idx_prototype_documents_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_feedback {
  id                                           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id                                 String     @db.Uuid
  feedback_type                                String     @default("general")
  feedback_source                              String
  title                                        String?
  feedback_text                                String
  sentiment                                    String?    @default("neutral")
  priority                                     String?    @default("medium")
  requires_action                              Boolean    @default(false)
  action_taken                                 String?
  status                                       String     @default("new")
  addressed_by                                 String?    @db.Uuid
  addressed_at                                 DateTime?  @db.Timestamptz(6)
  submitted_by                                 String     @db.Uuid
  submitted_at                                 DateTime   @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime   @default(now()) @db.Timestamptz(6)
  users_prototype_feedback_addressed_byTousers users?     @relation("prototype_feedback_addressed_byTousers", fields: [addressed_by], references: [id], onUpdate: NoAction)
  prototypes                                   prototypes @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_prototype_feedback_submitted_byTousers users      @relation("prototype_feedback_submitted_byTousers", fields: [submitted_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([addressed_by], map: "idx_prototype_feedback_addressed_by")
  @@index([prototype_id], map: "idx_prototype_feedback_prototype")
  @@index([prototype_id], map: "idx_prototype_feedback_prototype_id")
  @@index([status], map: "idx_prototype_feedback_status")
  @@index([submitted_by], map: "idx_prototype_feedback_submitted_by")
  @@index([feedback_type], map: "idx_prototype_feedback_type")
  @@index([updated_at], map: "idx_prototype_feedback_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_milestones {
  id                                             String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id                                   String                 @db.Uuid
  milestone_name                                 String
  milestone_type                                 String                 @default("production")
  description                                    String?
  sequence_order                                 Int
  depends_on_milestone                           String?                @db.Uuid
  status                                         String                 @default("pending")
  completion_percentage                          Int                    @default(0)
  planned_start                                  DateTime?              @db.Date
  planned_end                                    DateTime?              @db.Date
  actual_start                                   DateTime?              @db.Date
  actual_end                                     DateTime?              @db.Date
  assigned_to                                    String?                @db.Uuid
  quality_checkpoint                             Boolean                @default(false)
  quality_passed                                 Boolean?
  quality_notes                                  String?
  notes                                          String?
  blockers                                       String?
  created_at                                     DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime               @default(now()) @db.Timestamptz(6)
  completed_at                                   DateTime?              @db.Timestamptz(6)
  completed_by                                   String?                @db.Uuid
  prototype_documents                            prototype_documents[]
  users_prototype_milestones_assigned_toTousers  users?                 @relation("prototype_milestones_assigned_toTousers", fields: [assigned_to], references: [id], onUpdate: NoAction)
  users_prototype_milestones_completed_byTousers users?                 @relation("prototype_milestones_completed_byTousers", fields: [completed_by], references: [id], onUpdate: NoAction)
  prototype_milestones                           prototype_milestones?  @relation("prototype_milestonesToprototype_milestones", fields: [depends_on_milestone], references: [id], onUpdate: NoAction)
  other_prototype_milestones                     prototype_milestones[] @relation("prototype_milestonesToprototype_milestones")
  prototypes                                     prototypes             @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  prototype_photos                               prototype_photos[]

  @@index([assigned_to], map: "idx_prototype_milestones_assigned")
  @@index([completed_by], map: "idx_prototype_milestones_completed_by")
  @@index([created_at], map: "idx_prototype_milestones_created_at")
  @@index([depends_on_milestone], map: "idx_prototype_milestones_depends_on_milestone")
  @@index([prototype_id], map: "idx_prototype_milestones_prototype")
  @@index([prototype_id], map: "idx_prototype_milestones_prototype_id")
  @@index([sequence_order], map: "idx_prototype_milestones_sequence")
  @@index([status], map: "idx_prototype_milestones_status")
  @@index([updated_at], map: "idx_prototype_milestones_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_photo_comments {
  id                                                String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  photo_id                                          String                     @db.Uuid
  comment_text                                      String
  comment_type                                      String                     @default("general")
  position_x                                        Decimal?                   @db.Decimal(10, 2)
  position_y                                        Decimal?                   @db.Decimal(10, 2)
  parent_comment_id                                 String?                    @db.Uuid
  status                                            String                     @default("open")
  resolved_at                                       DateTime?                  @db.Timestamptz(6)
  resolved_by                                       String?                    @db.Uuid
  author_id                                         String                     @db.Uuid
  created_at                                        DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at                                        DateTime                   @default(now()) @db.Timestamptz(6)
  users_prototype_photo_comments_author_idTousers   users                      @relation("prototype_photo_comments_author_idTousers", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prototype_photo_comments                          prototype_photo_comments?  @relation("prototype_photo_commentsToprototype_photo_comments", fields: [parent_comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_prototype_photo_comments                    prototype_photo_comments[] @relation("prototype_photo_commentsToprototype_photo_comments")
  prototype_photos                                  prototype_photos           @relation(fields: [photo_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_prototype_photo_comments_resolved_byTousers users?                     @relation("prototype_photo_comments_resolved_byTousers", fields: [resolved_by], references: [id], onUpdate: NoAction)

  @@index([author_id], map: "idx_prototype_photo_comments_author")
  @@index([created_at], map: "idx_prototype_photo_comments_created_at")
  @@index([parent_comment_id], map: "idx_prototype_photo_comments_parent_comment_id")
  @@index([photo_id], map: "idx_prototype_photo_comments_photo")
  @@index([photo_id], map: "idx_prototype_photo_comments_photo_id")
  @@index([resolved_by], map: "idx_prototype_photo_comments_resolved_by")
  @@index([status], map: "idx_prototype_photo_comments_status")
  @@index([updated_at], map: "idx_prototype_photo_comments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_photos {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id             String                     @db.Uuid
  milestone_id             String?                    @db.Uuid
  photo_type               String                     @default("progress")
  title                    String?
  description              String?
  storage_type             String                     @default("supabase")
  file_url                 String
  thumbnail_url            String?
  file_name                String
  file_size                BigInt
  mime_type                String
  width                    Int?
  height                   Int?
  taken_at                 DateTime?                  @db.Timestamptz(6)
  camera_model             String?
  location                 String?
  annotations              Json?
  is_featured              Boolean                    @default(false)
  shows_defect             Boolean                    @default(false)
  requires_action          Boolean                    @default(false)
  uploaded_by              String                     @db.Uuid
  uploaded_at              DateTime                   @default(now()) @db.Timestamptz(6)
  prototype_photo_comments prototype_photo_comments[]
  prototype_milestones     prototype_milestones?      @relation(fields: [milestone_id], references: [id], onUpdate: NoAction)
  prototypes               prototypes                 @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                    users                      @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([milestone_id], map: "idx_prototype_photos_milestone")
  @@index([prototype_id], map: "idx_prototype_photos_prototype")
  @@index([photo_type], map: "idx_prototype_photos_type")
  @@index([uploaded_by], map: "idx_prototype_photos_uploader")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_production {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id            String                    @unique @db.Uuid
  factory_id              String?                   @db.Uuid
  production_manager_id   String?                   @db.Uuid
  status                  String                    @default("not_started")
  start_date              DateTime?                 @db.Date
  target_date             DateTime?                 @db.Date
  estimated_completion    DateTime?                 @db.Date
  actual_completion       DateTime?                 @db.Date
  overall_progress        Int                       @default(0)
  current_phase           String?
  estimated_cost          Decimal?                  @db.Decimal(10, 2)
  actual_cost             Decimal?                  @db.Decimal(10, 2)
  cost_notes              String?
  quality_score           Int?
  defects_found           Int                       @default(0)
  rework_required         Boolean                   @default(false)
  notes                   String?
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                  @default(now()) @db.Timestamptz(6)
  review_status           String?
  review_ready_at         DateTime?                 @db.Timestamptz(6)
  factory_review_sessions factory_review_sessions[]
  partners                partners?                 @relation(fields: [factory_id], references: [id], onUpdate: NoAction)
  users                   users?                    @relation(fields: [production_manager_id], references: [id], onUpdate: NoAction)
  prototypes              prototypes                @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_inspections          qc_inspections[]
  shop_drawings           shop_drawings[]

  @@index([created_at], map: "idx_prototype_production_created_at")
  @@index([factory_id], map: "idx_prototype_production_factory")
  @@index([factory_id], map: "idx_prototype_production_factory_id")
  @@index([production_manager_id], map: "idx_prototype_production_manager")
  @@index([production_manager_id], map: "idx_prototype_production_production_manager_id")
  @@index([prototype_id], map: "idx_prototype_production_prototype")
  @@index([prototype_id], map: "idx_prototype_production_prototype_id")
  @@index([review_status, review_ready_at(sort: Desc)], map: "idx_prototype_production_review_ready")
  @@index([review_status], map: "idx_prototype_production_review_status")
  @@index([status], map: "idx_prototype_production_status")
  @@index([updated_at], map: "idx_prototype_production_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_review_actions {
  id                                                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  review_id                                         String            @db.Uuid
  action_type                                       String            @default("task")
  title                                             String
  description                                       String
  priority                                          String            @default("medium")
  assigned_to                                       String?           @db.Uuid
  status                                            String            @default("open")
  due_date                                          DateTime?         @db.Date
  completed_at                                      DateTime?         @db.Timestamptz(6)
  resolution_notes                                  String?
  verified_by                                       String?           @db.Uuid
  created_at                                        DateTime          @default(now()) @db.Timestamptz(6)
  updated_at                                        DateTime          @default(now()) @db.Timestamptz(6)
  users_prototype_review_actions_assigned_toTousers users?            @relation("prototype_review_actions_assigned_toTousers", fields: [assigned_to], references: [id], onUpdate: NoAction)
  prototype_reviews                                 prototype_reviews @relation(fields: [review_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_prototype_review_actions_verified_byTousers users?            @relation("prototype_review_actions_verified_byTousers", fields: [verified_by], references: [id], onUpdate: NoAction)

  @@index([assigned_to], map: "idx_prototype_review_actions_assigned")
  @@index([created_at], map: "idx_prototype_review_actions_created_at")
  @@index([review_id], map: "idx_prototype_review_actions_review")
  @@index([review_id], map: "idx_prototype_review_actions_review_id")
  @@index([status], map: "idx_prototype_review_actions_status")
  @@index([updated_at], map: "idx_prototype_review_actions_updated_at")
  @@index([verified_by], map: "idx_prototype_review_actions_verified_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_review_participants {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  review_id         String            @db.Uuid
  user_id           String?           @db.Uuid
  external_name     String?
  external_email    String?
  external_company  String?
  role              String
  attended          Boolean           @default(true)
  notes             String?
  prototype_reviews prototype_reviews @relation(fields: [review_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users             users?            @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([review_id], map: "idx_prototype_review_participants_review")
  @@index([review_id], map: "idx_prototype_review_participants_review_id")
  @@index([user_id], map: "idx_prototype_review_participants_user")
  @@index([user_id], map: "idx_prototype_review_participants_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_reviews {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id                  String                          @db.Uuid
  review_type                   String
  review_date                   DateTime                        @db.Timestamptz(6)
  location                      String?
  status                        String                          @default("scheduled")
  decision                      String?
  summary                       String?
  findings                      Json?
  meeting_notes                 String?
  photo_references              String[]
  document_references           String[]
  created_by                    String                          @db.Uuid
  created_at                    DateTime                        @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(6)
  prototype_review_actions      prototype_review_actions[]
  prototype_review_participants prototype_review_participants[]
  users                         users                           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prototypes                    prototypes                      @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_prototype_reviews_created_at")
  @@index([created_by], map: "idx_prototype_reviews_created_by")
  @@index([review_date], map: "idx_prototype_reviews_date")
  @@index([prototype_id], map: "idx_prototype_reviews_prototype")
  @@index([prototype_id], map: "idx_prototype_reviews_prototype_id")
  @@index([status], map: "idx_prototype_reviews_status")
  @@index([review_type], map: "idx_prototype_reviews_type")
  @@index([updated_at], map: "idx_prototype_reviews_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototype_revisions {
  id                                           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_id                                 String     @db.Uuid
  revision_number                              String
  revision_type                                String
  title                                        String
  description                                  String
  changes_summary                              Json?
  reason_for_change                            String
  approved_by                                  String?    @db.Uuid
  approved_at                                  DateTime?  @db.Timestamptz(6)
  before_photos                                String[]
  after_photos                                 String[]
  documents                                    String[]
  cost_impact                                  Decimal?   @db.Decimal(10, 2)
  timeline_impact_days                         Int?
  created_by                                   String     @db.Uuid
  created_at                                   DateTime   @default(now()) @db.Timestamptz(6)
  users_prototype_revisions_approved_byTousers users?     @relation("prototype_revisions_approved_byTousers", fields: [approved_by], references: [id], onUpdate: NoAction)
  users_prototype_revisions_created_byTousers  users      @relation("prototype_revisions_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prototypes                                   prototypes @relation(fields: [prototype_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([approved_by], map: "idx_prototype_revisions_approved_by")
  @@index([created_at], map: "idx_prototype_revisions_created_at")
  @@index([created_by], map: "idx_prototype_revisions_created_by")
  @@index([prototype_id], map: "idx_prototype_revisions_prototype")
  @@index([prototype_id], map: "idx_prototype_revisions_prototype_id")
  @@index([revision_type], map: "idx_prototype_revisions_type")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model prototypes {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  prototype_number     String                 @unique
  name                 String
  description          String?
  prototype_type       String                 @default("furniture")
  design_project_id    String?                @db.Uuid
  base_item_id         String?                @db.Uuid
  crm_project_id       String?                @db.Uuid
  status               String                 @default("concept")
  priority             String                 @default("medium")
  is_client_specific   Boolean                @default(false)
  is_catalog_candidate Boolean                @default(false)
  specifications       Json?
  target_price_usd     Decimal?               @db.Decimal(10, 2)
  target_cost_usd      Decimal?               @db.Decimal(10, 2)
  tags                 String[]
  notes                String?
  internal_notes       String?
  created_by           String                 @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime               @default(now()) @db.Timestamptz(6)
  designer_id          String?                @db.Uuid
  manufacturer_id      String?                @db.Uuid
  collection_id        String?                @db.Uuid
  concept_id           String?                @db.Uuid
  documents            documents[]
  prototype_documents  prototype_documents[]
  prototype_feedback   prototype_feedback[]
  prototype_milestones prototype_milestones[]
  prototype_photos     prototype_photos[]
  prototype_production prototype_production?
  prototype_reviews    prototype_reviews[]
  prototype_revisions  prototype_revisions[]
  collections          collections?           @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_prototypes_collection")
  concepts             concepts?              @relation(fields: [concept_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_prototypes_concepts")
  designers            designers?             @relation(fields: [designer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_prototypes_designer")
  manufacturers        manufacturers?         @relation(fields: [manufacturer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_prototypes_manufacturer")
  items                items?                 @relation(fields: [base_item_id], references: [id], onUpdate: NoAction)
  users                users                  @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects             projects?              @relation(fields: [crm_project_id], references: [id], onUpdate: NoAction)
  design_projects      design_projects?       @relation(fields: [design_project_id], references: [id], onUpdate: NoAction)

  @@index([base_item_id], map: "idx_prototypes_base_item")
  @@index([base_item_id], map: "idx_prototypes_base_item_id")
  @@index([collection_id], map: "idx_prototypes_collection_id")
  @@index([concept_id], map: "idx_prototypes_concept_id")
  @@index([created_at], map: "idx_prototypes_created_at")
  @@index([created_by], map: "idx_prototypes_created_by")
  @@index([crm_project_id], map: "idx_prototypes_crm_project")
  @@index([crm_project_id], map: "idx_prototypes_crm_project_id")
  @@index([design_project_id], map: "idx_prototypes_design_project")
  @@index([design_project_id], map: "idx_prototypes_design_project_id")
  @@index([designer_id], map: "idx_prototypes_designer_id")
  @@index([manufacturer_id], map: "idx_prototypes_manufacturer_id")
  @@index([prototype_number], map: "idx_prototypes_number")
  @@index([priority], map: "idx_prototypes_priority")
  @@index([status], map: "idx_prototypes_status")
  @@index([updated_at], map: "idx_prototypes_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model push_subscriptions {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String?   @db.Uuid
  device_id        String
  device_type      String?
  push_token       String
  endpoint         String?
  auth_keys        Json?
  platform_details Json?
  is_active        Boolean?  @default(true)
  last_used        DateTime? @db.Timestamptz(6)
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  users            users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, device_id])
  @@index([created_at], map: "idx_push_subscriptions_created_at")
  @@index([device_id], map: "idx_push_subscriptions_device_id")
  @@index([is_active], map: "idx_push_subscriptions_is_active")
  @@index([updated_at], map: "idx_push_subscriptions_updated_at")
  @@index([user_id], map: "idx_push_subscriptions_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pwa_cache_manifest {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cache_name      String
  cache_version   String
  urls            String[]
  strategy        String?
  max_age_seconds Int?      @default(86400)
  is_active       Boolean?  @default(true)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([cache_name, cache_version])
  @@index([created_at], map: "idx_pwa_cache_manifest_created_at")
  @@index([is_active], map: "idx_pwa_cache_manifest_is_active")
  @@index([updated_at], map: "idx_pwa_cache_manifest_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pwa_devices {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?   @db.Uuid
  device_id    String
  device_type  String?
  platform     String?
  browser      String?
  version      String?
  last_active  DateTime? @default(now()) @db.Timestamptz(6)
  push_enabled Boolean?  @default(false)
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  users        users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, device_id])
  @@index([created_at], map: "idx_pwa_devices_created_at")
  @@index([last_active], map: "idx_pwa_devices_last_active")
  @@index([user_id], map: "idx_pwa_devices_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model pwa_subscriptions {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String?   @db.Uuid
  endpoint    String    @unique
  keys        Json
  device_info Json?     @default("{}")
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  users       users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_pwa_subscriptions_created_at")
  @@index([is_active], map: "idx_pwa_subscriptions_is_active")
  @@index([updated_at], map: "idx_pwa_subscriptions_updated_at")
  @@index([user_id], map: "idx_pwa_subscriptions_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_capture_templates {
  id                                           String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_name                                String
  template_type                                String
  description                                  String?
  version                                      Int                    @default(1)
  is_active                                    Boolean                @default(true)
  is_default                                   Boolean                @default(false)
  created_at                                   DateTime               @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime               @default(now()) @db.Timestamptz(6)
  created_by                                   String?                @db.Uuid
  updated_by                                   String?                @db.Uuid
  users_qc_capture_templates_created_byTousers users?                 @relation("qc_capture_templates_created_byTousers", fields: [created_by], references: [id], onUpdate: NoAction)
  users_qc_capture_templates_updated_byTousers users?                 @relation("qc_capture_templates_updated_byTousers", fields: [updated_by], references: [id], onUpdate: NoAction)
  qc_template_sections                         qc_template_sections[]

  @@unique([template_type, is_default], map: "unique_template_type_default")
  @@index([is_active], map: "idx_qc_capture_templates_active")
  @@index([created_at], map: "idx_qc_capture_templates_created_at")
  @@index([is_default, template_type], map: "idx_qc_capture_templates_default")
  @@index([is_active], map: "idx_qc_capture_templates_is_active")
  @@index([template_type], map: "idx_qc_capture_templates_type")
  @@index([updated_at], map: "idx_qc_capture_templates_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_checkpoint_results {
  id                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  inspection_id           String                  @db.Uuid
  checkpoint_id           String                  @db.Uuid
  status                  String
  severity                String?
  note                    String?
  created_at              DateTime                @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                @default(now()) @db.Timestamptz(6)
  created_by              String?                 @db.Uuid
  qc_template_checkpoints qc_template_checkpoints @relation(fields: [checkpoint_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                   users?                  @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  qc_inspections          qc_inspections          @relation(fields: [inspection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([inspection_id, checkpoint_id], map: "unique_inspection_checkpoint")
  @@index([checkpoint_id], map: "idx_qc_checkpoint_results_checkpoint")
  @@index([checkpoint_id], map: "idx_qc_checkpoint_results_checkpoint_id")
  @@index([created_at], map: "idx_qc_checkpoint_results_created_at")
  @@index([created_by], map: "idx_qc_checkpoint_results_created_by")
  @@index([inspection_id], map: "idx_qc_checkpoint_results_inspection")
  @@index([inspection_id], map: "idx_qc_checkpoint_results_inspection_id")
  @@index([status], map: "idx_qc_checkpoint_results_status")
  @@index([updated_at], map: "idx_qc_checkpoint_results_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_checkpoints {
  id               String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  qc_inspection_id String                    @db.Uuid
  checkpoint_name  String                    @db.VarChar(255)
  status           qc_checkpoint_status_enum @default(pending)
  notes            String?
  inspector_id     String?                   @db.Uuid
  completed_at     DateTime?                 @db.Timestamptz(6)
  created_at       DateTime?                 @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?                 @default(now()) @db.Timestamptz(6)
  qc_inspections   qc_inspections            @relation(fields: [qc_inspection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_qc_checkpoints_created_at")
  @@index([qc_inspection_id], map: "idx_qc_checkpoints_inspection_id")
  @@index([qc_inspection_id], map: "idx_qc_checkpoints_qc_inspection_id")
  @@index([status], map: "idx_qc_checkpoints_status")
  @@index([updated_at], map: "idx_qc_checkpoints_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_defects {
  id                String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  qc_inspection_id  String               @db.Uuid
  defect_type       String               @db.VarChar(100)
  severity          defect_severity_enum
  description       String?
  location          String?              @db.VarChar(255)
  action_required   String?
  resolved_at       DateTime?            @db.Timestamptz(6)
  created_at        DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?            @default(now()) @db.Timestamptz(6)
  qc_inspections    qc_inspections       @relation(fields: [qc_inspection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_issue_comments qc_issue_comments[]
  qc_photos         qc_photos[]

  @@index([created_at], map: "idx_qc_defects_created_at")
  @@index([qc_inspection_id], map: "idx_qc_defects_qc_inspection_id")
  @@index([updated_at], map: "idx_qc_defects_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_inspections {
  id                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id                String                  @db.Uuid
  order_item_id           String?                 @db.Uuid
  production_item_id      String?                 @db.Uuid
  batch_id                String?                 @db.VarChar(50)
  qc_stage                qc_stage_enum
  status                  qc_status_enum          @default(pending)
  assigned_inspector_id   String?                 @db.Uuid
  priority                priority_enum           @default(normal)
  defects_found           Int                     @default(0)
  started_at              DateTime?               @db.Timestamptz(6)
  due_date                DateTime?               @db.Timestamptz(6)
  completed_at            DateTime?               @db.Timestamptz(6)
  notes                   String?
  created_at              DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime?               @default(now()) @db.Timestamptz(6)
  prototype_production_id String?                 @db.Uuid
  rework_count            Int?                    @default(0)
  idempotency_key         String?                 @unique @db.Uuid
  parent_inspection_id    String?                 @db.Uuid
  packing_jobs            packing_jobs[]
  qc_checkpoint_results   qc_checkpoint_results[]
  qc_checkpoints          qc_checkpoints[]
  qc_defects              qc_defects[]
  orders                  orders                  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order_items             order_items?            @relation(fields: [order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_inspections          qc_inspections?         @relation("qc_inspectionsToqc_inspections", fields: [parent_inspection_id], references: [id], onUpdate: NoAction)
  other_qc_inspections    qc_inspections[]        @relation("qc_inspectionsToqc_inspections")
  production_items        production_items?       @relation(fields: [production_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  prototype_production    prototype_production?   @relation(fields: [prototype_production_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_photos               qc_photos[]
  qc_section_results      qc_section_results[]

  @@index([created_at], map: "idx_qc_inspections_created_at")
  @@index([idempotency_key], map: "idx_qc_inspections_idempotency")
  @@index([assigned_inspector_id, status, created_at], map: "idx_qc_inspections_inspector_status")
  @@index([production_item_id, status, created_at], map: "idx_qc_inspections_item_status")
  @@index([order_id], map: "idx_qc_inspections_order_id")
  @@index([order_item_id], map: "idx_qc_inspections_order_item_id")
  @@index([production_item_id], map: "idx_qc_inspections_production_item_id")
  @@index([prototype_production_id], map: "idx_qc_inspections_prototype_production_id")
  @@index([prototype_production_id, status, created_at], map: "idx_qc_inspections_prototype_status")
  @@index([parent_inspection_id], map: "idx_qc_inspections_rework")
  @@index([status], map: "idx_qc_inspections_status")
  @@index([status, created_at], map: "idx_qc_inspections_status_created")
  @@index([updated_at], map: "idx_qc_inspections_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_issue_comments {
  id                  String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  issue_id            String     @db.Uuid
  comment_text        String
  author_id           String     @db.Uuid
  author_role         String
  voice_note_url      String?
  voice_note_duration Int?
  created_at          DateTime   @default(now()) @db.Timestamptz(6)
  updated_at          DateTime   @default(now()) @db.Timestamptz(6)
  users               users      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  qc_defects          qc_defects @relation(fields: [issue_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([author_id], map: "idx_qc_issue_comments_author")
  @@index([author_id], map: "idx_qc_issue_comments_author_id")
  @@index([created_at], map: "idx_qc_issue_comments_created_at")
  @@index([issue_id], map: "idx_qc_issue_comments_issue")
  @@index([issue_id], map: "idx_qc_issue_comments_issue_id")
  @@index([updated_at], map: "idx_qc_issue_comments_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_photos {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  qc_inspection_id   String?         @db.Uuid
  qc_defect_id       String?         @db.Uuid
  photo_url          String          @db.VarChar(500)
  caption            String?
  uploaded_by        String?         @db.Uuid
  created_at         DateTime?       @default(now()) @db.Timestamptz(6)
  device_timestamp   DateTime?       @db.Timestamptz(6)
  thumbnail_url      String?
  upload_status      String?         @default("pending")
  upload_retry_count Int?            @default(0)
  file_size_bytes    BigInt?
  mime_type          String?
  device_info        Json?
  qc_defects         qc_defects?     @relation(fields: [qc_defect_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_inspections     qc_inspections? @relation(fields: [qc_inspection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_qc_photos_created_at")
  @@index([qc_defect_id], map: "idx_qc_photos_qc_defect_id")
  @@index([qc_inspection_id], map: "idx_qc_photos_qc_inspection_id")
  @@index([upload_status], map: "idx_qc_photos_upload_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_section_results {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  inspection_id        String               @db.Uuid
  section_id           String               @db.Uuid
  status               String
  completed_at         DateTime?            @db.Timestamptz(6)
  created_at           DateTime             @default(now()) @db.Timestamptz(6)
  updated_at           DateTime             @default(now()) @db.Timestamptz(6)
  qc_inspections       qc_inspections       @relation(fields: [inspection_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  qc_template_sections qc_template_sections @relation(fields: [section_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([inspection_id, section_id], map: "unique_inspection_section")
  @@index([created_at], map: "idx_qc_section_results_created_at")
  @@index([inspection_id], map: "idx_qc_section_results_inspection")
  @@index([inspection_id], map: "idx_qc_section_results_inspection_id")
  @@index([section_id], map: "idx_qc_section_results_section_id")
  @@index([status], map: "idx_qc_section_results_status")
  @@index([updated_at], map: "idx_qc_section_results_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_template_checkpoints {
  id                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  section_id              String                  @db.Uuid
  checkpoint_code         String
  checkpoint_name         String
  checkpoint_prompt       String?
  severity_if_failed      String?
  photo_required_if_issue Boolean                 @default(true)
  min_photos_if_issue     Int?                    @default(1)
  conditional_logic       Json?
  display_order           Int                     @default(0)
  created_at              DateTime                @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                @default(now()) @db.Timestamptz(6)
  qc_checkpoint_results   qc_checkpoint_results[]
  qc_template_sections    qc_template_sections    @relation(fields: [section_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([section_id, checkpoint_code], map: "unique_section_checkpoint")
  @@index([checkpoint_code], map: "idx_qc_template_checkpoints_code")
  @@index([created_at], map: "idx_qc_template_checkpoints_created_at")
  @@index([section_id], map: "idx_qc_template_checkpoints_section")
  @@index([section_id], map: "idx_qc_template_checkpoints_section_id")
  @@index([updated_at], map: "idx_qc_template_checkpoints_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_template_sections {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  template_id             String                    @db.Uuid
  section_number          Int
  section_name            String
  section_description     String?
  conditional_logic       Json?
  display_order           Int                       @default(0)
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                  @default(now()) @db.Timestamptz(6)
  qc_section_results      qc_section_results[]
  qc_template_checkpoints qc_template_checkpoints[]
  qc_capture_templates    qc_capture_templates      @relation(fields: [template_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([template_id, section_number], map: "unique_template_section")
  @@index([created_at], map: "idx_qc_template_sections_created_at")
  @@index([template_id, display_order], map: "idx_qc_template_sections_display_order")
  @@index([section_number], map: "idx_qc_template_sections_number")
  @@index([template_id], map: "idx_qc_template_sections_template")
  @@index([template_id], map: "idx_qc_template_sections_template_id")
  @@index([updated_at], map: "idx_qc_template_sections_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model qc_testers {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_name    String
  primary_contact String?
  primary_email   String
  phone           String?
  address_line1   String?
  address_line2   String?
  city            String?
  state           String?
  postal_code     String?
  country         String?
  certifications  String[]
  specializations String[]
  status          String?   @default("active")
  portal_enabled  Boolean?  @default(true)
  portal_user_id  String?   @db.Uuid
  notes           String?
  tags            String[]
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  users           users?    @relation(fields: [portal_user_id], references: [id], onUpdate: NoAction)

  @@index([created_at], map: "idx_qc_testers_created_at")
  @@index([portal_user_id], map: "idx_qc_testers_portal_user_id")
  @@index([status], map: "idx_qc_testers_status")
  @@index([updated_at], map: "idx_qc_testers_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quality_inspections {
  id                         String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  manufacturer_project_id    String?                @db.Uuid
  inspection_type            String?
  inspection_date            DateTime?              @default(dbgenerated("CURRENT_DATE")) @db.Date
  inspector_name             String?
  overall_grade              String?
  dimensional_accuracy_score Int?
  finish_quality_score       Int?
  assembly_quality_score     Int?
  defects_found              Int?                   @default(0)
  defect_descriptions        String[]
  corrective_actions         String[]
  photos                     Json?                  @default("[]")
  passed                     Boolean?               @default(false)
  notes                      String?
  created_at                 DateTime?              @default(now()) @db.Timestamp(6)
  manufacturer_projects      manufacturer_projects? @relation(fields: [manufacturer_project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_quality_inspections_created_at")
  @@index([manufacturer_project_id], map: "idx_quality_inspections_manufacturer_project_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_auth {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  company_id           String    @unique @db.VarChar(50)
  access_token         String
  refresh_token        String
  token_expiry         DateTime  @db.Timestamptz(6)
  refresh_token_expiry DateTime  @db.Timestamptz(6)
  company_name         String?   @db.VarChar(255)
  is_active            Boolean?  @default(true)
  connected_by         String?   @db.Uuid
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  users                users?    @relation(fields: [connected_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([is_active], map: "idx_qb_auth_active")
  @@index([company_id], map: "idx_qb_auth_company")
  @@index([connected_by], map: "idx_quickbooks_auth_connected_by")
  @@index([created_at], map: "idx_quickbooks_auth_created_at")
  @@index([is_active], map: "idx_quickbooks_auth_is_active")
  @@index([updated_at], map: "idx_quickbooks_auth_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_connections {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String    @db.Uuid
  company_id       String
  company_name     String?
  access_token     String
  refresh_token    String
  token_expires_at DateTime? @db.Timestamptz(6)
  realm_id         String
  scope            String?
  is_active        Boolean?  @default(true)
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  users            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, company_id])
  @@index([company_id], map: "idx_quickbooks_connections_company_id")
  @@index([created_at], map: "idx_quickbooks_connections_created_at")
  @@index([is_active], map: "idx_quickbooks_connections_is_active")
  @@index([updated_at], map: "idx_quickbooks_connections_updated_at")
  @@index([user_id], map: "idx_quickbooks_connections_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_entity_mapping {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_type           String                  @db.VarChar(50)
  limn_id               String                  @db.Uuid
  quickbooks_id         String                  @db.VarChar(50)
  quickbooks_sync_token String?                 @db.VarChar(50)
  last_synced_at        DateTime?               @default(now()) @db.Timestamptz(6)
  sync_status           quickbooks_sync_status? @default(completed)
  created_at            DateTime?               @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?               @default(now()) @db.Timestamptz(6)

  @@unique([entity_type, limn_id])
  @@unique([entity_type, quickbooks_id])
  @@index([entity_type, limn_id], map: "idx_qb_mapping_limn")
  @@index([entity_type, quickbooks_id], map: "idx_qb_mapping_qb")
  @@index([created_at], map: "idx_quickbooks_entity_mapping_created_at")
  @@index([updated_at], map: "idx_quickbooks_entity_mapping_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_field_templates {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_type    String    @db.VarChar(50)
  template_name  String    @db.VarChar(100)
  field_mappings Json
  is_default     Boolean?  @default(false)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([entity_type, template_name])
  @@index([created_at], map: "idx_quickbooks_field_templates_created_at")
  @@index([updated_at], map: "idx_quickbooks_field_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_oauth_states {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  state      String    @unique
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  expires_at DateTime  @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_quickbooks_oauth_states_created_at")
  @@index([expires_at], map: "idx_quickbooks_oauth_states_expires_at")
  @@index([user_id], map: "idx_quickbooks_oauth_states_user_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_payment_methods {
  id                            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quickbooks_method_id          String                          @unique @db.VarChar(255)
  method_name                   String                          @db.VarChar(100)
  method_type                   String?                         @db.VarChar(50)
  is_active                     Boolean?                        @default(true)
  is_default                    Boolean?                        @default(false)
  processing_fee_percent        Decimal?                        @default(0) @db.Decimal(5, 2)
  processing_fee_fixed          Decimal?                        @default(0) @db.Decimal(10, 2)
  created_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  updated_at                    DateTime?                       @default(now()) @db.Timestamptz(6)
  quickbooks_payment_queue      quickbooks_payment_queue[]
  quickbooks_recurring_payments quickbooks_recurring_payments[]

  @@index([created_at], map: "idx_quickbooks_payment_methods_created_at")
  @@index([is_active], map: "idx_quickbooks_payment_methods_is_active")
  @@index([updated_at], map: "idx_quickbooks_payment_methods_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_payment_queue {
  id                         String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_id                 String?                     @db.Uuid
  customer_id                String?                     @db.Uuid
  amount                     Decimal                     @db.Decimal(10, 2)
  payment_method_id          String?                     @db.Uuid
  scheduled_date             DateTime?                   @db.Date
  status                     String?                     @default("pending") @db.VarChar(50)
  attempts                   Int?                        @default(0)
  last_attempt_at            DateTime?                   @db.Timestamptz(6)
  error_message              String?
  quickbooks_payment_id      String?                     @db.VarChar(255)
  quickbooks_transaction_id  String?                     @db.VarChar(255)
  metadata                   Json?                       @default("{}")
  created_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  processed_at               DateTime?                   @db.Timestamptz(6)
  customers                  customers?                  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoices                   invoices?                   @relation(fields: [invoice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quickbooks_payment_methods quickbooks_payment_methods? @relation(fields: [payment_method_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([status], map: "idx_qb_payment_queue_status")
  @@index([created_at], map: "idx_quickbooks_payment_queue_created_at")
  @@index([customer_id], map: "idx_quickbooks_payment_queue_customer_id")
  @@index([invoice_id], map: "idx_quickbooks_payment_queue_invoice_id")
  @@index([payment_method_id], map: "idx_quickbooks_payment_queue_payment_method_id")
  @@index([status], map: "idx_quickbooks_payment_queue_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_payment_reconciliation {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  payment_id            String?   @db.Uuid
  quickbooks_payment_id String?   @db.VarChar(255)
  quickbooks_deposit_id String?   @db.VarChar(255)
  reconciliation_date   DateTime? @db.Date
  bank_account          String?   @db.VarChar(100)
  expected_amount       Decimal?  @db.Decimal(10, 2)
  actual_amount         Decimal?  @db.Decimal(10, 2)
  difference            Decimal?  @default(dbgenerated("(actual_amount - expected_amount)")) @db.Decimal(10, 2)
  status                String?   @db.VarChar(50)
  notes                 String?
  reconciled_by         String?   @db.Uuid
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  payments              payments? @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                 users?    @relation(fields: [reconciled_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([status], map: "idx_qb_reconciliation_status")
  @@index([created_at], map: "idx_quickbooks_payment_reconciliation_created_at")
  @@index([payment_id], map: "idx_quickbooks_payment_reconciliation_payment_id")
  @@index([reconciled_by], map: "idx_quickbooks_payment_reconciliation_reconciled_by")
  @@index([status], map: "idx_quickbooks_payment_reconciliation_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_recurring_payments {
  id                         String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id                String?                     @db.Uuid
  payment_method_id          String?                     @db.Uuid
  amount                     Decimal                     @db.Decimal(10, 2)
  frequency                  String?                     @db.VarChar(50)
  start_date                 DateTime                    @db.Date
  end_date                   DateTime?                   @db.Date
  next_payment_date          DateTime?                   @db.Date
  is_active                  Boolean?                    @default(true)
  last_payment_id            String?                     @db.Uuid
  total_payments_made        Int?                        @default(0)
  total_amount_collected     Decimal?                    @default(0) @db.Decimal(10, 2)
  created_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                   @default(now()) @db.Timestamptz(6)
  customers                  customers?                  @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments                   payments?                   @relation(fields: [last_payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  quickbooks_payment_methods quickbooks_payment_methods? @relation(fields: [payment_method_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_quickbooks_recurring_payments_created_at")
  @@index([customer_id], map: "idx_quickbooks_recurring_payments_customer_id")
  @@index([is_active], map: "idx_quickbooks_recurring_payments_is_active")
  @@index([last_payment_id], map: "idx_quickbooks_recurring_payments_last_payment_id")
  @@index([payment_method_id], map: "idx_quickbooks_recurring_payments_payment_method_id")
  @@index([updated_at], map: "idx_quickbooks_recurring_payments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_sync_config {
  id                     String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  entity_type            String          @unique @db.VarChar(50)
  sync_enabled           Boolean?        @default(true)
  sync_direction         sync_direction? @default(to_quickbooks)
  last_sync_at           DateTime?       @db.Timestamptz(6)
  sync_frequency_minutes Int?            @default(60)
  field_mappings         Json?           @default("{}")
  filters                Json?           @default("{}")
  created_at             DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?       @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_quickbooks_sync_config_created_at")
  @@index([updated_at], map: "idx_quickbooks_sync_config_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_sync_log {
  id             String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sync_batch_id  String?                @db.Uuid
  sync_type      String                 @db.VarChar(50)
  sync_direction sync_direction
  entity_id      String?                @db.Uuid
  quickbooks_id  String?                @db.VarChar(50)
  action         String                 @db.VarChar(20)
  status         quickbooks_sync_status
  request_data   Json?
  response_data  Json?
  error_message  String?
  error_code     String?                @db.VarChar(50)
  started_at     DateTime?              @default(now()) @db.Timestamptz(6)
  completed_at   DateTime?              @db.Timestamptz(6)
  created_by     String?                @db.Uuid
  users          users?                 @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([sync_batch_id], map: "idx_qb_sync_log_batch")
  @@index([entity_id], map: "idx_qb_sync_log_entity")
  @@index([created_by], map: "idx_quickbooks_sync_log_created_by")
  @@index([status], map: "idx_quickbooks_sync_log_status")
  @@index([sync_type], map: "idx_quickbooks_sync_log_sync_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model quickbooks_webhooks {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_type        String    @db.VarChar(100)
  realm_id          String    @db.VarChar(50)
  entity_name       String?   @db.VarChar(50)
  entity_id         String?   @db.VarChar(50)
  operation         String?   @db.VarChar(20)
  last_updated_time DateTime? @db.Timestamptz(6)
  webhook_payload   Json
  processed         Boolean?  @default(false)
  processed_at      DateTime? @db.Timestamptz(6)
  error_message     String?
  received_at       DateTime? @default(now()) @db.Timestamptz(6)

  @@index([processed], map: "idx_qb_webhooks_processed")
  @@index([realm_id], map: "idx_qb_webhooks_realm")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role_definitions {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role_key              String                  @unique @db.VarChar(50)
  role_name             String                  @db.VarChar(100)
  description           String?
  is_system             Boolean                 @default(true)
  is_active             Boolean                 @default(true)
  hierarchy_level       Int                     @default(0)
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                @default(now()) @db.Timestamptz(6)
  permission_conditions permission_conditions[]
  role_permissions      role_permissions[]

  @@index([is_active], map: "idx_role_definitions_active")
  @@index([hierarchy_level], map: "idx_role_definitions_hierarchy")
  @@index([role_key], map: "idx_role_definitions_key")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role_permissions {
  id                     String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role_id                String                 @db.Uuid
  permission_id          String                 @db.Uuid
  is_active              Boolean                @default(true)
  created_at             DateTime               @default(now()) @db.Timestamptz(6)
  updated_at             DateTime               @default(now()) @db.Timestamptz(6)
  permission_definitions permission_definitions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  role_definitions       role_definitions       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([role_id, permission_id], map: "unique_role_permission")
  @@index([is_active], map: "idx_role_permissions_active")
  @@index([permission_id], map: "idx_role_permissions_permission")
  @@index([role_id], map: "idx_role_permissions_role")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saved_searches {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String?   @db.Uuid
  search_name     String?   @db.VarChar(255)
  entity_type     String?   @db.VarChar(50)
  search_criteria Json
  sort_config     Json?
  is_default      Boolean?  @default(false)
  is_shared       Boolean?  @default(false)
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  users           users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_saved_searches_created_at")
  @@index([user_id], map: "idx_saved_searches_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model security_audit_log {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  event_time    DateTime? @default(now()) @db.Timestamptz(6)
  user_id       String?   @db.Uuid
  user_email    String?
  action        String
  table_name    String?
  record_id     String?
  old_data      Json?
  new_data      Json?
  ip_address    String?   @db.Inet
  user_agent    String?
  success       Boolean?  @default(true)
  error_message String?

  @@index([action], map: "idx_audit_log_action")
  @@index([event_time(sort: Desc)], map: "idx_audit_log_time")
  @@index([user_id], map: "idx_audit_log_user")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model seko_config {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  profile_id  String
  api_key     String?
  api_secret  String?
  environment String?   @default("qa")
  base_url    String?   @default("https://qawebapi.myseko.com")
  is_active   Boolean?  @default(true)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_seko_config_created_at")
  @@index([is_active], map: "idx_seko_config_is_active")
  @@index([updated_at], map: "idx_seko_config_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model session_tracking {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id       String    @db.Uuid
  user_id          String    @db.Uuid
  ip_address       String    @db.Inet
  user_agent       String?
  geo_location     Json?
  is_suspicious    Boolean?  @default(false)
  login_at         DateTime  @default(now()) @db.Timestamptz(6)
  last_activity_at DateTime  @default(now()) @db.Timestamptz(6)
  logout_at        DateTime? @db.Timestamptz(6)
  session_metadata Json?
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  updated_at       DateTime  @default(now()) @db.Timestamptz(6)

  @@index([ip_address], map: "idx_session_tracking_ip")
  @@index([last_activity_at], map: "idx_session_tracking_last_activity")
  @@index([session_id], map: "idx_session_tracking_session")
  @@index([user_id], map: "idx_session_tracking_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model share_link_views {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  share_link_id        String               @db.Uuid
  viewer_ip            String?              @db.VarChar(45)
  viewer_user_agent    String?
  viewer_country       String?              @db.VarChar(2)
  viewer_city          String?              @db.VarChar(100)
  referrer             String?
  viewed_at            DateTime             @default(now()) @db.Timestamptz(6)
  session_id           String?              @db.Uuid
  flipbook_share_links flipbook_share_links @relation(fields: [share_link_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_share_link_views_link")

  @@index([share_link_id], map: "idx_share_views_link")
  @@index([viewed_at], map: "idx_share_views_timestamp")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shipments {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id                 String?                    @db.Uuid
  carrier_id               String?                    @db.Uuid
  tracking_number          String?
  status                   String?                    @default("pending")
  ship_from                Json?                      @default("{}")
  ship_to                  Json?                      @default("{}")
  shipped_date             DateTime?                  @db.Timestamptz(6)
  estimated_delivery       DateTime?                  @db.Date
  actual_delivery          DateTime?                  @db.Timestamptz(6)
  package_count            Int?                       @default(1)
  weight                   Decimal?                   @db.Decimal(10, 2)
  dimensions               Json?                      @default("{}")
  shipping_cost            Decimal?                   @db.Decimal(10, 2)
  insurance_amount         Decimal?                   @db.Decimal(10, 2)
  tracking_events          Json?                      @default("[]")
  last_tracking_update     DateTime?                  @db.Timestamptz(6)
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  seko_shipment_id         String?                    @db.VarChar(100)
  last_seko_sync           DateTime?                  @db.Timestamptz(6)
  priority                 String?                    @db.VarChar(20)
  packing_job_id           String?                    @db.Uuid
  carrier                  String?                    @db.VarChar(100)
  created_by               String?                    @db.Uuid
  destination_address      Json?                      @default("{}")
  label_url                String?
  origin_address           Json?                      @default("{}")
  packages                 Json?                      @default("[]")
  project_id               String?                    @db.Uuid
  service_level            String?                    @db.VarChar(100)
  shipment_number          String?                    @db.VarChar(50)
  special_instructions     String?
  delivery_addresses       delivery_addresses[]
  ordered_items_production ordered_items_production[]
  shipping_carriers        shipping_carriers?         @relation(fields: [carrier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                    users?                     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  packing_jobs             packing_jobs?              @relation(fields: [packing_job_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects                 projects?                  @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shipping_events          shipping_events[]

  @@index([carrier_id], map: "idx_shipments_carrier_id")
  @@index([created_at], map: "idx_shipments_created_at")
  @@index([created_by], map: "idx_shipments_created_by")
  @@index([order_id], map: "idx_shipments_order_id")
  @@index([packing_job_id], map: "idx_shipments_packing_job_id")
  @@index([project_id], map: "idx_shipments_project_id")
  @@index([status], map: "idx_shipments_status")
  @@index([updated_at], map: "idx_shipments_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shipping_carriers {
  id                    String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String      @unique
  code                  String?     @unique
  tracking_url_template String?
  logo_url              String?
  is_active             Boolean?    @default(true)
  created_at            DateTime?   @default(now()) @db.Timestamptz(6)
  shipments             shipments[]

  @@index([created_at], map: "idx_shipping_carriers_created_at")
  @@index([is_active], map: "idx_shipping_carriers_is_active")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shipping_events {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shipment_id       String    @db.Uuid
  event_type        String    @db.VarChar(50)
  event_description String?
  event_location    String?   @db.VarChar(255)
  event_timestamp   DateTime  @db.Timestamptz(6)
  seko_event_id     String?   @db.VarChar(100)
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  shipments         shipments @relation(fields: [shipment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_shipping_events_created_at")
  @@index([shipment_id], map: "idx_shipping_events_shipment_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shipping_quotes {
  id                  String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id            String?            @db.Uuid
  ship_from           Json
  ship_to             Json
  packages            Json
  carrier_quotes      Json?              @default("[]")
  selected_quote      Json?
  quote_expires_at    DateTime?          @db.Timestamp(6)
  seko_quote_response Json?
  created_at          DateTime?          @default(now()) @db.Timestamp(6)
  status              String?            @default("pending") @db.VarChar(50)
  customer_id         String?            @db.Uuid
  quote_number        String?            @db.VarChar(50)
  customer_name       String?            @db.VarChar(255)
  service_type        String?            @default("ground") @db.VarChar(50)
  quoted_cost         Decimal?           @default(0) @db.Decimal(10, 2)
  destination_address Json?              @default("{}")
  origin_address      Json?              @default("{}")
  production_order_id String?            @db.Uuid
  quotes              Json?              @default("[]")
  requested_at        DateTime?          @default(now()) @db.Timestamp(6)
  requested_by        String?            @db.Uuid
  customers           customers?         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  production_orders   production_orders? @relation(fields: [production_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users               users?             @relation(fields: [requested_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_shipping_quotes_created_at")
  @@index([customer_id], map: "idx_shipping_quotes_customer_id")
  @@index([order_id], map: "idx_shipping_quotes_order_id")
  @@index([production_order_id], map: "idx_shipping_quotes_production_order_id")
  @@index([requested_by], map: "idx_shipping_quotes_requested_by")
  @@index([status], map: "idx_shipping_quotes_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shipping_tracking {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id           String    @db.Uuid
  carrier            String?
  tracking_number    String?
  status             String?   @default("pending")
  current_location   String?
  estimated_delivery DateTime? @db.Date
  actual_delivery    DateTime? @db.Timestamptz(6)
  tracking_events    Json?     @default("[]")
  last_api_update    DateTime? @db.Timestamptz(6)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_shipping_tracking_created_at")
  @@index([order_id], map: "idx_shipping_tracking_order_id")
  @@index([status], map: "idx_shipping_tracking_status")
  @@index([updated_at], map: "idx_shipping_tracking_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shop_drawing_approvals {
  id                    String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  drawing_version_id    String                @db.Uuid
  approver_id           String                @db.Uuid
  approver_role         String
  decision              String
  comments              String?
  is_conditional        Boolean               @default(false)
  conditions            String?
  approved_at           DateTime              @default(now()) @db.Timestamptz(6)
  users                 users                 @relation(fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shop_drawing_versions shop_drawing_versions @relation(fields: [drawing_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([approver_id], map: "idx_shop_drawing_approvals_approver_id")
  @@index([decision], map: "idx_shop_drawing_approvals_decision")
  @@index([drawing_version_id], map: "idx_shop_drawing_approvals_drawing_version_id")
  @@index([drawing_version_id], map: "idx_shop_drawing_approvals_version_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shop_drawing_comments {
  id                                             String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  drawing_version_id                             String                  @db.Uuid
  comment_text                                   String
  comment_type                                   String
  pdf_page_number                                Int?
  pdf_x_coordinate                               Decimal?                @db.Decimal(10, 2)
  pdf_y_coordinate                               Decimal?                @db.Decimal(10, 2)
  annotation_data                                Json?
  author_id                                      String                  @db.Uuid
  author_role                                    String
  status                                         String                  @default("open")
  resolved_by                                    String?                 @db.Uuid
  resolved_at                                    DateTime?               @db.Timestamptz(6)
  resolution_notes                               String?
  parent_comment_id                              String?                 @db.Uuid
  created_at                                     DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                                     DateTime                @default(now()) @db.Timestamptz(6)
  users_shop_drawing_comments_author_idTousers   users                   @relation("shop_drawing_comments_author_idTousers", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shop_drawing_versions                          shop_drawing_versions   @relation(fields: [drawing_version_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  shop_drawing_comments                          shop_drawing_comments?  @relation("shop_drawing_commentsToshop_drawing_comments", fields: [parent_comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_shop_drawing_comments                    shop_drawing_comments[] @relation("shop_drawing_commentsToshop_drawing_comments")
  users_shop_drawing_comments_resolved_byTousers users?                  @relation("shop_drawing_comments_resolved_byTousers", fields: [resolved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([author_id], map: "idx_shop_drawing_comments_author_id")
  @@index([created_at], map: "idx_shop_drawing_comments_created_at")
  @@index([drawing_version_id], map: "idx_shop_drawing_comments_drawing_version_id")
  @@index([parent_comment_id], map: "idx_shop_drawing_comments_parent_id")
  @@index([resolved_by], map: "idx_shop_drawing_comments_resolved_by")
  @@index([status], map: "idx_shop_drawing_comments_status")
  @@index([updated_at], map: "idx_shop_drawing_comments_updated_at")
  @@index([drawing_version_id], map: "idx_shop_drawing_comments_version_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shop_drawing_versions {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_drawing_id        String                   @db.Uuid
  version_number         Int
  file_name              String
  file_url               String
  file_size              BigInt
  mime_type              String                   @default("application/pdf")
  uploaded_by            String                   @db.Uuid
  uploaded_by_role       String
  upload_notes           String?
  status                 String                   @default("current")
  review_started_at      DateTime?                @db.Timestamptz(6)
  review_completed_at    DateTime?                @db.Timestamptz(6)
  uploaded_at            DateTime                 @default(now()) @db.Timestamptz(6)
  shop_drawing_approvals shop_drawing_approvals[]
  shop_drawing_comments  shop_drawing_comments[]
  shop_drawings          shop_drawings            @relation(fields: [shop_drawing_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                  users                    @relation(fields: [uploaded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([shop_drawing_id, version_number])
  @@index([shop_drawing_id], map: "idx_shop_drawing_versions_drawing_id")
  @@index([shop_drawing_id], map: "idx_shop_drawing_versions_shop_drawing_id")
  @@index([status], map: "idx_shop_drawing_versions_status")
  @@index([uploaded_by], map: "idx_shop_drawing_versions_uploaded_by")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model shop_drawings {
  id                                              String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  production_order_id                             String                  @db.Uuid
  factory_id                                      String?                 @db.Uuid
  drawing_number                                  String                  @unique
  drawing_name                                    String
  drawing_type                                    String?
  current_version                                 Int                     @default(1)
  status                                          String                  @default("in_review")
  limn_approved_by                                String?                 @db.Uuid
  limn_approved_at                                DateTime?               @db.Timestamptz(6)
  designer_approved_by                            String?                 @db.Uuid
  designer_approved_at                            DateTime?               @db.Timestamptz(6)
  final_approved_at                               DateTime?               @db.Timestamptz(6)
  rejected_by                                     String?                 @db.Uuid
  rejected_at                                     DateTime?               @db.Timestamptz(6)
  rejection_reason                                String?
  notes                                           String?
  tags                                            String[]                @default([])
  created_by                                      String                  @db.Uuid
  created_at                                      DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                                      DateTime                @default(now()) @db.Timestamptz(6)
  prototype_production_id                         String?                 @db.Uuid
  shop_drawing_versions                           shop_drawing_versions[]
  users_shop_drawings_created_byTousers           users                   @relation("shop_drawings_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_shop_drawings_designer_approved_byTousers users?                  @relation("shop_drawings_designer_approved_byTousers", fields: [designer_approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  partners                                        partners?               @relation(fields: [factory_id], references: [id], onUpdate: NoAction)
  users_shop_drawings_limn_approved_byTousers     users?                  @relation("shop_drawings_limn_approved_byTousers", fields: [limn_approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  production_orders                               production_orders       @relation(fields: [production_order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  prototype_production                            prototype_production?   @relation(fields: [prototype_production_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_shop_drawings_created_at")
  @@index([created_by], map: "idx_shop_drawings_created_by")
  @@index([designer_approved_by], map: "idx_shop_drawings_designer_approved_by")
  @@index([drawing_number], map: "idx_shop_drawings_drawing_number")
  @@index([factory_id], map: "idx_shop_drawings_factory_id")
  @@index([limn_approved_by], map: "idx_shop_drawings_limn_approved_by")
  @@index([production_order_id], map: "idx_shop_drawings_production_order_id")
  @@index([prototype_production_id], map: "idx_shop_drawings_prototype_production_id")
  @@index([status], map: "idx_shop_drawings_status")
  @@index([updated_at], map: "idx_shop_drawings_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_analytics {
  id                   String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date                 DateTime       @db.Date
  provider_id          String?        @db.Uuid
  total_sent           Int?           @default(0)
  total_delivered      Int?           @default(0)
  total_failed         Int?           @default(0)
  total_cost           Decimal?       @default(0) @db.Decimal(10, 2)
  avg_delivery_time_ms Int?
  success_rate         Decimal?       @db.Decimal(5, 2)
  peak_hour            Int?
  peak_hour_volume     Int?
  created_at           DateTime?      @default(now()) @db.Timestamptz(6)
  sms_providers        sms_providers? @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([date, provider_id])
  @@index([created_at], map: "idx_sms_analytics_created_at")
  @@index([date], map: "idx_sms_analytics_date")
  @@index([provider_id], map: "idx_sms_analytics_provider_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_campaigns {
  id                                     String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_name                          String         @db.VarChar(255)
  campaign_type                          String?        @db.VarChar(50)
  template_id                            String?        @db.Uuid
  target_audience                        Json?          @default("{}")
  scheduled_date                         DateTime?      @db.Timestamptz(6)
  status                                 String?        @default("draft") @db.VarChar(50)
  total_recipients                       Int?           @default(0)
  sent_count                             Int?           @default(0)
  delivered_count                        Int?           @default(0)
  failed_count                           Int?           @default(0)
  opt_out_count                          Int?           @default(0)
  created_by                             String?        @db.Uuid
  approved_by                            String?        @db.Uuid
  approved_at                            DateTime?      @db.Timestamptz(6)
  created_at                             DateTime?      @default(now()) @db.Timestamptz(6)
  completed_at                           DateTime?      @db.Timestamptz(6)
  updated_at                             DateTime?      @default(now()) @db.Timestamptz(6)
  users_sms_campaigns_approved_byTousers users?         @relation("sms_campaigns_approved_byTousers", fields: [approved_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_sms_campaigns_created_byTousers  users?         @relation("sms_campaigns_created_byTousers", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sms_templates                          sms_templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sms_tracking                           sms_tracking[]

  @@index([approved_by], map: "idx_sms_campaigns_approved_by")
  @@index([created_at], map: "idx_sms_campaigns_created_at")
  @@index([created_by], map: "idx_sms_campaigns_created_by")
  @@index([status], map: "idx_sms_campaigns_status")
  @@index([template_id], map: "idx_sms_campaigns_template_id")
  @@index([updated_at], map: "idx_sms_campaigns_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_delivery_logs {
  id                      String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sms_log_id              String?        @db.Uuid
  provider_id             String?        @db.Uuid
  delivery_status         String?        @db.VarChar(50)
  provider_message_id     String?        @db.VarChar(255)
  provider_status_code    String?        @db.VarChar(50)
  provider_status_message String?
  delivery_timestamp      DateTime?      @db.Timestamptz(6)
  attempt_number          Int?           @default(1)
  cost                    Decimal?       @db.Decimal(10, 4)
  carrier_info            Json?
  created_at              DateTime?      @default(now()) @db.Timestamptz(6)
  sms_providers           sms_providers? @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sms_logs                sms_logs?      @relation(fields: [sms_log_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_sms_delivery_logs_created_at")
  @@index([provider_id], map: "idx_sms_delivery_logs_provider")
  @@index([provider_id], map: "idx_sms_delivery_logs_provider_id")
  @@index([sms_log_id], map: "idx_sms_delivery_logs_sms_log_id")
  @@index([delivery_status], map: "idx_sms_delivery_logs_status")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_invitations {
  id                    String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  portal_user_id        String                @db.Uuid
  phone_number          String                @db.VarChar(20)
  message_content       String
  provider              String?               @default("twilio") @db.VarChar(50)
  provider_message_id   String?               @db.VarChar(255)
  status                String?               @default("pending") @db.VarChar(20)
  sent_at               DateTime?             @db.Timestamptz(6)
  delivered_at          DateTime?             @db.Timestamptz(6)
  failed_reason         String?
  cost_cents            Int?                  @default(0)
  created_at            DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at            DateTime?             @default(now()) @db.Timestamptz(6)
  customer_portal_users customer_portal_users @relation(fields: [portal_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_sms_invitations_created_at")
  @@index([phone_number], map: "idx_sms_invitations_phone")
  @@index([portal_user_id], map: "idx_sms_invitations_portal_user")
  @@index([portal_user_id], map: "idx_sms_invitations_portal_user_id")
  @@index([sent_at], map: "idx_sms_invitations_sent_at")
  @@index([status], map: "idx_sms_invitations_status")
  @@index([updated_at], map: "idx_sms_invitations_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_logs {
  id                  String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  recipient_phone     String              @db.VarChar(20)
  message             String
  template_id         String?             @db.Uuid
  status              String?             @db.VarChar(20)
  provider            String?             @db.VarChar(50)
  provider_message_id String?             @db.VarChar(255)
  error_message       String?
  sent_at             DateTime?           @db.Timestamptz(6)
  delivered_at        DateTime?           @db.Timestamptz(6)
  created_at          DateTime?           @default(now()) @db.Timestamptz(6)
  sms_delivery_logs   sms_delivery_logs[]
  sms_templates       sms_templates?      @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_sms_logs_created_at")
  @@index([recipient_phone], map: "idx_sms_logs_recipient_phone")
  @@index([status], map: "idx_sms_logs_status")
  @@index([template_id], map: "idx_sms_logs_template_id")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_opt_outs {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phone_number     String     @unique @db.VarChar(20)
  customer_id      String?    @db.Uuid
  opt_out_date     DateTime?  @default(now()) @db.Timestamptz(6)
  opt_out_reason   String?
  opt_out_method   String?    @db.VarChar(50)
  can_resubscribe  Boolean?   @default(true)
  resubscribe_date DateTime?  @db.Timestamptz(6)
  created_at       DateTime?  @default(now()) @db.Timestamptz(6)
  customers        customers? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_sms_opt_outs_created_at")
  @@index([customer_id], map: "idx_sms_opt_outs_customer_id")
  @@index([phone_number], map: "idx_sms_opt_outs_phone")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_providers {
  id                   String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider_name        String              @unique @db.VarChar(50)
  provider_type        String?             @db.VarChar(50)
  api_endpoint         String?
  api_key_encrypted    String?
  api_secret_encrypted String?
  from_number          String?             @db.VarChar(20)
  is_active            Boolean?            @default(true)
  is_primary           Boolean?            @default(false)
  priority_order       Int?                @default(1)
  success_rate         Decimal?            @default(100) @db.Decimal(5, 2)
  avg_delivery_time_ms Int?
  cost_per_sms         Decimal?            @default(0.01) @db.Decimal(10, 4)
  monthly_limit        Int?
  current_month_usage  Int?                @default(0)
  created_at           DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?           @default(now()) @db.Timestamptz(6)
  sms_analytics        sms_analytics[]
  sms_delivery_logs    sms_delivery_logs[]

  @@index([created_at], map: "idx_sms_providers_created_at")
  @@index([is_active], map: "idx_sms_providers_is_active")
  @@index([updated_at], map: "idx_sms_providers_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_scheduled_jobs {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_type        String?        @db.VarChar(50)
  recipient_phone String?        @db.VarChar(20)
  recipient_list  Json?          @default("[]")
  template_id     String?        @db.Uuid
  message_content String?
  variables       Json?          @default("{}")
  scheduled_time  DateTime       @db.Timestamptz(6)
  time_zone       String?        @default("UTC") @db.VarChar(50)
  status          String?        @default("pending") @db.VarChar(50)
  priority        Int?           @default(5)
  retry_count     Int?           @default(0)
  max_retries     Int?           @default(3)
  created_by      String?        @db.Uuid
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  processed_at    DateTime?      @db.Timestamptz(6)
  users           users?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sms_templates   sms_templates? @relation(fields: [template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_sms_scheduled_jobs_created_at")
  @@index([created_by], map: "idx_sms_scheduled_jobs_created_by")
  @@index([status], map: "idx_sms_scheduled_jobs_status")
  @@index([template_id], map: "idx_sms_scheduled_jobs_template_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_templates {
  id                 String               @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name               String               @db.VarChar(255)
  template_key       String               @unique @db.VarChar(100)
  message            String
  variables          String[]
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  sms_campaigns      sms_campaigns[]
  sms_logs           sms_logs[]
  sms_scheduled_jobs sms_scheduled_jobs[]

  @@index([created_at], map: "idx_sms_templates_created_at")
  @@index([is_active], map: "idx_sms_templates_is_active")
  @@index([updated_at], map: "idx_sms_templates_updated_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_tracking {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaign_id     String?        @db.Uuid
  recipient_phone String
  event_type      String?
  event_timestamp DateTime?      @default(now()) @db.Timestamptz(6)
  error_message   String?
  event_data      Json?          @default("{}")
  created_at      DateTime?      @default(now()) @db.Timestamptz(6)
  sms_campaigns   sms_campaigns? @relation(fields: [campaign_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([campaign_id], map: "idx_sms_tracking_campaign_id")
  @@index([created_at], map: "idx_sms_tracking_created_at")
  @@index([event_type], map: "idx_sms_tracking_event_type")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sms_usage {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phone_number  String    @db.VarChar(20)
  date          DateTime  @db.Date
  message_count Int?      @default(0)
  total_cost    Decimal?  @default(0.0) @db.Decimal(10, 4)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([phone_number, date])
  @@index([created_at], map: "idx_sms_usage_created_at")
  @@index([phone_number, date], map: "idx_sms_usage_phone_date")
  @@index([updated_at], map: "idx_sms_usage_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sso_configuration {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  provider_name        String    @default("google_workspace")
  saml_metadata_url    String?
  saml_entity_id       String?
  saml_sso_url         String?
  saml_x509_cert       String?
  attribute_mapping    Json?     @default("{\"name\": \"name\", \"email\": \"email\", \"job_title\": \"jobTitle\", \"department\": \"department\"}")
  domain_restriction   String?   @default("limn.us.com")
  auto_provision_users Boolean?  @default(true)
  default_user_type    String?   @default("employee")
  is_active            Boolean?  @default(true)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_sso_configuration_created_at")
  @@index([is_active], map: "idx_sso_configuration_is_active")
  @@index([updated_at], map: "idx_sso_configuration_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sso_group_role_mappings {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  google_group_email String    @unique
  user_type          String
  permissions        Json?
  priority           Int?      @default(0)
  is_active          Boolean?  @default(true)
  created_at         DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_sso_group_role_mappings_created_at")
  @@index([is_active], map: "idx_sso_group_role_mappings_is_active")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sso_login_audit {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?   @db.Uuid
  google_email  String?
  login_time    DateTime? @default(now()) @db.Timestamptz(6)
  login_type    String?
  ip_address    String?   @db.Inet
  user_agent    String?
  success       Boolean?
  error_message String?
  session_id    String?
  metadata      Json?
  users         users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([login_time(sort: Desc)], map: "idx_sso_login_audit_time")
  @@index([user_id], map: "idx_sso_login_audit_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sso_user_mappings {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String?   @db.Uuid
  google_workspace_id String?   @unique
  google_email        String?   @unique
  primary_email       String?
  department          String?
  job_title           String?
  manager_email       String?
  google_groups       String[]
  assigned_user_type  String?
  is_active           Boolean?  @default(true)
  last_login          DateTime? @db.Timestamptz(6)
  first_login         DateTime? @default(now()) @db.Timestamptz(6)
  metadata            Json?
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  users               users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_sso_user_mappings_created_at")
  @@index([google_email], map: "idx_sso_user_mappings_email")
  @@index([is_active], map: "idx_sso_user_mappings_is_active")
  @@index([updated_at], map: "idx_sso_user_mappings_updated_at")
  @@index([user_id], map: "idx_sso_user_mappings_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model status_change_log {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  table_name    String    @db.VarChar(50)
  record_id     String    @db.Uuid
  field_name    String    @db.VarChar(50)
  old_value     String?   @db.VarChar(100)
  new_value     String    @db.VarChar(100)
  changed_by    String?   @db.Uuid
  change_reason String?
  automated     Boolean?  @default(false)
  created_at    DateTime? @default(now()) @db.Timestamptz(6)

  @@index([created_at], map: "idx_status_change_log_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model system_logs {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  level         String
  category      String
  message       String
  timestamp     DateTime  @default(now()) @db.Timestamptz(6)
  user_id       String?   @db.Uuid
  session_id    String?
  request_id    String?
  ip_address    String?   @db.Inet
  user_agent    String?
  method        String?
  url           String?
  status_code   Int?
  response_time Int?
  metadata      Json?
  error_stack   String?
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  users         users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction)

  @@index([category], map: "idx_system_logs_category")
  @@index([created_at], map: "idx_system_logs_created_at")
  @@index([level], map: "idx_system_logs_level")
  @@index([timestamp(sort: Desc)], map: "idx_system_logs_timestamp")
  @@index([user_id], map: "idx_system_logs_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_activities {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id         String    @db.Uuid
  user_id         String    @db.Uuid
  activity_type   String    @db.VarChar(50)
  content         String?
  old_value       Json?
  new_value       Json?
  mentioned_users String[]  @default([]) @db.Uuid
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  updated_at      DateTime? @default(now()) @db.Timestamptz(6)
  tasks           tasks     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_task_activities_created_at")
  @@index([task_id], map: "idx_task_activities_task_id")
  @@index([activity_type], map: "idx_task_activities_type")
  @@index([updated_at], map: "idx_task_activities_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_activity {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id    String?   @db.Uuid
  user_id    String?   @db.Uuid
  action     String
  changes    Json?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_task_activity_created_at")
  @@index([task_id], map: "idx_task_activity_task_id")
  @@index([user_id], map: "idx_task_activity_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_attachments {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id              String    @db.Uuid
  file_name            String    @db.VarChar(255)
  file_path            String
  file_size            BigInt
  mime_type            String?   @db.VarChar(100)
  thumbnail_path       String?
  uploaded_by          String    @db.Uuid
  can_move_to_system   Boolean?  @default(true)
  moved_to_entity_type String?   @db.VarChar(50)
  moved_to_entity_id   String?   @db.Uuid
  moved_at             DateTime? @db.Timestamptz(6)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  tasks                tasks     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_task_attachments_created_at")
  @@index([task_id], map: "idx_task_attachments_task_id")
  @@index([updated_at], map: "idx_task_attachments_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_automation_rules {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String          @db.VarChar(255)
  description        String?
  trigger_event      String          @db.VarChar(100)
  trigger_conditions Json?           @default("{}")
  task_template_id   String?         @db.Uuid
  task_config        Json
  assignment_rule    String?         @db.VarChar(50)
  assignment_config  Json?
  depends_on_tasks   Json?           @default("[]")
  is_active          Boolean?        @default(true)
  created_by         String?         @db.Uuid
  created_at         DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?       @default(now()) @db.Timestamptz(6)
  user_profiles      user_profiles?  @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task_templates     task_templates? @relation(fields: [task_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([is_active], map: "idx_task_automation_rules_active")
  @@index([trigger_event], map: "idx_task_automation_rules_event")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_comments {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id    String?   @db.Uuid
  user_id    String?   @db.Uuid
  comment    String
  mentions   String[]  @default([]) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_task_comments_created_at")
  @@index([task_id], map: "idx_task_comments_task_id")
  @@index([user_id], map: "idx_task_comments_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_entity_links {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  task_id     String    @db.Uuid
  entity_type String    @db.VarChar(50)
  entity_id   String    @db.Uuid
  entity_name String?   @db.VarChar(255)
  link_type   String?   @default("related") @db.VarChar(20)
  created_by  String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  tasks       tasks     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([task_id, entity_type, entity_id], map: "unique_task_entity_link")
  @@index([created_at], map: "idx_task_entity_links_created_at")
  @@index([task_id], map: "idx_task_entity_links_task_id")
  @@index([updated_at], map: "idx_task_entity_links_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model task_templates {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                  String                  @unique
  description           String?
  template_data         Json
  category              String?
  is_active             Boolean?                @default(true)
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  updated_at            DateTime?               @default(now()) @db.Timestamp(6)
  task_automation_rules task_automation_rules[]

  @@index([created_at], map: "idx_task_templates_created_at")
  @@index([is_active], map: "idx_task_templates_is_active")
  @@index([updated_at], map: "idx_task_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tasks {
  id                String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title             String              @db.VarChar
  description       String?
  status            String?             @default("todo") @db.VarChar
  priority          String?             @default("medium") @db.VarChar
  assigned_to       String[]            @db.Uuid
  created_by        String?             @db.Uuid
  project_id        String?             @db.Uuid
  department        String?             @default("admin") @db.VarChar
  visibility        String?             @default("company") @db.VarChar
  mentioned_users   String[]            @db.Uuid
  tags              String[]
  due_date          DateTime?           @db.Timestamptz(6)
  start_date        DateTime?           @db.Timestamptz(6)
  estimated_hours   Int?
  actual_hours      Int?
  position          Int?
  watchers          String[]            @db.Uuid
  depends_on        String[]            @db.Uuid
  blocks            String[]            @db.Uuid
  task_type         String?             @default("task") @db.VarChar
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?           @default(now()) @db.Timestamptz(6)
  completed_at      DateTime?           @db.Timestamptz(6)
  reporter_id       String?             @db.Uuid
  resolution        String?
  archived_at       DateTime?           @db.Timestamptz(6)
  archived_by       String?             @db.Uuid
  last_activity_at  DateTime?           @default(now()) @db.Timestamptz(6)
  is_completed      Boolean?            @default(false)
  task_activities   task_activities[]
  task_attachments  task_attachments[]
  task_entity_links task_entity_links[]
  time_entries      time_entries[]

  @@index([assigned_to], map: "idx_tasks_assigned_to")
  @@index([assigned_to, status], map: "idx_tasks_assignee_status")
  @@index([created_at], map: "idx_tasks_created_at")
  @@index([department], map: "idx_tasks_department")
  @@index([due_date], map: "idx_tasks_due_date")
  @@index([priority], map: "idx_tasks_priority")
  @@index([status], map: "idx_tasks_status")
  @@index([status, due_date], map: "idx_tasks_status_due_date")
  @@index([status, priority], map: "idx_tasks_status_priority")
  @@index([updated_at], map: "idx_tasks_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tax_rates {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  rate                Decimal   @db.Decimal(5, 2)
  tax_agency          String?
  quickbooks_tax_code String?
  is_compound         Boolean?  @default(false)
  is_default          Boolean?  @default(false)
  active              Boolean?  @default(true)
  created_at          DateTime? @default(now()) @db.Timestamp(6)

  @@index([created_at], map: "idx_tax_rates_created_at")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_members {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_id   String?   @db.Uuid
  user_id   String?   @db.Uuid
  role      String?
  joined_at DateTime? @default(now()) @db.Timestamp(6)
  teams     teams?    @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users     users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([team_id, user_id])
  @@index([team_id], map: "idx_team_members_team_id")
  @@index([user_id], map: "idx_team_members_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String         @unique
  description  String?
  created_by   String?        @db.Uuid
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  team_members team_members[]
  users        users?         @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_teams_created_at")
  @@index([created_by], map: "idx_teams_created_by")
  @@index([updated_at], map: "idx_teams_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model templates {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @db.VarChar(255)
  description     String?
  category        template_category
  thumbnail_url   String?
  template_config Json
  page_layouts    Json
  brand_config    Json?
  is_public       Boolean           @default(true)
  created_by_id   String?           @db.Uuid
  use_count       Int               @default(0)
  tags            String[]          @default([])
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  user_profiles   user_profiles?    @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_templates_creator")

  @@index([category], map: "idx_templates_category")
  @@index([created_at], map: "idx_templates_created_at")
  @@index([created_by_id], map: "idx_templates_creator")
  @@index([is_public], map: "idx_templates_public")
  @@index([updated_at], map: "idx_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tenants {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String     @unique
  slug       String?    @unique
  settings   Json?      @default("{}")
  is_active  Boolean?   @default(true)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  profiles   profiles[]
  projects   projects[]

  @@index([created_at], map: "idx_tenants_created_at")
  @@index([is_active], map: "idx_tenants_is_active")
  @@index([updated_at], map: "idx_tenants_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model thread_messages {
  id                    String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  thread_id             String                @db.Uuid
  message               String
  message_type          String?               @default("text") @db.VarChar(50)
  attachments           Json?                 @default("[]")
  sent_by               String?               @db.Uuid
  sent_at               DateTime?             @default(now()) @db.Timestamptz(6)
  read_by               String[]              @default([]) @db.Uuid
  edited                Boolean?              @default(false)
  edited_at             DateTime?             @db.Timestamptz(6)
  user_profiles         user_profiles?        @relation(fields: [sent_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  communication_threads communication_threads @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sent_at(sort: Desc)], map: "idx_thread_messages_sent_at")
  @@index([sent_by], map: "idx_thread_messages_sent_by")
  @@index([thread_id], map: "idx_thread_messages_thread")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model thread_participants {
  id                                                        String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  thread_id                                                 String                @db.Uuid
  user_id                                                   String                @db.Uuid
  role                                                      String?               @db.VarChar(50)
  joined_at                                                 DateTime?             @default(now()) @db.Timestamptz(6)
  last_read_at                                              DateTime?             @db.Timestamptz(6)
  muted                                                     Boolean?              @default(false)
  added_by                                                  String?               @db.Uuid
  user_profiles_thread_participants_added_byTouser_profiles user_profiles?        @relation("thread_participants_added_byTouser_profiles", fields: [added_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  communication_threads                                     communication_threads @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_profiles_thread_participants_user_idTouser_profiles  user_profiles         @relation("thread_participants_user_idTouser_profiles", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([thread_id, user_id])
  @@index([thread_id], map: "idx_thread_participants_thread")
  @@index([user_id], map: "idx_thread_participants_user")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model time_entries {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  task_id     String    @db.Uuid
  user_id     String    @db.VarChar(255)
  description String?
  start_time  DateTime  @db.Timestamptz(6)
  end_time    DateTime? @db.Timestamptz(6)
  duration    Int?
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  tasks       tasks     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_time_entries_task")

  @@index([created_at], map: "idx_time_entries_created_at")
  @@index([end_time], map: "idx_time_entries_end_time")
  @@index([start_time], map: "idx_time_entries_start_time")
  @@index([task_id], map: "idx_time_entries_task_id")
  @@index([task_id, user_id], map: "idx_time_entries_task_user")
  @@index([updated_at], map: "idx_time_entries_updated_at")
  @@index([user_id], map: "idx_time_entries_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tracking_milestones {
  id                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shipment_id                String?   @db.Uuid
  milestone_code             String?
  milestone_description      String?
  location                   String?
  carrier_status_code        String?
  carrier_status_description String?
  milestone_date             DateTime  @db.Timestamp(6)
  estimated                  Boolean?  @default(false)
  signature                  String?
  pod_url                    String?
  exception_reason           String?
  raw_data                   Json?
  created_at                 DateTime? @default(now()) @db.Timestamp(6)

  @@unique([shipment_id, milestone_code, milestone_date])
  @@index([created_at], map: "idx_tracking_milestones_created_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_dashboards {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id          String?   @db.Uuid
  dashboard_name   String    @db.VarChar(255)
  dashboard_layout Json?     @default("[]")
  widget_ids       String[]  @default([]) @db.Uuid
  is_default       Boolean?  @default(false)
  is_shared        Boolean?  @default(false)
  shared_with      String[]  @default([]) @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  users            users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_user_dashboards_created_at")
  @@index([updated_at], map: "idx_user_dashboards_updated_at")
  @@index([user_id], map: "idx_user_dashboards_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_document_permissions {
  id                    String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id               String    @unique @db.Uuid
  can_access_documents  Boolean?  @default(true)
  can_download          Boolean?  @default(true)
  can_upload            Boolean?  @default(true)
  can_delete            Boolean?  @default(false)
  can_approve           Boolean?  @default(false)
  can_share             Boolean?  @default(false)
  max_upload_size_mb    Int?      @default(50)
  storage_quota_gb      Decimal?  @db.Decimal(10, 2)
  storage_used_gb       Decimal?  @default(0) @db.Decimal(10, 2)
  allowed_file_types    String[]
  restricted_categories String[]
  access_expires_at     DateTime? @db.Timestamptz(6)
  download_expires_at   DateTime? @db.Timestamptz(6)
  created_at            DateTime? @default(now()) @db.Timestamptz(6)
  updated_at            DateTime? @default(now()) @db.Timestamptz(6)
  created_by            String?   @db.Uuid
  last_modified_by      String?   @db.Uuid
  notes                 String?
  permission_reason     String?
  permission_history    Json?     @default("[]")

  @@index([user_id], map: "idx_user_doc_permissions_user")
  @@index([created_at], map: "idx_user_document_permissions_created_at")
  @@index([updated_at], map: "idx_user_document_permissions_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_feature_overrides {
  id                                                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                           String    @db.Uuid
  feature_name                                      String    @db.VarChar(100)
  is_enabled                                        Boolean
  override_reason                                   String?
  overridden_by                                     String?   @db.Uuid
  created_at                                        DateTime? @default(now()) @db.Timestamptz(6)
  users_user_feature_overrides_overridden_byTousers users?    @relation("user_feature_overrides_overridden_byTousers", fields: [overridden_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_user_feature_overrides_user_idTousers       users     @relation("user_feature_overrides_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, feature_name])
  @@index([created_at], map: "idx_user_feature_overrides_created_at")
  @@index([overridden_by], map: "idx_user_feature_overrides_overridden_by")
  @@index([user_id], map: "idx_user_feature_overrides_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_notification_preferences {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String        @unique @db.Uuid
  channels      Json          @default("{\"email\": true, \"in_app\": true, \"google_chat\": false}")
  categories    Json          @default("{\"task\": {\"email\": true, \"in_app\": true}, \"alert\": {\"email\": true, \"in_app\": true, \"google_chat\": true}, \"order\": {\"email\": true, \"in_app\": true}, \"system\": {\"email\": true, \"in_app\": true}, \"message\": {\"email\": false, \"in_app\": true}, \"payment\": {\"email\": true, \"in_app\": true}, \"shipping\": {\"email\": true, \"in_app\": true}, \"production\": {\"email\": false, \"in_app\": true}}")
  quiet_hours   Json?
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id], map: "idx_user_notification_preferences_user_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_permissions {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String    @db.Uuid
  module      String    @db.VarChar(50)
  can_view    Boolean?  @default(false)
  can_edit    Boolean?  @default(false)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  can_create  Boolean?  @default(false)
  can_delete  Boolean?  @default(false)
  can_approve Boolean?  @default(false)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, module])
  @@index([created_at], map: "idx_user_permissions_created_at")
  @@index([updated_at], map: "idx_user_permissions_updated_at")
  @@index([user_id], map: "idx_user_permissions_user_id")
  @@index([user_id, module], map: "idx_user_permissions_user_module")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_preferences {
  id                  String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id             String?   @unique @db.Uuid
  notification_email  Boolean?  @default(true)
  notification_sms    Boolean?  @default(false)
  notification_in_app Boolean?  @default(true)
  theme               String?   @default("light") @db.VarChar(20)
  language            String?   @default("en") @db.VarChar(10)
  timezone            String?   @default("UTC") @db.VarChar(50)
  date_format         String?   @default("MM/DD/YYYY") @db.VarChar(20)
  time_format         String?   @default("12h") @db.VarChar(20)
  email_digest        String?   @default("daily") @db.VarChar(20)
  metadata            Json?     @default("{}")
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)
  users               users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_user_preferences_created_at")
  @@index([updated_at], map: "idx_user_preferences_updated_at")
  @@index([user_id], map: "idx_user_preferences_user_id")
  @@schema("public")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_profiles {
  id                                                                String                         @id @db.Uuid
  email                                                             String?
  name                                                              String?
  avatar_url                                                        String?
  created_at                                                        DateTime?                      @default(now()) @db.Timestamp(6)
  updated_at                                                        DateTime?                      @default(now()) @db.Timestamp(6)
  title                                                             String?                        @db.VarChar(100)
  user_type                                                         user_type_enum?                @default(employee)
  is_active                                                         Boolean?                       @default(true)
  department                                                        String?                        @db.VarChar(100)
  hire_date                                                         DateTime?                      @db.Date
  permissions                                                       Json?                          @default("{}")
  is_sso_user                                                       Boolean?                       @default(false)
  sso_provider                                                      String?
  google_workspace_id                                               String?
  last_sso_login                                                    DateTime?                      @db.Timestamptz(6)
  user_id                                                           String?                        @unique @db.Uuid
  first_name                                                        String?
  last_name                                                         String?
  full_name                                                         String?                        @default(dbgenerated("((COALESCE(first_name, ''::text) ||\nCASE\n    WHEN ((first_name IS NOT NULL) AND (last_name IS NOT NULL)) THEN ' '::text\n    ELSE ''::text\nEND) || COALESCE(last_name, ''::text))"))
  job_title                                                         String?
  raw_metadata                                                      Json?
  analytics_events                                                  analytics_events[]
  board_activity_log                                                board_activity_log[]
  board_collaborators_board_collaborators_invited_byTouser_profiles board_collaborators[]          @relation("board_collaborators_invited_byTouser_profiles")
  board_collaborators_board_collaborators_user_idTouser_profiles    board_collaborators[]          @relation("board_collaborators_user_idTouser_profiles")
  board_comments_board_comments_resolved_byTouser_profiles          board_comments[]               @relation("board_comments_resolved_byTouser_profiles")
  board_comments_board_comments_user_idTouser_profiles              board_comments[]               @relation("board_comments_user_idTouser_profiles")
  board_objects                                                     board_objects[]
  board_snapshots                                                   board_snapshots[]
  board_templates                                                   board_templates[]
  board_votes                                                       board_votes[]
  communication_threads                                             communication_threads[]
  design_boards                                                     design_boards[]
  document_access_log                                               document_access_log[]
  document_approval_workflow                                        document_approval_workflow[]
  document_comments_document_comments_commented_byTouser_profiles   document_comments[]            @relation("document_comments_commented_byTouser_profiles")
  document_comments_document_comments_resolved_byTouser_profiles    document_comments[]            @relation("document_comments_resolved_byTouser_profiles")
  document_revisions_document_revisions_changed_byTouser_profiles   document_revisions[]           @relation("document_revisions_changed_byTouser_profiles")
  document_revisions_document_revisions_reviewed_byTouser_profiles  document_revisions[]           @relation("document_revisions_reviewed_byTouser_profiles")
  documents_documents_approved_byTouser_profiles                    documents[]                    @relation("documents_approved_byTouser_profiles")
  documents_documents_uploaded_by_userTouser_profiles               documents[]                    @relation("documents_uploaded_by_userTouser_profiles")
  flipbook_conversions                                              flipbook_conversions[]
  flipbook_share_links                                              flipbook_share_links[]
  flipbook_versions                                                 flipbook_versions[]
  flipbooks                                                         flipbooks[]
  portal_access_audit                                               portal_access_audit[]
  portal_activity_logs                                              portal_activity_logs[]
  task_automation_rules                                             task_automation_rules[]
  templates                                                         templates[]
  thread_messages                                                   thread_messages[]
  thread_participants_thread_participants_added_byTouser_profiles   thread_participants[]          @relation("thread_participants_added_byTouser_profiles")
  thread_participants_thread_participants_user_idTouser_profiles    thread_participants[]          @relation("thread_participants_user_idTouser_profiles")
  user_notification_preferences                                     user_notification_preferences?
  users_user_profiles_idTousers                                     users                          @relation("user_profiles_idTousers", fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users_user_profiles_user_idTousers                                users?                         @relation("user_profiles_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_user_profiles_created_at")
  @@index([created_at(sort: Desc)], map: "idx_user_profiles_created_at_desc")
  @@index([department], map: "idx_user_profiles_department")
  @@index([department, is_active], map: "idx_user_profiles_dept_active")
  @@index([email], map: "idx_user_profiles_email")
  @@index([is_active], map: "idx_user_profiles_is_active")
  @@index([user_type, is_active], map: "idx_user_profiles_type_active")
  @@index([updated_at], map: "idx_user_profiles_updated_at")
  @@index([user_id], map: "idx_user_profiles_user_id")
  @@index([user_type], map: "idx_user_profiles_user_type")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_roles {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?  @db.Uuid
  role       String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  is_active  Boolean  @default(true)
  users      users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role], map: "unique_user_role")
  @@index([created_at], map: "idx_user_roles_created_at")
  @@index([is_active], map: "idx_user_roles_is_active")
  @@index([updated_at], map: "idx_user_roles_updated_at")
  @@index([user_id], map: "idx_user_roles_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model verification_logs {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id            String?   @db.Uuid
  email              String?   @db.VarChar(255)
  type               String    @db.VarChar(50)
  success            Boolean
  ip_address         String?   @db.VarChar(45)
  user_agent         String?
  error_message      String?
  metadata           Json?     @default("{}")
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  phone_number       String?   @db.VarChar(20)
  provider           String?   @db.VarChar(50)
  delivery_status    String?   @db.VarChar(20)
  delivery_timestamp DateTime? @db.Timestamptz(6)
  users              users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_at], map: "idx_verification_logs_created_at")
  @@index([email], map: "idx_verification_logs_email")
  @@index([phone_number], map: "idx_verification_logs_phone")
  @@index([provider], map: "idx_verification_logs_provider")
  @@index([type], map: "idx_verification_logs_type")
  @@index([user_id], map: "idx_verification_logs_user_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webhook_deliveries {
  id                String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  endpoint_id       String?            @db.Uuid
  event_type        String
  payload           Json
  response_status   Int?
  response_body     String?
  attempted_at      DateTime?          @default(now()) @db.Timestamp(6)
  delivered_at      DateTime?          @db.Timestamp(6)
  retry_count       Int?               @default(0)
  next_retry_at     DateTime?          @db.Timestamp(6)
  created_at        DateTime?          @default(now()) @db.Timestamp(6)
  webhook_endpoints webhook_endpoints? @relation(fields: [endpoint_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_webhook_deliveries_created_at")
  @@index([endpoint_id], map: "idx_webhook_deliveries_endpoint_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model webhook_endpoints {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id        String?              @db.Uuid
  url                String
  secret             String?
  events             String[]             @default([])
  is_active          Boolean?             @default(true)
  last_success       DateTime?            @db.Timestamp(6)
  last_failure       DateTime?            @db.Timestamp(6)
  failure_count      Int?                 @default(0)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  webhook_deliveries webhook_deliveries[]
  customers          customers?           @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_webhook_endpoints_created_at")
  @@index([customer_id], map: "idx_webhook_endpoints_customer_id")
  @@index([is_active], map: "idx_webhook_endpoints_is_active")
  @@index([updated_at], map: "idx_webhook_endpoints_updated_at")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_execution_logs {
  id                       String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  execution_id             String                    @db.Uuid
  step_execution_id        String?                   @db.Uuid
  level                    String                    @db.VarChar(20)
  message                  String
  data                     Json?
  created_at               DateTime?                 @default(now()) @db.Timestamptz(6)
  workflow_executions      workflow_executions       @relation(fields: [execution_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workflow_step_executions workflow_step_executions? @relation(fields: [step_execution_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)], map: "idx_workflow_execution_logs_created")
  @@index([execution_id], map: "idx_workflow_execution_logs_execution")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_executions {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id              String                     @db.Uuid
  started_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  completed_at             DateTime?                  @db.Timestamptz(6)
  status                   String                     @default("running") @db.VarChar(20)
  trigger_data             Json?                      @default("{}")
  execution_context        Json?                      @default("{}")
  execution_result         Json?                      @default("{}")
  error_message            String?
  error_details            Json?
  duration_ms              Int?
  steps_completed          Int?                       @default(0)
  steps_total              Int?
  initiated_by             String?                    @db.Uuid
  cancelled_by             String?                    @db.Uuid
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  workflow_execution_logs  workflow_execution_logs[]
  workflows                workflows                  @relation(fields: [workflow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workflow_step_executions workflow_step_executions[]

  @@index([created_at(sort: Desc)], map: "idx_workflow_executions_created")
  @@index([created_at], map: "idx_workflow_executions_created_at")
  @@index([started_at(sort: Desc)], map: "idx_workflow_executions_started")
  @@index([status], map: "idx_workflow_executions_status")
  @@index([workflow_id], map: "idx_workflow_executions_workflow")
  @@index([workflow_id], map: "idx_workflow_executions_workflow_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_step_executions {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  execution_id            String                    @db.Uuid
  step_id                 String                    @db.VarChar(255)
  step_type               String                    @db.VarChar(50)
  step_name               String?                   @db.VarChar(255)
  status                  String                    @default("pending") @db.VarChar(50)
  input_data              Json?
  output_data             Json?
  error_message           String?
  retry_count             Int?                      @default(0)
  started_at              DateTime?                 @db.Timestamptz(6)
  completed_at            DateTime?                 @db.Timestamptz(6)
  created_at              DateTime?                 @default(now()) @db.Timestamptz(6)
  workflow_execution_logs workflow_execution_logs[]
  workflow_executions     workflow_executions       @relation(fields: [execution_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([execution_id], map: "idx_workflow_step_executions_execution")
  @@index([status], map: "idx_workflow_step_executions_status")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_steps {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id      String    @db.Uuid
  step_order       Int
  step_name        String    @db.VarChar(255)
  step_type        String    @db.VarChar(50)
  step_config      Json?     @default("{}")
  is_required      Boolean?  @default(true)
  retry_on_failure Boolean?  @default(false)
  max_retries      Int?      @default(3)
  timeout_seconds  Int?      @default(300)
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  workflows        workflows @relation(fields: [workflow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([workflow_id, step_order], map: "unique_workflow_step_order")
  @@index([created_at], map: "idx_workflow_steps_created_at")
  @@index([updated_at], map: "idx_workflow_steps_updated_at")
  @@index([workflow_id], map: "idx_workflow_steps_workflow_id")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_templates {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String    @unique @db.VarChar(255)
  description         String?
  category            String?   @db.VarChar(50)
  template_definition Json
  icon                String?   @db.VarChar(50)
  is_public           Boolean?  @default(false)
  usage_count         Int?      @default(0)
  created_by          String?   @db.Uuid
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @default(now()) @db.Timestamptz(6)

  @@index([category], map: "idx_workflow_templates_category")
  @@index([created_at], map: "idx_workflow_templates_created_at")
  @@index([updated_at], map: "idx_workflow_templates_updated_at")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflows {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                String?
  description         String?
  trigger_type        String?
  trigger_config      Json?
  status              String?
  workflow_definition Json?
  last_run_at         String?
  last_run_status     String?
  last_run_error      String?
  run_count           Int?
  success_count       Int?
  failure_count       Int?
  department_id       String?
  created_by          String?
  updated_by          String?
  tags                String?
  category            String?
  priority            Int?
  is_template         Boolean?
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  deleted_at          String?
  workflow_executions workflow_executions[]
  workflow_steps      workflow_steps[]

  @@unique([name, deleted_at], map: "workflow_name_unique")
  @@index([category], map: "idx_workflows_category")
  @@index([created_at], map: "idx_workflows_created_at")
  @@index([deleted_at], map: "idx_workflows_deleted_at")
  @@index([department_id], map: "idx_workflows_department")
  @@index([status], map: "idx_workflows_status")
  @@index([trigger_type], map: "idx_workflows_trigger_type")
  @@index([updated_at], map: "idx_workflows_updated_at")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum oauth_authorization_status {
  pending
  approved
  denied
  expired

  @@schema("auth")
}

enum oauth_client_type {
  public
  confidential

  @@schema("auth")
}

enum oauth_registration_type {
  dynamic
  manual

  @@schema("auth")
}

enum oauth_response_type {
  code

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum address_type {
  Business
  Residential

  @@schema("public")
}

enum address_type_enum {
  delivery
  billing
  pickup

  @@schema("public")
}

enum ai_generation_status {
  PENDING
  PROCESSING
  COMPLETED
  FAILED

  @@schema("public")
}

enum analytics_event_type {
  VIEW
  PAGE_TURN
  HOTSPOT_CLICK
  SHARE
  DOWNLOAD
  ZOOM
  SEARCH

  @@schema("public")
}

enum defect_severity_enum {
  critical
  major
  minor
  cosmetic

  @@schema("public")
}

enum document_access_level {
  private
  internal
  client_visible
  public

  @@schema("public")
}

enum document_category {
  design
  production
  prototyping
  shop_drawings
  invoices
  contracts
  correspondence
  photos
  qc_reports
  shipping
  other

  @@schema("public")
}

enum document_status {
  draft
  pending_review
  in_review
  approved
  rejected
  revision_requested
  archived
  deleted

  @@schema("public")
}

enum file_type_category {
  document
  image
  cad_3d
  vector
  video
  archive
  other

  @@schema("public")
}

enum flipbook_status {
  DRAFT
  PUBLISHED
  ARCHIVED

  @@schema("public")
}

enum manufacturer_status_enum {
  prospect
  approved
  preferred
  suspended
  inactive

  @@schema("public")
}

enum order_priority_enum {
  low
  normal
  high
  urgent

  @@schema("public")
}

enum order_status_enum {
  draft
  pending
  confirmed
  deposit_paid
  sent_to_production
  completed
  freight_on_board
  final_invoice_sent
  cancelled

  @@schema("public")
}

enum order_type_enum {
  standard
  custom
  rush
  sample

  @@schema("public")
}

enum packing_material_type_enum {
  box
  padding
  wrap
  tape
  label
  cushioning

  @@schema("public")
}

enum packing_status_enum {
  pending
  in_progress
  packed
  shipped

  @@schema("public")
}

enum payment_status_enum {
  pending
  partial
  paid
  refunded
  overdue

  @@schema("public")
}

enum priority_enum {
  urgent
  high
  normal
  low

  @@schema("public")
}

enum production_order_status_enum {
  awaiting_deposit
  deposit_paid
  in_production
  qc
  packing
  freight_on_board
  shipped
  delivered
  cancelled

  @@schema("public")
}

enum production_status_enum {
  planned
  in_progress
  quality_check
  completed
  delayed
  on_hold

  @@schema("public")
}

enum qc_checkpoint_status_enum {
  pending
  passed
  failed
  na

  @@schema("public")
}

enum qc_stage_enum {
  incoming_inspection
  in_process_check
  final_inspection
  packaging_check

  @@schema("public")
}

enum qc_status_enum {
  pending
  in_progress
  passed
  failed
  on_hold

  @@schema("public")
}

enum quickbooks_sync_status {
  pending
  in_progress
  completed
  failed
  skipped

  @@schema("public")
}

enum shipping_status_enum {
  pending
  picked_up
  in_transit
  out_for_delivery
  delivered
  exception
  returned

  @@schema("public")
}

enum sync_direction {
  to_quickbooks
  from_quickbooks
  bidirectional

  @@schema("public")
}

enum template_category {
  PRODUCT_CATALOG
  LOOKBOOK
  BROCHURE
  MENU
  PORTFOLIO

  @@schema("public")
}

enum user_role_enum {
  admin
  manager
  qc_inspector
  packer
  shipping_coordinator
  production_worker

  @@schema("public")
}

enum user_type_enum {
  employee
  contractor
  designer
  manufacturer
  finance
  super_admin
  customer
  admin
  factory
  qc_tester

  @@schema("public")
}
